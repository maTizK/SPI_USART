   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"printf-stdarg.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.printchar,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	printchar:
  25              	.LFB0:
  26              		.file 1 "App/STM32F4-Discovery/printf-stdarg.c"
   1:App/STM32F4-Discovery/printf-stdarg.c **** /*
   2:App/STM32F4-Discovery/printf-stdarg.c **** 	Copyright 2001, 2002 Georges Menie (www.menie.org)
   3:App/STM32F4-Discovery/printf-stdarg.c **** 	stdarg version contributed by Christian Ettinger
   4:App/STM32F4-Discovery/printf-stdarg.c **** 
   5:App/STM32F4-Discovery/printf-stdarg.c ****     This program is free software; you can redistribute it and/or modify
   6:App/STM32F4-Discovery/printf-stdarg.c ****     it under the terms of the GNU Lesser General Public License as published by
   7:App/STM32F4-Discovery/printf-stdarg.c ****     the Free Software Foundation; either version 2 of the License, or
   8:App/STM32F4-Discovery/printf-stdarg.c ****     (at your option) any later version.
   9:App/STM32F4-Discovery/printf-stdarg.c **** 
  10:App/STM32F4-Discovery/printf-stdarg.c ****     This program is distributed in the hope that it will be useful,
  11:App/STM32F4-Discovery/printf-stdarg.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:App/STM32F4-Discovery/printf-stdarg.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:App/STM32F4-Discovery/printf-stdarg.c ****     GNU Lesser General Public License for more details.
  14:App/STM32F4-Discovery/printf-stdarg.c **** 
  15:App/STM32F4-Discovery/printf-stdarg.c ****     You should have received a copy of the GNU Lesser General Public License
  16:App/STM32F4-Discovery/printf-stdarg.c ****     along with this program; if not, write to the Free Software
  17:App/STM32F4-Discovery/printf-stdarg.c ****     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  18:App/STM32F4-Discovery/printf-stdarg.c **** */
  19:App/STM32F4-Discovery/printf-stdarg.c **** 
  20:App/STM32F4-Discovery/printf-stdarg.c **** /*
  21:App/STM32F4-Discovery/printf-stdarg.c **** 	putchar is the only external dependency for this file,
  22:App/STM32F4-Discovery/printf-stdarg.c **** 	if you have a working putchar, leave it commented out.
  23:App/STM32F4-Discovery/printf-stdarg.c **** 	If not, uncomment the define below and
  24:App/STM32F4-Discovery/printf-stdarg.c **** 	replace outbyte(c) by your own function call.
  25:App/STM32F4-Discovery/printf-stdarg.c **** 
  26:App/STM32F4-Discovery/printf-stdarg.c **** */
  27:App/STM32F4-Discovery/printf-stdarg.c **** 
  28:App/STM32F4-Discovery/printf-stdarg.c **** #define putchar(c) c
  29:App/STM32F4-Discovery/printf-stdarg.c **** 
  30:App/STM32F4-Discovery/printf-stdarg.c **** #include <stdarg.h>
  31:App/STM32F4-Discovery/printf-stdarg.c **** 
  32:App/STM32F4-Discovery/printf-stdarg.c **** static void printchar(char **str, int c)
  33:App/STM32F4-Discovery/printf-stdarg.c **** {
  27              		.loc 1 33 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
  43 0008 3960     		str	r1, [r7]
  34:App/STM32F4-Discovery/printf-stdarg.c **** 	//extern int putchar(int c);
  35:App/STM32F4-Discovery/printf-stdarg.c **** 	
  36:App/STM32F4-Discovery/printf-stdarg.c **** 	if (str) {
  44              		.loc 1 36 0
  45 000a 7B68     		ldr	r3, [r7, #4]
  46 000c 002B     		cmp	r3, #0
  47 000e 09D0     		beq	.L1
  37:App/STM32F4-Discovery/printf-stdarg.c **** 		**str = (char)c;
  48              		.loc 1 37 0
  49 0010 7B68     		ldr	r3, [r7, #4]
  50 0012 1B68     		ldr	r3, [r3]
  51 0014 3A68     		ldr	r2, [r7]
  52 0016 D2B2     		uxtb	r2, r2
  53 0018 1A70     		strb	r2, [r3]
  38:App/STM32F4-Discovery/printf-stdarg.c **** 		++(*str);
  54              		.loc 1 38 0
  55 001a 7B68     		ldr	r3, [r7, #4]
  56 001c 1B68     		ldr	r3, [r3]
  57 001e 5A1C     		adds	r2, r3, #1
  58 0020 7B68     		ldr	r3, [r7, #4]
  59 0022 1A60     		str	r2, [r3]
  60              	.L1:
  39:App/STM32F4-Discovery/printf-stdarg.c **** 	}
  40:App/STM32F4-Discovery/printf-stdarg.c **** 	else
  41:App/STM32F4-Discovery/printf-stdarg.c **** 	{ 
  42:App/STM32F4-Discovery/printf-stdarg.c **** 		(void)putchar(c);
  43:App/STM32F4-Discovery/printf-stdarg.c **** 	}
  44:App/STM32F4-Discovery/printf-stdarg.c **** }
  61              		.loc 1 44 0
  62 0024 0C37     		adds	r7, r7, #12
  63 0026 BD46     		mov	sp, r7
  64              		@ sp needed
  65 0028 5DF8047B 		ldr	r7, [sp], #4
  66 002c 7047     		bx	lr
  67              		.cfi_endproc
  68              	.LFE0:
  70 002e 00BF     		.section	.text.prints,"ax",%progbits
  71              		.align	2
  72              		.thumb
  73              		.thumb_func
  75              	prints:
  76              	.LFB1:
  45:App/STM32F4-Discovery/printf-stdarg.c **** 
  46:App/STM32F4-Discovery/printf-stdarg.c **** #define PAD_RIGHT 1
  47:App/STM32F4-Discovery/printf-stdarg.c **** #define PAD_ZERO 2
  48:App/STM32F4-Discovery/printf-stdarg.c **** //*************************************************************************************************
  49:App/STM32F4-Discovery/printf-stdarg.c **** //*************************************************************************************************
  50:App/STM32F4-Discovery/printf-stdarg.c **** //*************************************************************************************************
  51:App/STM32F4-Discovery/printf-stdarg.c **** //*************************************************************************************************
  52:App/STM32F4-Discovery/printf-stdarg.c **** static int prints(char **out, const char *string, int width, int pad)
  53:App/STM32F4-Discovery/printf-stdarg.c **** {
  77              		.loc 1 53 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 16
  80              		@ frame_needed = 1, uses_anonymous_args = 0
  81 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  82              	.LCFI3:
  83              		.cfi_def_cfa_offset 24
  84              		.cfi_offset 4, -24
  85              		.cfi_offset 5, -20
  86              		.cfi_offset 6, -16
  87              		.cfi_offset 7, -12
  88              		.cfi_offset 8, -8
  89              		.cfi_offset 14, -4
  90 0004 84B0     		sub	sp, sp, #16
  91              	.LCFI4:
  92              		.cfi_def_cfa_offset 40
  93 0006 00AF     		add	r7, sp, #0
  94              	.LCFI5:
  95              		.cfi_def_cfa_register 7
  96 0008 F860     		str	r0, [r7, #12]
  97 000a B960     		str	r1, [r7, #8]
  98 000c 7A60     		str	r2, [r7, #4]
  99 000e 3B60     		str	r3, [r7]
  54:App/STM32F4-Discovery/printf-stdarg.c **** 	register int pc = 0, padchar = ' ';
 100              		.loc 1 54 0
 101 0010 0024     		movs	r4, #0
 102 0012 2026     		movs	r6, #32
  55:App/STM32F4-Discovery/printf-stdarg.c **** 
  56:App/STM32F4-Discovery/printf-stdarg.c **** 	if (width > 0) {
 103              		.loc 1 56 0
 104 0014 7B68     		ldr	r3, [r7, #4]
 105 0016 002B     		cmp	r3, #0
 106 0018 19DD     		ble	.L4
 107              	.LBB2:
  57:App/STM32F4-Discovery/printf-stdarg.c **** 		register int len = 0;
 108              		.loc 1 57 0
 109 001a 0025     		movs	r5, #0
  58:App/STM32F4-Discovery/printf-stdarg.c **** 		register const char *ptr;
  59:App/STM32F4-Discovery/printf-stdarg.c **** 		for (ptr = string; *ptr; ++ptr) ++len;
 110              		.loc 1 59 0
 111 001c D7F80880 		ldr	r8, [r7, #8]
 112 0020 02E0     		b	.L5
 113              	.L6:
 114              		.loc 1 59 0 is_stmt 0 discriminator 2
 115 0022 0135     		adds	r5, r5, #1
 116 0024 08F10108 		add	r8, r8, #1
 117              	.L5:
 118              		.loc 1 59 0 discriminator 1
 119 0028 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 120 002c 002B     		cmp	r3, #0
 121 002e F8D1     		bne	.L6
  60:App/STM32F4-Discovery/printf-stdarg.c **** 		if (len >= width) width = 0;
 122              		.loc 1 60 0 is_stmt 1
 123 0030 7B68     		ldr	r3, [r7, #4]
 124 0032 9D42     		cmp	r5, r3
 125 0034 02DB     		blt	.L7
 126              		.loc 1 60 0 is_stmt 0 discriminator 1
 127 0036 0023     		movs	r3, #0
 128 0038 7B60     		str	r3, [r7, #4]
 129 003a 02E0     		b	.L8
 130              	.L7:
  61:App/STM32F4-Discovery/printf-stdarg.c **** 		else width -= len;
 131              		.loc 1 61 0 is_stmt 1
 132 003c 7B68     		ldr	r3, [r7, #4]
 133 003e 5B1B     		subs	r3, r3, r5
 134 0040 7B60     		str	r3, [r7, #4]
 135              	.L8:
  62:App/STM32F4-Discovery/printf-stdarg.c **** 		if (pad & PAD_ZERO) padchar = '0';
 136              		.loc 1 62 0
 137 0042 3B68     		ldr	r3, [r7]
 138 0044 03F00203 		and	r3, r3, #2
 139 0048 002B     		cmp	r3, #0
 140 004a 00D0     		beq	.L4
 141              		.loc 1 62 0 is_stmt 0 discriminator 1
 142 004c 3026     		movs	r6, #48
 143              	.L4:
 144              	.LBE2:
  63:App/STM32F4-Discovery/printf-stdarg.c **** 	}
  64:App/STM32F4-Discovery/printf-stdarg.c **** 	if (!(pad & PAD_RIGHT)) {
 145              		.loc 1 64 0 is_stmt 1
 146 004e 3B68     		ldr	r3, [r7]
 147 0050 03F00103 		and	r3, r3, #1
 148 0054 002B     		cmp	r3, #0
 149 0056 0BD1     		bne	.L9
  65:App/STM32F4-Discovery/printf-stdarg.c **** 		for ( ; width > 0; --width) {
 150              		.loc 1 65 0
 151 0058 07E0     		b	.L10
 152              	.L11:
  66:App/STM32F4-Discovery/printf-stdarg.c **** 			printchar (out, padchar);
 153              		.loc 1 66 0 discriminator 2
 154 005a F868     		ldr	r0, [r7, #12]
 155 005c 3146     		mov	r1, r6
 156 005e FFF7FEFF 		bl	printchar
  67:App/STM32F4-Discovery/printf-stdarg.c **** 			++pc;
 157              		.loc 1 67 0 discriminator 2
 158 0062 0134     		adds	r4, r4, #1
  65:App/STM32F4-Discovery/printf-stdarg.c **** 		for ( ; width > 0; --width) {
 159              		.loc 1 65 0 discriminator 2
 160 0064 7B68     		ldr	r3, [r7, #4]
 161 0066 013B     		subs	r3, r3, #1
 162 0068 7B60     		str	r3, [r7, #4]
 163              	.L10:
  65:App/STM32F4-Discovery/printf-stdarg.c **** 		for ( ; width > 0; --width) {
 164              		.loc 1 65 0 is_stmt 0 discriminator 1
 165 006a 7B68     		ldr	r3, [r7, #4]
 166 006c 002B     		cmp	r3, #0
 167 006e F4DC     		bgt	.L11
 168              	.L9:
  68:App/STM32F4-Discovery/printf-stdarg.c **** 		}
  69:App/STM32F4-Discovery/printf-stdarg.c **** 	}
  70:App/STM32F4-Discovery/printf-stdarg.c **** 	for ( ; *string ; ++string) {
 169              		.loc 1 70 0 is_stmt 1
 170 0070 09E0     		b	.L12
 171              	.L13:
  71:App/STM32F4-Discovery/printf-stdarg.c **** 		printchar (out, *string);
 172              		.loc 1 71 0 discriminator 2
 173 0072 BB68     		ldr	r3, [r7, #8]
 174 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 175 0076 F868     		ldr	r0, [r7, #12]
 176 0078 1946     		mov	r1, r3
 177 007a FFF7FEFF 		bl	printchar
  72:App/STM32F4-Discovery/printf-stdarg.c **** 		++pc;
 178              		.loc 1 72 0 discriminator 2
 179 007e 0134     		adds	r4, r4, #1
  70:App/STM32F4-Discovery/printf-stdarg.c **** 	for ( ; *string ; ++string) {
 180              		.loc 1 70 0 discriminator 2
 181 0080 BB68     		ldr	r3, [r7, #8]
 182 0082 0133     		adds	r3, r3, #1
 183 0084 BB60     		str	r3, [r7, #8]
 184              	.L12:
  70:App/STM32F4-Discovery/printf-stdarg.c **** 	for ( ; *string ; ++string) {
 185              		.loc 1 70 0 is_stmt 0 discriminator 1
 186 0086 BB68     		ldr	r3, [r7, #8]
 187 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 188 008a 002B     		cmp	r3, #0
 189 008c F1D1     		bne	.L13
  73:App/STM32F4-Discovery/printf-stdarg.c **** 	}
  74:App/STM32F4-Discovery/printf-stdarg.c **** 	for ( ; width > 0; --width) {
 190              		.loc 1 74 0 is_stmt 1
 191 008e 07E0     		b	.L14
 192              	.L15:
  75:App/STM32F4-Discovery/printf-stdarg.c **** 		printchar (out, padchar);
 193              		.loc 1 75 0 discriminator 2
 194 0090 F868     		ldr	r0, [r7, #12]
 195 0092 3146     		mov	r1, r6
 196 0094 FFF7FEFF 		bl	printchar
  76:App/STM32F4-Discovery/printf-stdarg.c **** 		++pc;
 197              		.loc 1 76 0 discriminator 2
 198 0098 0134     		adds	r4, r4, #1
  74:App/STM32F4-Discovery/printf-stdarg.c **** 	for ( ; width > 0; --width) {
 199              		.loc 1 74 0 discriminator 2
 200 009a 7B68     		ldr	r3, [r7, #4]
 201 009c 013B     		subs	r3, r3, #1
 202 009e 7B60     		str	r3, [r7, #4]
 203              	.L14:
  74:App/STM32F4-Discovery/printf-stdarg.c **** 	for ( ; width > 0; --width) {
 204              		.loc 1 74 0 is_stmt 0 discriminator 1
 205 00a0 7B68     		ldr	r3, [r7, #4]
 206 00a2 002B     		cmp	r3, #0
 207 00a4 F4DC     		bgt	.L15
  77:App/STM32F4-Discovery/printf-stdarg.c **** 	}
  78:App/STM32F4-Discovery/printf-stdarg.c **** 
  79:App/STM32F4-Discovery/printf-stdarg.c **** 	return pc;
 208              		.loc 1 79 0 is_stmt 1
 209 00a6 2346     		mov	r3, r4
  80:App/STM32F4-Discovery/printf-stdarg.c **** }
 210              		.loc 1 80 0
 211 00a8 1846     		mov	r0, r3
 212 00aa 1037     		adds	r7, r7, #16
 213 00ac BD46     		mov	sp, r7
 214              		@ sp needed
 215 00ae BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 216              		.cfi_endproc
 217              	.LFE1:
 219 00b2 00BF     		.section	.text.printi,"ax",%progbits
 220              		.align	2
 221              		.thumb
 222              		.thumb_func
 224              	printi:
 225              	.LFB2:
  81:App/STM32F4-Discovery/printf-stdarg.c **** 
  82:App/STM32F4-Discovery/printf-stdarg.c **** /* the following should be enough for 32 bit int */
  83:App/STM32F4-Discovery/printf-stdarg.c **** #define PRINT_BUF_LEN 12
  84:App/STM32F4-Discovery/printf-stdarg.c **** 
  85:App/STM32F4-Discovery/printf-stdarg.c **** static int printi(char **out, int i, int b, int sg, int width, int pad, int letbase)
  86:App/STM32F4-Discovery/printf-stdarg.c **** {
 226              		.loc 1 86 0
 227              		.cfi_startproc
 228              		@ args = 12, pretend = 0, frame = 32
 229              		@ frame_needed = 1, uses_anonymous_args = 0
 230 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 231              	.LCFI6:
 232              		.cfi_def_cfa_offset 28
 233              		.cfi_offset 4, -28
 234              		.cfi_offset 5, -24
 235              		.cfi_offset 6, -20
 236              		.cfi_offset 7, -16
 237              		.cfi_offset 8, -12
 238              		.cfi_offset 9, -8
 239              		.cfi_offset 14, -4
 240 0004 89B0     		sub	sp, sp, #36
 241              	.LCFI7:
 242              		.cfi_def_cfa_offset 64
 243 0006 00AF     		add	r7, sp, #0
 244              	.LCFI8:
 245              		.cfi_def_cfa_register 7
 246 0008 F860     		str	r0, [r7, #12]
 247 000a B960     		str	r1, [r7, #8]
 248 000c 7A60     		str	r2, [r7, #4]
 249 000e 3B60     		str	r3, [r7]
  87:App/STM32F4-Discovery/printf-stdarg.c **** 	char print_buf[PRINT_BUF_LEN];
  88:App/STM32F4-Discovery/printf-stdarg.c **** 	register char *s;
  89:App/STM32F4-Discovery/printf-stdarg.c **** 	register int t, neg = 0, pc = 0;
 250              		.loc 1 89 0
 251 0010 4FF00009 		mov	r9, #0
 252 0014 4FF00008 		mov	r8, #0
  90:App/STM32F4-Discovery/printf-stdarg.c **** 	register unsigned int u = (unsigned int)i;
 253              		.loc 1 90 0
 254 0018 BD68     		ldr	r5, [r7, #8]
  91:App/STM32F4-Discovery/printf-stdarg.c **** 
  92:App/STM32F4-Discovery/printf-stdarg.c **** 	if (i == 0) {
 255              		.loc 1 92 0
 256 001a BB68     		ldr	r3, [r7, #8]
 257 001c 002B     		cmp	r3, #0
 258 001e 0DD1     		bne	.L18
  93:App/STM32F4-Discovery/printf-stdarg.c **** 		print_buf[0] = '0';
 259              		.loc 1 93 0
 260 0020 3023     		movs	r3, #48
 261 0022 3B75     		strb	r3, [r7, #20]
  94:App/STM32F4-Discovery/printf-stdarg.c **** 		print_buf[1] = '\0';
 262              		.loc 1 94 0
 263 0024 0023     		movs	r3, #0
 264 0026 7B75     		strb	r3, [r7, #21]
  95:App/STM32F4-Discovery/printf-stdarg.c **** 		return prints (out, print_buf, width, pad);
 265              		.loc 1 95 0
 266 0028 07F11403 		add	r3, r7, #20
 267 002c F868     		ldr	r0, [r7, #12]
 268 002e 1946     		mov	r1, r3
 269 0030 3A6C     		ldr	r2, [r7, #64]
 270 0032 7B6C     		ldr	r3, [r7, #68]
 271 0034 FFF7FEFF 		bl	prints
 272 0038 0346     		mov	r3, r0
 273 003a 49E0     		b	.L26
 274              	.L18:
  96:App/STM32F4-Discovery/printf-stdarg.c **** 	}
  97:App/STM32F4-Discovery/printf-stdarg.c **** 
  98:App/STM32F4-Discovery/printf-stdarg.c **** 	if (sg && b == 10 && i < 0) {
 275              		.loc 1 98 0
 276 003c 3B68     		ldr	r3, [r7]
 277 003e 002B     		cmp	r3, #0
 278 0040 0AD0     		beq	.L20
 279              		.loc 1 98 0 is_stmt 0 discriminator 1
 280 0042 7B68     		ldr	r3, [r7, #4]
 281 0044 0A2B     		cmp	r3, #10
 282 0046 07D1     		bne	.L20
 283 0048 BB68     		ldr	r3, [r7, #8]
 284 004a 002B     		cmp	r3, #0
 285 004c 04DA     		bge	.L20
  99:App/STM32F4-Discovery/printf-stdarg.c **** 		neg = 1;
 286              		.loc 1 99 0 is_stmt 1
 287 004e 4FF00109 		mov	r9, #1
 100:App/STM32F4-Discovery/printf-stdarg.c **** 		u = (unsigned int)-i;
 288              		.loc 1 100 0
 289 0052 BB68     		ldr	r3, [r7, #8]
 290 0054 5B42     		negs	r3, r3
 291 0056 1D46     		mov	r5, r3
 292              	.L20:
 101:App/STM32F4-Discovery/printf-stdarg.c **** 	}
 102:App/STM32F4-Discovery/printf-stdarg.c **** 
 103:App/STM32F4-Discovery/printf-stdarg.c **** 	s = print_buf + PRINT_BUF_LEN-1;
 293              		.loc 1 103 0
 294 0058 07F11404 		add	r4, r7, #20
 295 005c 0B34     		adds	r4, r4, #11
 104:App/STM32F4-Discovery/printf-stdarg.c **** 	*s = '\0';
 296              		.loc 1 104 0
 297 005e 0023     		movs	r3, #0
 298 0060 2370     		strb	r3, [r4]
 105:App/STM32F4-Discovery/printf-stdarg.c **** 
 106:App/STM32F4-Discovery/printf-stdarg.c **** 	while (u) {
 299              		.loc 1 106 0
 300 0062 13E0     		b	.L21
 301              	.L23:
 107:App/STM32F4-Discovery/printf-stdarg.c **** 		t = (unsigned int)u % b;
 302              		.loc 1 107 0
 303 0064 7B68     		ldr	r3, [r7, #4]
 304 0066 B5FBF3F2 		udiv	r2, r5, r3
 305 006a 03FB02F3 		mul	r3, r3, r2
 306 006e EB1A     		subs	r3, r5, r3
 307 0070 1E46     		mov	r6, r3
 108:App/STM32F4-Discovery/printf-stdarg.c **** 		if( t >= 10 )
 308              		.loc 1 108 0
 309 0072 092E     		cmp	r6, #9
 310 0074 02DD     		ble	.L22
 109:App/STM32F4-Discovery/printf-stdarg.c **** 			t += letbase - '0' - 10;
 311              		.loc 1 109 0
 312 0076 BB6C     		ldr	r3, [r7, #72]
 313 0078 3A3B     		subs	r3, r3, #58
 314 007a 1E44     		add	r6, r6, r3
 315              	.L22:
 110:App/STM32F4-Discovery/printf-stdarg.c **** 		*--s = (char)(t + '0');
 316              		.loc 1 110 0
 317 007c 013C     		subs	r4, r4, #1
 318 007e F3B2     		uxtb	r3, r6
 319 0080 3033     		adds	r3, r3, #48
 320 0082 DBB2     		uxtb	r3, r3
 321 0084 2370     		strb	r3, [r4]
 111:App/STM32F4-Discovery/printf-stdarg.c **** 		u /= b;
 322              		.loc 1 111 0
 323 0086 7B68     		ldr	r3, [r7, #4]
 324 0088 B5FBF3F5 		udiv	r5, r5, r3
 325              	.L21:
 106:App/STM32F4-Discovery/printf-stdarg.c **** 	while (u) {
 326              		.loc 1 106 0 discriminator 1
 327 008c 002D     		cmp	r5, #0
 328 008e E9D1     		bne	.L23
 112:App/STM32F4-Discovery/printf-stdarg.c **** 	}
 113:App/STM32F4-Discovery/printf-stdarg.c **** 
 114:App/STM32F4-Discovery/printf-stdarg.c **** 	if (neg) {
 329              		.loc 1 114 0
 330 0090 B9F1000F 		cmp	r9, #0
 331 0094 14D0     		beq	.L24
 115:App/STM32F4-Discovery/printf-stdarg.c **** 		if( width && (pad & PAD_ZERO) ) {
 332              		.loc 1 115 0
 333 0096 3B6C     		ldr	r3, [r7, #64]
 334 0098 002B     		cmp	r3, #0
 335 009a 0ED0     		beq	.L25
 336              		.loc 1 115 0 is_stmt 0 discriminator 1
 337 009c 7B6C     		ldr	r3, [r7, #68]
 338 009e 03F00203 		and	r3, r3, #2
 339 00a2 002B     		cmp	r3, #0
 340 00a4 09D0     		beq	.L25
 116:App/STM32F4-Discovery/printf-stdarg.c **** 			printchar (out, '-');
 341              		.loc 1 116 0 is_stmt 1
 342 00a6 F868     		ldr	r0, [r7, #12]
 343 00a8 2D21     		movs	r1, #45
 344 00aa FFF7FEFF 		bl	printchar
 117:App/STM32F4-Discovery/printf-stdarg.c **** 			++pc;
 345              		.loc 1 117 0
 346 00ae 08F10108 		add	r8, r8, #1
 118:App/STM32F4-Discovery/printf-stdarg.c **** 			--width;
 347              		.loc 1 118 0
 348 00b2 3B6C     		ldr	r3, [r7, #64]
 349 00b4 013B     		subs	r3, r3, #1
 350 00b6 3B64     		str	r3, [r7, #64]
 351 00b8 02E0     		b	.L24
 352              	.L25:
 119:App/STM32F4-Discovery/printf-stdarg.c **** 		}
 120:App/STM32F4-Discovery/printf-stdarg.c **** 		else {
 121:App/STM32F4-Discovery/printf-stdarg.c **** 			*--s = '-';
 353              		.loc 1 121 0
 354 00ba 013C     		subs	r4, r4, #1
 355 00bc 2D23     		movs	r3, #45
 356 00be 2370     		strb	r3, [r4]
 357              	.L24:
 122:App/STM32F4-Discovery/printf-stdarg.c **** 		}
 123:App/STM32F4-Discovery/printf-stdarg.c **** 	}
 124:App/STM32F4-Discovery/printf-stdarg.c **** 
 125:App/STM32F4-Discovery/printf-stdarg.c **** 	return pc + prints (out, s, width, pad);
 358              		.loc 1 125 0
 359 00c0 F868     		ldr	r0, [r7, #12]
 360 00c2 2146     		mov	r1, r4
 361 00c4 3A6C     		ldr	r2, [r7, #64]
 362 00c6 7B6C     		ldr	r3, [r7, #68]
 363 00c8 FFF7FEFF 		bl	prints
 364 00cc 0346     		mov	r3, r0
 365 00ce 4344     		add	r3, r3, r8
 366              	.L26:
 126:App/STM32F4-Discovery/printf-stdarg.c **** }
 367              		.loc 1 126 0
 368 00d0 1846     		mov	r0, r3
 369 00d2 2437     		adds	r7, r7, #36
 370 00d4 BD46     		mov	sp, r7
 371              		@ sp needed
 372 00d6 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 373              		.cfi_endproc
 374              	.LFE2:
 376 00da 00BF     		.section	.rodata
 377              		.align	2
 378              	.LC0:
 379 0000 286E756C 		.ascii	"(null)\000"
 379      6C2900
 380 0007 00       		.section	.text.print,"ax",%progbits
 381              		.align	2
 382              		.thumb
 383              		.thumb_func
 385              	print:
 386              	.LFB3:
 127:App/STM32F4-Discovery/printf-stdarg.c **** 
 128:App/STM32F4-Discovery/printf-stdarg.c **** static int print( char **out, const char *format, va_list args )
 129:App/STM32F4-Discovery/printf-stdarg.c **** {
 387              		.loc 1 129 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 24
 390              		@ frame_needed = 1, uses_anonymous_args = 0
 391 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 392              	.LCFI9:
 393              		.cfi_def_cfa_offset 24
 394              		.cfi_offset 4, -24
 395              		.cfi_offset 5, -20
 396              		.cfi_offset 6, -16
 397              		.cfi_offset 7, -12
 398              		.cfi_offset 8, -8
 399              		.cfi_offset 14, -4
 400 0004 8AB0     		sub	sp, sp, #40
 401              	.LCFI10:
 402              		.cfi_def_cfa_offset 64
 403 0006 04AF     		add	r7, sp, #16
 404              	.LCFI11:
 405              		.cfi_def_cfa 7, 48
 406 0008 F860     		str	r0, [r7, #12]
 407 000a B960     		str	r1, [r7, #8]
 408 000c 7A60     		str	r2, [r7, #4]
 130:App/STM32F4-Discovery/printf-stdarg.c **** 	register int width, pad;
 131:App/STM32F4-Discovery/printf-stdarg.c **** 	register int pc = 0;
 409              		.loc 1 131 0
 410 000e 0024     		movs	r4, #0
 132:App/STM32F4-Discovery/printf-stdarg.c **** 	char scr[2];
 133:App/STM32F4-Discovery/printf-stdarg.c **** 
 134:App/STM32F4-Discovery/printf-stdarg.c **** 	for (; *format != 0; ++format) {
 411              		.loc 1 134 0
 412 0010 CCE0     		b	.L28
 413              	.L48:
 135:App/STM32F4-Discovery/printf-stdarg.c **** 		if (*format == '%') {
 414              		.loc 1 135 0
 415 0012 BB68     		ldr	r3, [r7, #8]
 416 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 417 0016 252B     		cmp	r3, #37
 418 0018 40F0BE80 		bne	.L29
 136:App/STM32F4-Discovery/printf-stdarg.c **** 			++format;
 419              		.loc 1 136 0
 420 001c BB68     		ldr	r3, [r7, #8]
 421 001e 0133     		adds	r3, r3, #1
 422 0020 BB60     		str	r3, [r7, #8]
 137:App/STM32F4-Discovery/printf-stdarg.c **** 			width = pad = 0;
 423              		.loc 1 137 0
 424 0022 0026     		movs	r6, #0
 425 0024 3546     		mov	r5, r6
 138:App/STM32F4-Discovery/printf-stdarg.c **** 			if (*format == '\0') break;
 426              		.loc 1 138 0
 427 0026 BB68     		ldr	r3, [r7, #8]
 428 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 429 002a 002B     		cmp	r3, #0
 430 002c 00D1     		bne	.L30
 431              		.loc 1 138 0 is_stmt 0 discriminator 1
 432 002e C2E0     		b	.L31
 433              	.L30:
 139:App/STM32F4-Discovery/printf-stdarg.c **** 			if (*format == '%') goto out;
 434              		.loc 1 139 0 is_stmt 1
 435 0030 BB68     		ldr	r3, [r7, #8]
 436 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 437 0034 252B     		cmp	r3, #37
 438 0036 00D1     		bne	.L32
 439              		.loc 1 139 0 is_stmt 0 discriminator 1
 440 0038 AEE0     		b	.L29
 441              	.L32:
 140:App/STM32F4-Discovery/printf-stdarg.c **** 			if (*format == '-') {
 442              		.loc 1 140 0 is_stmt 1
 443 003a BB68     		ldr	r3, [r7, #8]
 444 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 445 003e 2D2B     		cmp	r3, #45
 446 0040 04D1     		bne	.L33
 141:App/STM32F4-Discovery/printf-stdarg.c **** 				++format;
 447              		.loc 1 141 0
 448 0042 BB68     		ldr	r3, [r7, #8]
 449 0044 0133     		adds	r3, r3, #1
 450 0046 BB60     		str	r3, [r7, #8]
 142:App/STM32F4-Discovery/printf-stdarg.c **** 				pad = PAD_RIGHT;
 451              		.loc 1 142 0
 452 0048 0126     		movs	r6, #1
 143:App/STM32F4-Discovery/printf-stdarg.c **** 			}
 144:App/STM32F4-Discovery/printf-stdarg.c **** 			while (*format == '0') {
 453              		.loc 1 144 0
 454 004a 05E0     		b	.L34
 455              	.L33:
 456 004c 04E0     		b	.L34
 457              	.L35:
 145:App/STM32F4-Discovery/printf-stdarg.c **** 				++format;
 458              		.loc 1 145 0
 459 004e BB68     		ldr	r3, [r7, #8]
 460 0050 0133     		adds	r3, r3, #1
 461 0052 BB60     		str	r3, [r7, #8]
 146:App/STM32F4-Discovery/printf-stdarg.c **** 				pad |= PAD_ZERO;
 462              		.loc 1 146 0
 463 0054 46F00206 		orr	r6, r6, #2
 464              	.L34:
 144:App/STM32F4-Discovery/printf-stdarg.c **** 			while (*format == '0') {
 465              		.loc 1 144 0 discriminator 1
 466 0058 BB68     		ldr	r3, [r7, #8]
 467 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 468 005c 302B     		cmp	r3, #48
 469 005e F6D0     		beq	.L35
 147:App/STM32F4-Discovery/printf-stdarg.c **** 			}
 148:App/STM32F4-Discovery/printf-stdarg.c **** 			for ( ; *format >= '0' && *format <= '9'; ++format) {
 470              		.loc 1 148 0
 471 0060 0BE0     		b	.L36
 472              	.L38:
 149:App/STM32F4-Discovery/printf-stdarg.c **** 				width *= 10;
 473              		.loc 1 149 0 discriminator 1
 474 0062 2B46     		mov	r3, r5
 475 0064 9B00     		lsls	r3, r3, #2
 476 0066 2B44     		add	r3, r3, r5
 477 0068 5B00     		lsls	r3, r3, #1
 478 006a 1D46     		mov	r5, r3
 150:App/STM32F4-Discovery/printf-stdarg.c **** 				width += *format - '0';
 479              		.loc 1 150 0 discriminator 1
 480 006c BB68     		ldr	r3, [r7, #8]
 481 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 482 0070 303B     		subs	r3, r3, #48
 483 0072 1D44     		add	r5, r5, r3
 148:App/STM32F4-Discovery/printf-stdarg.c **** 			for ( ; *format >= '0' && *format <= '9'; ++format) {
 484              		.loc 1 148 0 discriminator 1
 485 0074 BB68     		ldr	r3, [r7, #8]
 486 0076 0133     		adds	r3, r3, #1
 487 0078 BB60     		str	r3, [r7, #8]
 488              	.L36:
 489 007a BB68     		ldr	r3, [r7, #8]
 490 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 491 007e 2F2B     		cmp	r3, #47
 492 0080 03D9     		bls	.L37
 148:App/STM32F4-Discovery/printf-stdarg.c **** 			for ( ; *format >= '0' && *format <= '9'; ++format) {
 493              		.loc 1 148 0 is_stmt 0 discriminator 2
 494 0082 BB68     		ldr	r3, [r7, #8]
 495 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 496 0086 392B     		cmp	r3, #57
 497 0088 EBD9     		bls	.L38
 498              	.L37:
 151:App/STM32F4-Discovery/printf-stdarg.c **** 			}
 152:App/STM32F4-Discovery/printf-stdarg.c **** 			if( *format == 's' ) {
 499              		.loc 1 152 0 is_stmt 1
 500 008a BB68     		ldr	r3, [r7, #8]
 501 008c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 502 008e 732B     		cmp	r3, #115
 503 0090 13D1     		bne	.L39
 504              	.LBB3:
 153:App/STM32F4-Discovery/printf-stdarg.c **** 				register char *s = (char *)va_arg( args, int );
 505              		.loc 1 153 0
 506 0092 7B68     		ldr	r3, [r7, #4]
 507 0094 1A1D     		adds	r2, r3, #4
 508 0096 7A60     		str	r2, [r7, #4]
 509 0098 1B68     		ldr	r3, [r3]
 510 009a 9846     		mov	r8, r3
 154:App/STM32F4-Discovery/printf-stdarg.c **** 				pc += prints (out, s?s:"(null)", width, pad);
 511              		.loc 1 154 0
 512 009c B8F1000F 		cmp	r8, #0
 513 00a0 01D0     		beq	.L40
 514              		.loc 1 154 0 is_stmt 0 discriminator 1
 515 00a2 4346     		mov	r3, r8
 516 00a4 00E0     		b	.L41
 517              	.L40:
 518              		.loc 1 154 0 discriminator 2
 519 00a6 4A4B     		ldr	r3, .L51
 520              	.L41:
 521              		.loc 1 154 0 discriminator 3
 522 00a8 F868     		ldr	r0, [r7, #12]
 523 00aa 1946     		mov	r1, r3
 524 00ac 2A46     		mov	r2, r5
 525 00ae 3346     		mov	r3, r6
 526 00b0 FFF7FEFF 		bl	prints
 527 00b4 0346     		mov	r3, r0
 528 00b6 1C44     		add	r4, r4, r3
 155:App/STM32F4-Discovery/printf-stdarg.c **** 				continue;
 529              		.loc 1 155 0 is_stmt 1 discriminator 3
 530 00b8 75E0     		b	.L42
 531              	.L39:
 532              	.LBE3:
 156:App/STM32F4-Discovery/printf-stdarg.c **** 			}
 157:App/STM32F4-Discovery/printf-stdarg.c **** 			if( *format == 'd' || *format == 'i' ) {
 533              		.loc 1 157 0
 534 00ba BB68     		ldr	r3, [r7, #8]
 535 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 536 00be 642B     		cmp	r3, #100
 537 00c0 03D0     		beq	.L43
 538              		.loc 1 157 0 is_stmt 0 discriminator 1
 539 00c2 BB68     		ldr	r3, [r7, #8]
 540 00c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 541 00c6 692B     		cmp	r3, #105
 542 00c8 10D1     		bne	.L44
 543              	.L43:
 158:App/STM32F4-Discovery/printf-stdarg.c **** 				pc += printi (out, va_arg( args, int ), 10, 1, width, pad, 'a');
 544              		.loc 1 158 0 is_stmt 1
 545 00ca 7B68     		ldr	r3, [r7, #4]
 546 00cc 1A1D     		adds	r2, r3, #4
 547 00ce 7A60     		str	r2, [r7, #4]
 548 00d0 1B68     		ldr	r3, [r3]
 549 00d2 0095     		str	r5, [sp]
 550 00d4 0196     		str	r6, [sp, #4]
 551 00d6 6122     		movs	r2, #97
 552 00d8 0292     		str	r2, [sp, #8]
 553 00da F868     		ldr	r0, [r7, #12]
 554 00dc 1946     		mov	r1, r3
 555 00de 0A22     		movs	r2, #10
 556 00e0 0123     		movs	r3, #1
 557 00e2 FFF7FEFF 		bl	printi
 558 00e6 0346     		mov	r3, r0
 559 00e8 1C44     		add	r4, r4, r3
 159:App/STM32F4-Discovery/printf-stdarg.c **** 				continue;
 560              		.loc 1 159 0
 561 00ea 5CE0     		b	.L42
 562              	.L44:
 160:App/STM32F4-Discovery/printf-stdarg.c **** 			}
 161:App/STM32F4-Discovery/printf-stdarg.c **** 			if( *format == 'x' ) {
 563              		.loc 1 161 0
 564 00ec BB68     		ldr	r3, [r7, #8]
 565 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 566 00f0 782B     		cmp	r3, #120
 567 00f2 10D1     		bne	.L45
 162:App/STM32F4-Discovery/printf-stdarg.c **** 				pc += printi (out, va_arg( args, int ), 16, 0, width, pad, 'a');
 568              		.loc 1 162 0
 569 00f4 7B68     		ldr	r3, [r7, #4]
 570 00f6 1A1D     		adds	r2, r3, #4
 571 00f8 7A60     		str	r2, [r7, #4]
 572 00fa 1B68     		ldr	r3, [r3]
 573 00fc 0095     		str	r5, [sp]
 574 00fe 0196     		str	r6, [sp, #4]
 575 0100 6122     		movs	r2, #97
 576 0102 0292     		str	r2, [sp, #8]
 577 0104 F868     		ldr	r0, [r7, #12]
 578 0106 1946     		mov	r1, r3
 579 0108 1022     		movs	r2, #16
 580 010a 0023     		movs	r3, #0
 581 010c FFF7FEFF 		bl	printi
 582 0110 0346     		mov	r3, r0
 583 0112 1C44     		add	r4, r4, r3
 163:App/STM32F4-Discovery/printf-stdarg.c **** 				continue;
 584              		.loc 1 163 0
 585 0114 47E0     		b	.L42
 586              	.L45:
 164:App/STM32F4-Discovery/printf-stdarg.c **** 			}
 165:App/STM32F4-Discovery/printf-stdarg.c **** 			if( *format == 'X' ) {
 587              		.loc 1 165 0
 588 0116 BB68     		ldr	r3, [r7, #8]
 589 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 590 011a 582B     		cmp	r3, #88
 591 011c 10D1     		bne	.L46
 166:App/STM32F4-Discovery/printf-stdarg.c **** 				pc += printi (out, va_arg( args, int ), 16, 0, width, pad, 'A');
 592              		.loc 1 166 0
 593 011e 7B68     		ldr	r3, [r7, #4]
 594 0120 1A1D     		adds	r2, r3, #4
 595 0122 7A60     		str	r2, [r7, #4]
 596 0124 1B68     		ldr	r3, [r3]
 597 0126 0095     		str	r5, [sp]
 598 0128 0196     		str	r6, [sp, #4]
 599 012a 4122     		movs	r2, #65
 600 012c 0292     		str	r2, [sp, #8]
 601 012e F868     		ldr	r0, [r7, #12]
 602 0130 1946     		mov	r1, r3
 603 0132 1022     		movs	r2, #16
 604 0134 0023     		movs	r3, #0
 605 0136 FFF7FEFF 		bl	printi
 606 013a 0346     		mov	r3, r0
 607 013c 1C44     		add	r4, r4, r3
 167:App/STM32F4-Discovery/printf-stdarg.c **** 				continue;
 608              		.loc 1 167 0
 609 013e 32E0     		b	.L42
 610              	.L46:
 168:App/STM32F4-Discovery/printf-stdarg.c **** 			}
 169:App/STM32F4-Discovery/printf-stdarg.c **** 			if( *format == 'u' ) {
 611              		.loc 1 169 0
 612 0140 BB68     		ldr	r3, [r7, #8]
 613 0142 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 614 0144 752B     		cmp	r3, #117
 615 0146 10D1     		bne	.L47
 170:App/STM32F4-Discovery/printf-stdarg.c **** 				pc += printi (out, va_arg( args, int ), 10, 0, width, pad, 'a');
 616              		.loc 1 170 0
 617 0148 7B68     		ldr	r3, [r7, #4]
 618 014a 1A1D     		adds	r2, r3, #4
 619 014c 7A60     		str	r2, [r7, #4]
 620 014e 1B68     		ldr	r3, [r3]
 621 0150 0095     		str	r5, [sp]
 622 0152 0196     		str	r6, [sp, #4]
 623 0154 6122     		movs	r2, #97
 624 0156 0292     		str	r2, [sp, #8]
 625 0158 F868     		ldr	r0, [r7, #12]
 626 015a 1946     		mov	r1, r3
 627 015c 0A22     		movs	r2, #10
 628 015e 0023     		movs	r3, #0
 629 0160 FFF7FEFF 		bl	printi
 630 0164 0346     		mov	r3, r0
 631 0166 1C44     		add	r4, r4, r3
 171:App/STM32F4-Discovery/printf-stdarg.c **** 				continue;
 632              		.loc 1 171 0
 633 0168 1DE0     		b	.L42
 634              	.L47:
 172:App/STM32F4-Discovery/printf-stdarg.c **** 			}
 173:App/STM32F4-Discovery/printf-stdarg.c **** 			if( *format == 'c' ) {
 635              		.loc 1 173 0
 636 016a BB68     		ldr	r3, [r7, #8]
 637 016c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 638 016e 632B     		cmp	r3, #99
 639 0170 19D1     		bne	.L42
 174:App/STM32F4-Discovery/printf-stdarg.c **** 				/* char are converted to int then pushed on the stack */
 175:App/STM32F4-Discovery/printf-stdarg.c **** 				scr[0] = (char)va_arg( args, int );
 640              		.loc 1 175 0
 641 0172 7B68     		ldr	r3, [r7, #4]
 642 0174 1A1D     		adds	r2, r3, #4
 643 0176 7A60     		str	r2, [r7, #4]
 644 0178 1B68     		ldr	r3, [r3]
 645 017a DBB2     		uxtb	r3, r3
 646 017c 3B75     		strb	r3, [r7, #20]
 176:App/STM32F4-Discovery/printf-stdarg.c **** 				scr[1] = '\0';
 647              		.loc 1 176 0
 648 017e 0023     		movs	r3, #0
 649 0180 7B75     		strb	r3, [r7, #21]
 177:App/STM32F4-Discovery/printf-stdarg.c **** 				pc += prints (out, scr, width, pad);
 650              		.loc 1 177 0
 651 0182 07F11403 		add	r3, r7, #20
 652 0186 F868     		ldr	r0, [r7, #12]
 653 0188 1946     		mov	r1, r3
 654 018a 2A46     		mov	r2, r5
 655 018c 3346     		mov	r3, r6
 656 018e FFF7FEFF 		bl	prints
 657 0192 0346     		mov	r3, r0
 658 0194 1C44     		add	r4, r4, r3
 178:App/STM32F4-Discovery/printf-stdarg.c **** 				continue;
 659              		.loc 1 178 0
 660 0196 06E0     		b	.L42
 661              	.L29:
 179:App/STM32F4-Discovery/printf-stdarg.c **** 			}
 180:App/STM32F4-Discovery/printf-stdarg.c **** 		}
 181:App/STM32F4-Discovery/printf-stdarg.c **** 		else {
 182:App/STM32F4-Discovery/printf-stdarg.c **** 		out:
 183:App/STM32F4-Discovery/printf-stdarg.c **** 			printchar (out, *format);
 662              		.loc 1 183 0
 663 0198 BB68     		ldr	r3, [r7, #8]
 664 019a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 665 019c F868     		ldr	r0, [r7, #12]
 666 019e 1946     		mov	r1, r3
 667 01a0 FFF7FEFF 		bl	printchar
 184:App/STM32F4-Discovery/printf-stdarg.c **** 			++pc;
 668              		.loc 1 184 0
 669 01a4 0134     		adds	r4, r4, #1
 670              	.L42:
 134:App/STM32F4-Discovery/printf-stdarg.c **** 	for (; *format != 0; ++format) {
 671              		.loc 1 134 0
 672 01a6 BB68     		ldr	r3, [r7, #8]
 673 01a8 0133     		adds	r3, r3, #1
 674 01aa BB60     		str	r3, [r7, #8]
 675              	.L28:
 134:App/STM32F4-Discovery/printf-stdarg.c **** 	for (; *format != 0; ++format) {
 676              		.loc 1 134 0 is_stmt 0 discriminator 1
 677 01ac BB68     		ldr	r3, [r7, #8]
 678 01ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 679 01b0 002B     		cmp	r3, #0
 680 01b2 7FF42EAF 		bne	.L48
 681              	.L31:
 185:App/STM32F4-Discovery/printf-stdarg.c **** 		}
 186:App/STM32F4-Discovery/printf-stdarg.c **** 	}
 187:App/STM32F4-Discovery/printf-stdarg.c **** 	if (out) **out = '\0';
 682              		.loc 1 187 0 is_stmt 1
 683 01b6 FB68     		ldr	r3, [r7, #12]
 684 01b8 002B     		cmp	r3, #0
 685 01ba 03D0     		beq	.L49
 686              		.loc 1 187 0 is_stmt 0 discriminator 1
 687 01bc FB68     		ldr	r3, [r7, #12]
 688 01be 1B68     		ldr	r3, [r3]
 689 01c0 0022     		movs	r2, #0
 690 01c2 1A70     		strb	r2, [r3]
 691              	.L49:
 188:App/STM32F4-Discovery/printf-stdarg.c **** 	va_end( args );
 189:App/STM32F4-Discovery/printf-stdarg.c **** 	return pc;
 692              		.loc 1 189 0 is_stmt 1
 693 01c4 2346     		mov	r3, r4
 190:App/STM32F4-Discovery/printf-stdarg.c **** }
 694              		.loc 1 190 0
 695 01c6 1846     		mov	r0, r3
 696 01c8 1837     		adds	r7, r7, #24
 697 01ca BD46     		mov	sp, r7
 698              		@ sp needed
 699 01cc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 700              	.L52:
 701              		.align	2
 702              	.L51:
 703 01d0 00000000 		.word	.LC0
 704              		.cfi_endproc
 705              	.LFE3:
 707              		.section	.text.printf,"ax",%progbits
 708              		.align	2
 709              		.global	printf
 710              		.thumb
 711              		.thumb_func
 713              	printf:
 714              	.LFB4:
 191:App/STM32F4-Discovery/printf-stdarg.c **** 
 192:App/STM32F4-Discovery/printf-stdarg.c **** int printf(const char *format, ...)
 193:App/STM32F4-Discovery/printf-stdarg.c **** {
 715              		.loc 1 193 0
 716              		.cfi_startproc
 717              		@ args = 4, pretend = 16, frame = 8
 718              		@ frame_needed = 1, uses_anonymous_args = 1
 719 0000 0FB4     		push	{r0, r1, r2, r3}
 720              	.LCFI12:
 721              		.cfi_def_cfa_offset 16
 722              		.cfi_offset 0, -16
 723              		.cfi_offset 1, -12
 724              		.cfi_offset 2, -8
 725              		.cfi_offset 3, -4
 726 0002 80B5     		push	{r7, lr}
 727              	.LCFI13:
 728              		.cfi_def_cfa_offset 24
 729              		.cfi_offset 7, -24
 730              		.cfi_offset 14, -20
 731 0004 82B0     		sub	sp, sp, #8
 732              	.LCFI14:
 733              		.cfi_def_cfa_offset 32
 734 0006 00AF     		add	r7, sp, #0
 735              	.LCFI15:
 736              		.cfi_def_cfa_register 7
 194:App/STM32F4-Discovery/printf-stdarg.c **** 	va_list args;
 195:App/STM32F4-Discovery/printf-stdarg.c **** 
 196:App/STM32F4-Discovery/printf-stdarg.c **** 	va_start( args, format );
 737              		.loc 1 196 0
 738 0008 07F11403 		add	r3, r7, #20
 739 000c 7B60     		str	r3, [r7, #4]
 197:App/STM32F4-Discovery/printf-stdarg.c **** 	return print( 0, format, args );
 740              		.loc 1 197 0
 741 000e 0020     		movs	r0, #0
 742 0010 3969     		ldr	r1, [r7, #16]
 743 0012 7A68     		ldr	r2, [r7, #4]
 744 0014 FFF7FEFF 		bl	print
 745 0018 0346     		mov	r3, r0
 198:App/STM32F4-Discovery/printf-stdarg.c **** }
 746              		.loc 1 198 0
 747 001a 1846     		mov	r0, r3
 748 001c 0837     		adds	r7, r7, #8
 749 001e BD46     		mov	sp, r7
 750              		@ sp needed
 751 0020 BDE88040 		pop	{r7, lr}
 752 0024 04B0     		add	sp, sp, #16
 753 0026 7047     		bx	lr
 754              		.cfi_endproc
 755              	.LFE4:
 757              		.section	.text.sprintf,"ax",%progbits
 758              		.align	2
 759              		.global	sprintf
 760              		.thumb
 761              		.thumb_func
 763              	sprintf:
 764              	.LFB5:
 199:App/STM32F4-Discovery/printf-stdarg.c **** 
 200:App/STM32F4-Discovery/printf-stdarg.c **** int sprintf(char *out, const char *format, ...)
 201:App/STM32F4-Discovery/printf-stdarg.c **** {
 765              		.loc 1 201 0
 766              		.cfi_startproc
 767              		@ args = 4, pretend = 12, frame = 16
 768              		@ frame_needed = 1, uses_anonymous_args = 1
 769 0000 0EB4     		push	{r1, r2, r3}
 770              	.LCFI16:
 771              		.cfi_def_cfa_offset 12
 772              		.cfi_offset 1, -12
 773              		.cfi_offset 2, -8
 774              		.cfi_offset 3, -4
 775 0002 80B5     		push	{r7, lr}
 776              	.LCFI17:
 777              		.cfi_def_cfa_offset 20
 778              		.cfi_offset 7, -20
 779              		.cfi_offset 14, -16
 780 0004 85B0     		sub	sp, sp, #20
 781              	.LCFI18:
 782              		.cfi_def_cfa_offset 40
 783 0006 00AF     		add	r7, sp, #0
 784              	.LCFI19:
 785              		.cfi_def_cfa_register 7
 786 0008 7860     		str	r0, [r7, #4]
 202:App/STM32F4-Discovery/printf-stdarg.c **** 	va_list args;
 203:App/STM32F4-Discovery/printf-stdarg.c **** 
 204:App/STM32F4-Discovery/printf-stdarg.c **** 	va_start( args, format );
 787              		.loc 1 204 0
 788 000a 07F12003 		add	r3, r7, #32
 789 000e FB60     		str	r3, [r7, #12]
 205:App/STM32F4-Discovery/printf-stdarg.c **** 	return print( &out, format, args );
 790              		.loc 1 205 0
 791 0010 3B1D     		adds	r3, r7, #4
 792 0012 1846     		mov	r0, r3
 793 0014 F969     		ldr	r1, [r7, #28]
 794 0016 FA68     		ldr	r2, [r7, #12]
 795 0018 FFF7FEFF 		bl	print
 796 001c 0346     		mov	r3, r0
 206:App/STM32F4-Discovery/printf-stdarg.c **** }
 797              		.loc 1 206 0
 798 001e 1846     		mov	r0, r3
 799 0020 1437     		adds	r7, r7, #20
 800 0022 BD46     		mov	sp, r7
 801              		@ sp needed
 802 0024 BDE88040 		pop	{r7, lr}
 803 0028 03B0     		add	sp, sp, #12
 804 002a 7047     		bx	lr
 805              		.cfi_endproc
 806              	.LFE5:
 808              		.section	.text.snprintf,"ax",%progbits
 809              		.align	2
 810              		.global	snprintf
 811              		.thumb
 812              		.thumb_func
 814              	snprintf:
 815              	.LFB6:
 207:App/STM32F4-Discovery/printf-stdarg.c **** 
 208:App/STM32F4-Discovery/printf-stdarg.c **** 
 209:App/STM32F4-Discovery/printf-stdarg.c **** int snprintf( char *buf, unsigned int count, const char *format, ... )
 210:App/STM32F4-Discovery/printf-stdarg.c **** {
 816              		.loc 1 210 0
 817              		.cfi_startproc
 818              		@ args = 4, pretend = 8, frame = 16
 819              		@ frame_needed = 1, uses_anonymous_args = 1
 820 0000 0CB4     		push	{r2, r3}
 821              	.LCFI20:
 822              		.cfi_def_cfa_offset 8
 823              		.cfi_offset 2, -8
 824              		.cfi_offset 3, -4
 825 0002 80B5     		push	{r7, lr}
 826              	.LCFI21:
 827              		.cfi_def_cfa_offset 16
 828              		.cfi_offset 7, -16
 829              		.cfi_offset 14, -12
 830 0004 84B0     		sub	sp, sp, #16
 831              	.LCFI22:
 832              		.cfi_def_cfa_offset 32
 833 0006 00AF     		add	r7, sp, #0
 834              	.LCFI23:
 835              		.cfi_def_cfa_register 7
 836 0008 7860     		str	r0, [r7, #4]
 837 000a 3960     		str	r1, [r7]
 211:App/STM32F4-Discovery/printf-stdarg.c **** 	va_list args;
 212:App/STM32F4-Discovery/printf-stdarg.c **** 
 213:App/STM32F4-Discovery/printf-stdarg.c **** 	( void ) count;
 214:App/STM32F4-Discovery/printf-stdarg.c **** 
 215:App/STM32F4-Discovery/printf-stdarg.c **** 	va_start( args, format );
 838              		.loc 1 215 0
 839 000c 07F11C03 		add	r3, r7, #28
 840 0010 FB60     		str	r3, [r7, #12]
 216:App/STM32F4-Discovery/printf-stdarg.c **** 	return print( &buf, format, args );
 841              		.loc 1 216 0
 842 0012 3B1D     		adds	r3, r7, #4
 843 0014 1846     		mov	r0, r3
 844 0016 B969     		ldr	r1, [r7, #24]
 845 0018 FA68     		ldr	r2, [r7, #12]
 846 001a FFF7FEFF 		bl	print
 847 001e 0346     		mov	r3, r0
 217:App/STM32F4-Discovery/printf-stdarg.c **** }
 848              		.loc 1 217 0
 849 0020 1846     		mov	r0, r3
 850 0022 1037     		adds	r7, r7, #16
 851 0024 BD46     		mov	sp, r7
 852              		@ sp needed
 853 0026 BDE88040 		pop	{r7, lr}
 854 002a 02B0     		add	sp, sp, #8
 855 002c 7047     		bx	lr
 856              		.cfi_endproc
 857              	.LFE6:
 859 002e 00BF     		.section	.text.write,"ax",%progbits
 860              		.align	2
 861              		.global	write
 862              		.thumb
 863              		.thumb_func
 865              	write:
 866              	.LFB7:
 218:App/STM32F4-Discovery/printf-stdarg.c **** 
 219:App/STM32F4-Discovery/printf-stdarg.c **** #ifdef TEST_PRINTF
 220:App/STM32F4-Discovery/printf-stdarg.c **** int main(void)
 221:App/STM32F4-Discovery/printf-stdarg.c **** {
 222:App/STM32F4-Discovery/printf-stdarg.c **** 	char *ptr = "Hello world!";
 223:App/STM32F4-Discovery/printf-stdarg.c **** 	char *np = 0;
 224:App/STM32F4-Discovery/printf-stdarg.c **** 	int i = 5;
 225:App/STM32F4-Discovery/printf-stdarg.c **** 	unsigned int bs = sizeof(int)*8;
 226:App/STM32F4-Discovery/printf-stdarg.c **** 	int mi;
 227:App/STM32F4-Discovery/printf-stdarg.c **** 	char buf[80];
 228:App/STM32F4-Discovery/printf-stdarg.c **** 
 229:App/STM32F4-Discovery/printf-stdarg.c **** 	mi = (1 << (bs-1)) + 1;
 230:App/STM32F4-Discovery/printf-stdarg.c **** 	printf("%s\n", ptr);
 231:App/STM32F4-Discovery/printf-stdarg.c **** 	printf("printf test\n");
 232:App/STM32F4-Discovery/printf-stdarg.c **** 	printf("%s is null pointer\n", np);
 233:App/STM32F4-Discovery/printf-stdarg.c **** 	printf("%d = 5\n", i);
 234:App/STM32F4-Discovery/printf-stdarg.c **** 	printf("%d = - max int\n", mi);
 235:App/STM32F4-Discovery/printf-stdarg.c **** 	printf("char %c = 'a'\n", 'a');
 236:App/STM32F4-Discovery/printf-stdarg.c **** 	printf("hex %x = ff\n", 0xff);
 237:App/STM32F4-Discovery/printf-stdarg.c **** 	printf("hex %02x = 00\n", 0);
 238:App/STM32F4-Discovery/printf-stdarg.c **** 	printf("signed %d = unsigned %u = hex %x\n", -3, -3, -3);
 239:App/STM32F4-Discovery/printf-stdarg.c **** 	printf("%d %s(s)%", 0, "message");
 240:App/STM32F4-Discovery/printf-stdarg.c **** 	printf("\n");
 241:App/STM32F4-Discovery/printf-stdarg.c **** 	printf("%d %s(s) with %%\n", 0, "message");
 242:App/STM32F4-Discovery/printf-stdarg.c **** 	sprintf(buf, "justif: \"%-10s\"\n", "left"); printf("%s", buf);
 243:App/STM32F4-Discovery/printf-stdarg.c **** 	sprintf(buf, "justif: \"%10s\"\n", "right"); printf("%s", buf);
 244:App/STM32F4-Discovery/printf-stdarg.c **** 	sprintf(buf, " 3: %04d zero padded\n", 3); printf("%s", buf);
 245:App/STM32F4-Discovery/printf-stdarg.c **** 	sprintf(buf, " 3: %-4d left justif.\n", 3); printf("%s", buf);
 246:App/STM32F4-Discovery/printf-stdarg.c **** 	sprintf(buf, " 3: %4d right justif.\n", 3); printf("%s", buf);
 247:App/STM32F4-Discovery/printf-stdarg.c **** 	sprintf(buf, "-3: %04d zero padded\n", -3); printf("%s", buf);
 248:App/STM32F4-Discovery/printf-stdarg.c **** 	sprintf(buf, "-3: %-4d left justif.\n", -3); printf("%s", buf);
 249:App/STM32F4-Discovery/printf-stdarg.c **** 	sprintf(buf, "-3: %4d right justif.\n", -3); printf("%s", buf);
 250:App/STM32F4-Discovery/printf-stdarg.c **** 
 251:App/STM32F4-Discovery/printf-stdarg.c **** 	return 0;
 252:App/STM32F4-Discovery/printf-stdarg.c **** }
 253:App/STM32F4-Discovery/printf-stdarg.c **** 
 254:App/STM32F4-Discovery/printf-stdarg.c **** /*
 255:App/STM32F4-Discovery/printf-stdarg.c ****  * if you compile this file with
 256:App/STM32F4-Discovery/printf-stdarg.c ****  *   gcc -Wall $(YOUR_C_OPTIONS) -DTEST_PRINTF -c printf.c
 257:App/STM32F4-Discovery/printf-stdarg.c ****  * you will get a normal warning:
 258:App/STM32F4-Discovery/printf-stdarg.c ****  *   printf.c:214: warning: spurious trailing `%' in format
 259:App/STM32F4-Discovery/printf-stdarg.c ****  * this line is testing an invalid % at the end of the format string.
 260:App/STM32F4-Discovery/printf-stdarg.c ****  *
 261:App/STM32F4-Discovery/printf-stdarg.c ****  * this should display (on 32bit int machine) :
 262:App/STM32F4-Discovery/printf-stdarg.c ****  *
 263:App/STM32F4-Discovery/printf-stdarg.c ****  * Hello world!
 264:App/STM32F4-Discovery/printf-stdarg.c ****  * printf test
 265:App/STM32F4-Discovery/printf-stdarg.c ****  * (null) is null pointer
 266:App/STM32F4-Discovery/printf-stdarg.c ****  * 5 = 5
 267:App/STM32F4-Discovery/printf-stdarg.c ****  * -2147483647 = - max int
 268:App/STM32F4-Discovery/printf-stdarg.c ****  * char a = 'a'
 269:App/STM32F4-Discovery/printf-stdarg.c ****  * hex ff = ff
 270:App/STM32F4-Discovery/printf-stdarg.c ****  * hex 00 = 00
 271:App/STM32F4-Discovery/printf-stdarg.c ****  * signed -3 = unsigned 4294967293 = hex fffffffd
 272:App/STM32F4-Discovery/printf-stdarg.c ****  * 0 message(s)
 273:App/STM32F4-Discovery/printf-stdarg.c ****  * 0 message(s) with %
 274:App/STM32F4-Discovery/printf-stdarg.c ****  * justif: "left      "
 275:App/STM32F4-Discovery/printf-stdarg.c ****  * justif: "     right"
 276:App/STM32F4-Discovery/printf-stdarg.c ****  *  3: 0003 zero padded
 277:App/STM32F4-Discovery/printf-stdarg.c ****  *  3: 3    left justif.
 278:App/STM32F4-Discovery/printf-stdarg.c ****  *  3:    3 right justif.
 279:App/STM32F4-Discovery/printf-stdarg.c ****  * -3: -003 zero padded
 280:App/STM32F4-Discovery/printf-stdarg.c ****  * -3: -3   left justif.
 281:App/STM32F4-Discovery/printf-stdarg.c ****  * -3:   -3 right justif.
 282:App/STM32F4-Discovery/printf-stdarg.c ****  */
 283:App/STM32F4-Discovery/printf-stdarg.c **** 
 284:App/STM32F4-Discovery/printf-stdarg.c **** #endif
 285:App/STM32F4-Discovery/printf-stdarg.c **** 
 286:App/STM32F4-Discovery/printf-stdarg.c **** 
 287:App/STM32F4-Discovery/printf-stdarg.c **** /* To keep linker happy. */
 288:App/STM32F4-Discovery/printf-stdarg.c **** int	write( int i, char* c, int n)
 289:App/STM32F4-Discovery/printf-stdarg.c **** {
 867              		.loc 1 289 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 16
 870              		@ frame_needed = 1, uses_anonymous_args = 0
 871              		@ link register save eliminated.
 872 0000 80B4     		push	{r7}
 873              	.LCFI24:
 874              		.cfi_def_cfa_offset 4
 875              		.cfi_offset 7, -4
 876 0002 85B0     		sub	sp, sp, #20
 877              	.LCFI25:
 878              		.cfi_def_cfa_offset 24
 879 0004 00AF     		add	r7, sp, #0
 880              	.LCFI26:
 881              		.cfi_def_cfa_register 7
 882 0006 F860     		str	r0, [r7, #12]
 883 0008 B960     		str	r1, [r7, #8]
 884 000a 7A60     		str	r2, [r7, #4]
 290:App/STM32F4-Discovery/printf-stdarg.c **** 	(void)i;
 291:App/STM32F4-Discovery/printf-stdarg.c **** 	(void)n;
 292:App/STM32F4-Discovery/printf-stdarg.c **** 	(void)c;
 293:App/STM32F4-Discovery/printf-stdarg.c **** 	return 0;
 885              		.loc 1 293 0
 886 000c 0023     		movs	r3, #0
 294:App/STM32F4-Discovery/printf-stdarg.c **** }
 887              		.loc 1 294 0
 888 000e 1846     		mov	r0, r3
 889 0010 1437     		adds	r7, r7, #20
 890 0012 BD46     		mov	sp, r7
 891              		@ sp needed
 892 0014 5DF8047B 		ldr	r7, [sp], #4
 893 0018 7047     		bx	lr
 894              		.cfi_endproc
 895              	.LFE7:
 897 001a 00BF     		.text
 898              	.Letext0:
 899              		.file 2 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/lib/gcc/arm-none-eabi/4.8.4/include/std
 900              		.file 3 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 printf-stdarg.c
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmHisIz.s:20     .text.printchar:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmHisIz.s:24     .text.printchar:0000000000000000 printchar
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmHisIz.s:71     .text.prints:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmHisIz.s:75     .text.prints:0000000000000000 prints
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmHisIz.s:220    .text.printi:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmHisIz.s:224    .text.printi:0000000000000000 printi
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmHisIz.s:377    .rodata:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmHisIz.s:381    .text.print:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmHisIz.s:385    .text.print:0000000000000000 print
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmHisIz.s:703    .text.print:00000000000001d0 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmHisIz.s:708    .text.printf:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmHisIz.s:713    .text.printf:0000000000000000 printf
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmHisIz.s:758    .text.sprintf:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmHisIz.s:763    .text.sprintf:0000000000000000 sprintf
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmHisIz.s:809    .text.snprintf:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmHisIz.s:814    .text.snprintf:0000000000000000 snprintf
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmHisIz.s:860    .text.write:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmHisIz.s:865    .text.write:0000000000000000 write
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
