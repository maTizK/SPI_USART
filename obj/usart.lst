   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"usart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	xSemaphoreDMASPI,4,4
  20              		.comm	xSmphrUSART,4,4
  21              		.comm	motorHeartBeatHandle,4,4
  22              		.comm	motorHBHandle,4,4
  23              		.comm	QSpd_handle,4,4
  24              		.comm	QTCP_handle,4,4
  25              		.comm	socket_0,4,4
  26              		.comm	bufferTX,2000,4
  27              		.comm	bufferRX,2000,4
  28              		.comm	bufferRXidx,4,4
  29              		.comm	bufferTXidx,4,4
  30              		.comm	dat_lengthRX,4,4
  31              		.comm	dat_lengthTX,4,4
  32              		.section	.rodata.table_crc_hi,"a",%progbits
  33              		.align	2
  36              	table_crc_hi:
  37 0000 00       		.byte	0
  38 0001 C1       		.byte	-63
  39 0002 81       		.byte	-127
  40 0003 40       		.byte	64
  41 0004 01       		.byte	1
  42 0005 C0       		.byte	-64
  43 0006 80       		.byte	-128
  44 0007 41       		.byte	65
  45 0008 01       		.byte	1
  46 0009 C0       		.byte	-64
  47 000a 80       		.byte	-128
  48 000b 41       		.byte	65
  49 000c 00       		.byte	0
  50 000d C1       		.byte	-63
  51 000e 81       		.byte	-127
  52 000f 40       		.byte	64
  53 0010 01       		.byte	1
  54 0011 C0       		.byte	-64
  55 0012 80       		.byte	-128
  56 0013 41       		.byte	65
  57 0014 00       		.byte	0
  58 0015 C1       		.byte	-63
  59 0016 81       		.byte	-127
  60 0017 40       		.byte	64
  61 0018 00       		.byte	0
  62 0019 C1       		.byte	-63
  63 001a 81       		.byte	-127
  64 001b 40       		.byte	64
  65 001c 01       		.byte	1
  66 001d C0       		.byte	-64
  67 001e 80       		.byte	-128
  68 001f 41       		.byte	65
  69 0020 01       		.byte	1
  70 0021 C0       		.byte	-64
  71 0022 80       		.byte	-128
  72 0023 41       		.byte	65
  73 0024 00       		.byte	0
  74 0025 C1       		.byte	-63
  75 0026 81       		.byte	-127
  76 0027 40       		.byte	64
  77 0028 00       		.byte	0
  78 0029 C1       		.byte	-63
  79 002a 81       		.byte	-127
  80 002b 40       		.byte	64
  81 002c 01       		.byte	1
  82 002d C0       		.byte	-64
  83 002e 80       		.byte	-128
  84 002f 41       		.byte	65
  85 0030 00       		.byte	0
  86 0031 C1       		.byte	-63
  87 0032 81       		.byte	-127
  88 0033 40       		.byte	64
  89 0034 01       		.byte	1
  90 0035 C0       		.byte	-64
  91 0036 80       		.byte	-128
  92 0037 41       		.byte	65
  93 0038 01       		.byte	1
  94 0039 C0       		.byte	-64
  95 003a 80       		.byte	-128
  96 003b 41       		.byte	65
  97 003c 00       		.byte	0
  98 003d C1       		.byte	-63
  99 003e 81       		.byte	-127
 100 003f 40       		.byte	64
 101 0040 01       		.byte	1
 102 0041 C0       		.byte	-64
 103 0042 80       		.byte	-128
 104 0043 41       		.byte	65
 105 0044 00       		.byte	0
 106 0045 C1       		.byte	-63
 107 0046 81       		.byte	-127
 108 0047 40       		.byte	64
 109 0048 00       		.byte	0
 110 0049 C1       		.byte	-63
 111 004a 81       		.byte	-127
 112 004b 40       		.byte	64
 113 004c 01       		.byte	1
 114 004d C0       		.byte	-64
 115 004e 80       		.byte	-128
 116 004f 41       		.byte	65
 117 0050 00       		.byte	0
 118 0051 C1       		.byte	-63
 119 0052 81       		.byte	-127
 120 0053 40       		.byte	64
 121 0054 01       		.byte	1
 122 0055 C0       		.byte	-64
 123 0056 80       		.byte	-128
 124 0057 41       		.byte	65
 125 0058 01       		.byte	1
 126 0059 C0       		.byte	-64
 127 005a 80       		.byte	-128
 128 005b 41       		.byte	65
 129 005c 00       		.byte	0
 130 005d C1       		.byte	-63
 131 005e 81       		.byte	-127
 132 005f 40       		.byte	64
 133 0060 00       		.byte	0
 134 0061 C1       		.byte	-63
 135 0062 81       		.byte	-127
 136 0063 40       		.byte	64
 137 0064 01       		.byte	1
 138 0065 C0       		.byte	-64
 139 0066 80       		.byte	-128
 140 0067 41       		.byte	65
 141 0068 01       		.byte	1
 142 0069 C0       		.byte	-64
 143 006a 80       		.byte	-128
 144 006b 41       		.byte	65
 145 006c 00       		.byte	0
 146 006d C1       		.byte	-63
 147 006e 81       		.byte	-127
 148 006f 40       		.byte	64
 149 0070 01       		.byte	1
 150 0071 C0       		.byte	-64
 151 0072 80       		.byte	-128
 152 0073 41       		.byte	65
 153 0074 00       		.byte	0
 154 0075 C1       		.byte	-63
 155 0076 81       		.byte	-127
 156 0077 40       		.byte	64
 157 0078 00       		.byte	0
 158 0079 C1       		.byte	-63
 159 007a 81       		.byte	-127
 160 007b 40       		.byte	64
 161 007c 01       		.byte	1
 162 007d C0       		.byte	-64
 163 007e 80       		.byte	-128
 164 007f 41       		.byte	65
 165 0080 01       		.byte	1
 166 0081 C0       		.byte	-64
 167 0082 80       		.byte	-128
 168 0083 41       		.byte	65
 169 0084 00       		.byte	0
 170 0085 C1       		.byte	-63
 171 0086 81       		.byte	-127
 172 0087 40       		.byte	64
 173 0088 00       		.byte	0
 174 0089 C1       		.byte	-63
 175 008a 81       		.byte	-127
 176 008b 40       		.byte	64
 177 008c 01       		.byte	1
 178 008d C0       		.byte	-64
 179 008e 80       		.byte	-128
 180 008f 41       		.byte	65
 181 0090 00       		.byte	0
 182 0091 C1       		.byte	-63
 183 0092 81       		.byte	-127
 184 0093 40       		.byte	64
 185 0094 01       		.byte	1
 186 0095 C0       		.byte	-64
 187 0096 80       		.byte	-128
 188 0097 41       		.byte	65
 189 0098 01       		.byte	1
 190 0099 C0       		.byte	-64
 191 009a 80       		.byte	-128
 192 009b 41       		.byte	65
 193 009c 00       		.byte	0
 194 009d C1       		.byte	-63
 195 009e 81       		.byte	-127
 196 009f 40       		.byte	64
 197 00a0 00       		.byte	0
 198 00a1 C1       		.byte	-63
 199 00a2 81       		.byte	-127
 200 00a3 40       		.byte	64
 201 00a4 01       		.byte	1
 202 00a5 C0       		.byte	-64
 203 00a6 80       		.byte	-128
 204 00a7 41       		.byte	65
 205 00a8 01       		.byte	1
 206 00a9 C0       		.byte	-64
 207 00aa 80       		.byte	-128
 208 00ab 41       		.byte	65
 209 00ac 00       		.byte	0
 210 00ad C1       		.byte	-63
 211 00ae 81       		.byte	-127
 212 00af 40       		.byte	64
 213 00b0 01       		.byte	1
 214 00b1 C0       		.byte	-64
 215 00b2 80       		.byte	-128
 216 00b3 41       		.byte	65
 217 00b4 00       		.byte	0
 218 00b5 C1       		.byte	-63
 219 00b6 81       		.byte	-127
 220 00b7 40       		.byte	64
 221 00b8 00       		.byte	0
 222 00b9 C1       		.byte	-63
 223 00ba 81       		.byte	-127
 224 00bb 40       		.byte	64
 225 00bc 01       		.byte	1
 226 00bd C0       		.byte	-64
 227 00be 80       		.byte	-128
 228 00bf 41       		.byte	65
 229 00c0 00       		.byte	0
 230 00c1 C1       		.byte	-63
 231 00c2 81       		.byte	-127
 232 00c3 40       		.byte	64
 233 00c4 01       		.byte	1
 234 00c5 C0       		.byte	-64
 235 00c6 80       		.byte	-128
 236 00c7 41       		.byte	65
 237 00c8 01       		.byte	1
 238 00c9 C0       		.byte	-64
 239 00ca 80       		.byte	-128
 240 00cb 41       		.byte	65
 241 00cc 00       		.byte	0
 242 00cd C1       		.byte	-63
 243 00ce 81       		.byte	-127
 244 00cf 40       		.byte	64
 245 00d0 01       		.byte	1
 246 00d1 C0       		.byte	-64
 247 00d2 80       		.byte	-128
 248 00d3 41       		.byte	65
 249 00d4 00       		.byte	0
 250 00d5 C1       		.byte	-63
 251 00d6 81       		.byte	-127
 252 00d7 40       		.byte	64
 253 00d8 00       		.byte	0
 254 00d9 C1       		.byte	-63
 255 00da 81       		.byte	-127
 256 00db 40       		.byte	64
 257 00dc 01       		.byte	1
 258 00dd C0       		.byte	-64
 259 00de 80       		.byte	-128
 260 00df 41       		.byte	65
 261 00e0 01       		.byte	1
 262 00e1 C0       		.byte	-64
 263 00e2 80       		.byte	-128
 264 00e3 41       		.byte	65
 265 00e4 00       		.byte	0
 266 00e5 C1       		.byte	-63
 267 00e6 81       		.byte	-127
 268 00e7 40       		.byte	64
 269 00e8 00       		.byte	0
 270 00e9 C1       		.byte	-63
 271 00ea 81       		.byte	-127
 272 00eb 40       		.byte	64
 273 00ec 01       		.byte	1
 274 00ed C0       		.byte	-64
 275 00ee 80       		.byte	-128
 276 00ef 41       		.byte	65
 277 00f0 00       		.byte	0
 278 00f1 C1       		.byte	-63
 279 00f2 81       		.byte	-127
 280 00f3 40       		.byte	64
 281 00f4 01       		.byte	1
 282 00f5 C0       		.byte	-64
 283 00f6 80       		.byte	-128
 284 00f7 41       		.byte	65
 285 00f8 01       		.byte	1
 286 00f9 C0       		.byte	-64
 287 00fa 80       		.byte	-128
 288 00fb 41       		.byte	65
 289 00fc 00       		.byte	0
 290 00fd C1       		.byte	-63
 291 00fe 81       		.byte	-127
 292 00ff 40       		.byte	64
 293              		.section	.rodata.table_crc_lo,"a",%progbits
 294              		.align	2
 297              	table_crc_lo:
 298 0000 00       		.byte	0
 299 0001 C0       		.byte	-64
 300 0002 C1       		.byte	-63
 301 0003 01       		.byte	1
 302 0004 C3       		.byte	-61
 303 0005 03       		.byte	3
 304 0006 02       		.byte	2
 305 0007 C2       		.byte	-62
 306 0008 C6       		.byte	-58
 307 0009 06       		.byte	6
 308 000a 07       		.byte	7
 309 000b C7       		.byte	-57
 310 000c 05       		.byte	5
 311 000d C5       		.byte	-59
 312 000e C4       		.byte	-60
 313 000f 04       		.byte	4
 314 0010 CC       		.byte	-52
 315 0011 0C       		.byte	12
 316 0012 0D       		.byte	13
 317 0013 CD       		.byte	-51
 318 0014 0F       		.byte	15
 319 0015 CF       		.byte	-49
 320 0016 CE       		.byte	-50
 321 0017 0E       		.byte	14
 322 0018 0A       		.byte	10
 323 0019 CA       		.byte	-54
 324 001a CB       		.byte	-53
 325 001b 0B       		.byte	11
 326 001c C9       		.byte	-55
 327 001d 09       		.byte	9
 328 001e 08       		.byte	8
 329 001f C8       		.byte	-56
 330 0020 D8       		.byte	-40
 331 0021 18       		.byte	24
 332 0022 19       		.byte	25
 333 0023 D9       		.byte	-39
 334 0024 1B       		.byte	27
 335 0025 DB       		.byte	-37
 336 0026 DA       		.byte	-38
 337 0027 1A       		.byte	26
 338 0028 1E       		.byte	30
 339 0029 DE       		.byte	-34
 340 002a DF       		.byte	-33
 341 002b 1F       		.byte	31
 342 002c DD       		.byte	-35
 343 002d 1D       		.byte	29
 344 002e 1C       		.byte	28
 345 002f DC       		.byte	-36
 346 0030 14       		.byte	20
 347 0031 D4       		.byte	-44
 348 0032 D5       		.byte	-43
 349 0033 15       		.byte	21
 350 0034 D7       		.byte	-41
 351 0035 17       		.byte	23
 352 0036 16       		.byte	22
 353 0037 D6       		.byte	-42
 354 0038 D2       		.byte	-46
 355 0039 12       		.byte	18
 356 003a 13       		.byte	19
 357 003b D3       		.byte	-45
 358 003c 11       		.byte	17
 359 003d D1       		.byte	-47
 360 003e D0       		.byte	-48
 361 003f 10       		.byte	16
 362 0040 F0       		.byte	-16
 363 0041 30       		.byte	48
 364 0042 31       		.byte	49
 365 0043 F1       		.byte	-15
 366 0044 33       		.byte	51
 367 0045 F3       		.byte	-13
 368 0046 F2       		.byte	-14
 369 0047 32       		.byte	50
 370 0048 36       		.byte	54
 371 0049 F6       		.byte	-10
 372 004a F7       		.byte	-9
 373 004b 37       		.byte	55
 374 004c F5       		.byte	-11
 375 004d 35       		.byte	53
 376 004e 34       		.byte	52
 377 004f F4       		.byte	-12
 378 0050 3C       		.byte	60
 379 0051 FC       		.byte	-4
 380 0052 FD       		.byte	-3
 381 0053 3D       		.byte	61
 382 0054 FF       		.byte	-1
 383 0055 3F       		.byte	63
 384 0056 3E       		.byte	62
 385 0057 FE       		.byte	-2
 386 0058 FA       		.byte	-6
 387 0059 3A       		.byte	58
 388 005a 3B       		.byte	59
 389 005b FB       		.byte	-5
 390 005c 39       		.byte	57
 391 005d F9       		.byte	-7
 392 005e F8       		.byte	-8
 393 005f 38       		.byte	56
 394 0060 28       		.byte	40
 395 0061 E8       		.byte	-24
 396 0062 E9       		.byte	-23
 397 0063 29       		.byte	41
 398 0064 EB       		.byte	-21
 399 0065 2B       		.byte	43
 400 0066 2A       		.byte	42
 401 0067 EA       		.byte	-22
 402 0068 EE       		.byte	-18
 403 0069 2E       		.byte	46
 404 006a 2F       		.byte	47
 405 006b EF       		.byte	-17
 406 006c 2D       		.byte	45
 407 006d ED       		.byte	-19
 408 006e EC       		.byte	-20
 409 006f 2C       		.byte	44
 410 0070 E4       		.byte	-28
 411 0071 24       		.byte	36
 412 0072 25       		.byte	37
 413 0073 E5       		.byte	-27
 414 0074 27       		.byte	39
 415 0075 E7       		.byte	-25
 416 0076 E6       		.byte	-26
 417 0077 26       		.byte	38
 418 0078 22       		.byte	34
 419 0079 E2       		.byte	-30
 420 007a E3       		.byte	-29
 421 007b 23       		.byte	35
 422 007c E1       		.byte	-31
 423 007d 21       		.byte	33
 424 007e 20       		.byte	32
 425 007f E0       		.byte	-32
 426 0080 A0       		.byte	-96
 427 0081 60       		.byte	96
 428 0082 61       		.byte	97
 429 0083 A1       		.byte	-95
 430 0084 63       		.byte	99
 431 0085 A3       		.byte	-93
 432 0086 A2       		.byte	-94
 433 0087 62       		.byte	98
 434 0088 66       		.byte	102
 435 0089 A6       		.byte	-90
 436 008a A7       		.byte	-89
 437 008b 67       		.byte	103
 438 008c A5       		.byte	-91
 439 008d 65       		.byte	101
 440 008e 64       		.byte	100
 441 008f A4       		.byte	-92
 442 0090 6C       		.byte	108
 443 0091 AC       		.byte	-84
 444 0092 AD       		.byte	-83
 445 0093 6D       		.byte	109
 446 0094 AF       		.byte	-81
 447 0095 6F       		.byte	111
 448 0096 6E       		.byte	110
 449 0097 AE       		.byte	-82
 450 0098 AA       		.byte	-86
 451 0099 6A       		.byte	106
 452 009a 6B       		.byte	107
 453 009b AB       		.byte	-85
 454 009c 69       		.byte	105
 455 009d A9       		.byte	-87
 456 009e A8       		.byte	-88
 457 009f 68       		.byte	104
 458 00a0 78       		.byte	120
 459 00a1 B8       		.byte	-72
 460 00a2 B9       		.byte	-71
 461 00a3 79       		.byte	121
 462 00a4 BB       		.byte	-69
 463 00a5 7B       		.byte	123
 464 00a6 7A       		.byte	122
 465 00a7 BA       		.byte	-70
 466 00a8 BE       		.byte	-66
 467 00a9 7E       		.byte	126
 468 00aa 7F       		.byte	127
 469 00ab BF       		.byte	-65
 470 00ac 7D       		.byte	125
 471 00ad BD       		.byte	-67
 472 00ae BC       		.byte	-68
 473 00af 7C       		.byte	124
 474 00b0 B4       		.byte	-76
 475 00b1 74       		.byte	116
 476 00b2 75       		.byte	117
 477 00b3 B5       		.byte	-75
 478 00b4 77       		.byte	119
 479 00b5 B7       		.byte	-73
 480 00b6 B6       		.byte	-74
 481 00b7 76       		.byte	118
 482 00b8 72       		.byte	114
 483 00b9 B2       		.byte	-78
 484 00ba B3       		.byte	-77
 485 00bb 73       		.byte	115
 486 00bc B1       		.byte	-79
 487 00bd 71       		.byte	113
 488 00be 70       		.byte	112
 489 00bf B0       		.byte	-80
 490 00c0 50       		.byte	80
 491 00c1 90       		.byte	-112
 492 00c2 91       		.byte	-111
 493 00c3 51       		.byte	81
 494 00c4 93       		.byte	-109
 495 00c5 53       		.byte	83
 496 00c6 52       		.byte	82
 497 00c7 92       		.byte	-110
 498 00c8 96       		.byte	-106
 499 00c9 56       		.byte	86
 500 00ca 57       		.byte	87
 501 00cb 97       		.byte	-105
 502 00cc 55       		.byte	85
 503 00cd 95       		.byte	-107
 504 00ce 94       		.byte	-108
 505 00cf 54       		.byte	84
 506 00d0 9C       		.byte	-100
 507 00d1 5C       		.byte	92
 508 00d2 5D       		.byte	93
 509 00d3 9D       		.byte	-99
 510 00d4 5F       		.byte	95
 511 00d5 9F       		.byte	-97
 512 00d6 9E       		.byte	-98
 513 00d7 5E       		.byte	94
 514 00d8 5A       		.byte	90
 515 00d9 9A       		.byte	-102
 516 00da 9B       		.byte	-101
 517 00db 5B       		.byte	91
 518 00dc 99       		.byte	-103
 519 00dd 59       		.byte	89
 520 00de 58       		.byte	88
 521 00df 98       		.byte	-104
 522 00e0 88       		.byte	-120
 523 00e1 48       		.byte	72
 524 00e2 49       		.byte	73
 525 00e3 89       		.byte	-119
 526 00e4 4B       		.byte	75
 527 00e5 8B       		.byte	-117
 528 00e6 8A       		.byte	-118
 529 00e7 4A       		.byte	74
 530 00e8 4E       		.byte	78
 531 00e9 8E       		.byte	-114
 532 00ea 8F       		.byte	-113
 533 00eb 4F       		.byte	79
 534 00ec 8D       		.byte	-115
 535 00ed 4D       		.byte	77
 536 00ee 4C       		.byte	76
 537 00ef 8C       		.byte	-116
 538 00f0 44       		.byte	68
 539 00f1 84       		.byte	-124
 540 00f2 85       		.byte	-123
 541 00f3 45       		.byte	69
 542 00f4 87       		.byte	-121
 543 00f5 47       		.byte	71
 544 00f6 46       		.byte	70
 545 00f7 86       		.byte	-122
 546 00f8 82       		.byte	-126
 547 00f9 42       		.byte	66
 548 00fa 43       		.byte	67
 549 00fb 83       		.byte	-125
 550 00fc 41       		.byte	65
 551 00fd 81       		.byte	-127
 552 00fe 80       		.byte	-128
 553 00ff 40       		.byte	64
 554              		.comm	fd,4,4
 555              		.comm	received_string,513,4
 556              		.comm	rx_length,4,4
 557              		.comm	input_Register,20,4
 558              		.section	.text.init_USARTx,"ax",%progbits
 559              		.align	2
 560              		.global	init_USARTx
 561              		.thumb
 562              		.thumb_func
 564              	init_USARTx:
 565              	.LFB110:
 566              		.file 1 "App/STM32F4-Discovery/usart.c"
   1:App/STM32F4-Discovery/usart.c **** /*! \file modbus_mk.c
   2:App/STM32F4-Discovery/usart.c ****  *  \brief modbus protocol functions and motor control
   3:App/STM32F4-Discovery/usart.c ****  */
   4:App/STM32F4-Discovery/usart.c **** 
   5:App/STM32F4-Discovery/usart.c **** 
   6:App/STM32F4-Discovery/usart.c **** #include "usart.h"
   7:App/STM32F4-Discovery/usart.c **** #include "printf.h"
   8:App/STM32F4-Discovery/usart.c **** 
   9:App/STM32F4-Discovery/usart.c **** 
  10:App/STM32F4-Discovery/usart.c **** #define DEBUG
  11:App/STM32F4-Discovery/usart.c **** 
  12:App/STM32F4-Discovery/usart.c **** 
  13:App/STM32F4-Discovery/usart.c **** /* This funcion initializes the USART1 peripheral
  14:App/STM32F4-Discovery/usart.c ****  * 
  15:App/STM32F4-Discovery/usart.c ****  * Arguments: baudrate --> the baudrate at which the USART is 
  16:App/STM32F4-Discovery/usart.c ****  * 						   supposed to operate
  17:App/STM32F4-Discovery/usart.c ****  */
  18:App/STM32F4-Discovery/usart.c **** 
  19:App/STM32F4-Discovery/usart.c **** #define pdFalse 0
  20:App/STM32F4-Discovery/usart.c **** #define pdTrue 	1
  21:App/STM32F4-Discovery/usart.c **** 
  22:App/STM32F4-Discovery/usart.c **** 
  23:App/STM32F4-Discovery/usart.c **** void init_USARTx(void)
  24:App/STM32F4-Discovery/usart.c **** {
 567              		.loc 1 24 0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 88
 570              		@ frame_needed = 1, uses_anonymous_args = 0
 571 0000 80B5     		push	{r7, lr}
 572              	.LCFI0:
 573              		.cfi_def_cfa_offset 8
 574              		.cfi_offset 7, -8
 575              		.cfi_offset 14, -4
 576 0002 96B0     		sub	sp, sp, #88
 577              	.LCFI1:
 578              		.cfi_def_cfa_offset 96
 579 0004 00AF     		add	r7, sp, #0
 580              	.LCFI2:
 581              		.cfi_def_cfa_register 7
  25:App/STM32F4-Discovery/usart.c **** 	
  26:App/STM32F4-Discovery/usart.c **** 	
  27:App/STM32F4-Discovery/usart.c **** 	GPIO_InitTypeDef GPIO_InitStruct; // this is for the GPIO pins used as TX and RX
  28:App/STM32F4-Discovery/usart.c **** 	USART_InitTypeDef USART_InitStruct; // this is for the USART1 initilization
  29:App/STM32F4-Discovery/usart.c **** 	NVIC_InitTypeDef NVIC_InitStruct; // this is used to configure the NVIC (nested vector interrupt c
  30:App/STM32F4-Discovery/usart.c **** 	DMA_InitTypeDef DMA_InitStruct;
  31:App/STM32F4-Discovery/usart.c **** 	
  32:App/STM32F4-Discovery/usart.c **** 	/* enable APB2 peripheral clock for USART1 
  33:App/STM32F4-Discovery/usart.c **** 	 * note that only USART1 and USART6 are connected to APB2
  34:App/STM32F4-Discovery/usart.c **** 	 * the other USARTs are connected to APB1
  35:App/STM32F4-Discovery/usart.c **** 	 */
  36:App/STM32F4-Discovery/usart.c **** 	RCC_APB2PeriphClockCmd(USARTx_CLK, ENABLE);
 582              		.loc 1 36 0
 583 0006 2020     		movs	r0, #32
 584 0008 0121     		movs	r1, #1
 585 000a FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
  37:App/STM32F4-Discovery/usart.c **** 	
  38:App/STM32F4-Discovery/usart.c **** 	/* enable the peripheral clock for the pins used by 
  39:App/STM32F4-Discovery/usart.c **** 	 * USART1, PB6 for TX and PB7 for RX 
  40:App/STM32F4-Discovery/usart.c **** 	 */
  41:App/STM32F4-Discovery/usart.c **** 	RCC_AHB1PeriphClockCmd(USARTx_TX_GPIO_CLK, ENABLE);
 586              		.loc 1 41 0
 587 000e 0420     		movs	r0, #4
 588 0010 0121     		movs	r1, #1
 589 0012 FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  42:App/STM32F4-Discovery/usart.c **** 	RCC_AHB1PeriphClockCmd(USARTx_RX_GPIO_CLK, ENABLE);
 590              		.loc 1 42 0
 591 0016 0420     		movs	r0, #4
 592 0018 0121     		movs	r1, #1
 593 001a FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  43:App/STM32F4-Discovery/usart.c **** 	RCC_AHB1PeriphClockCmd(USARTx_CS_GPIO_CLK, ENABLE);
 594              		.loc 1 43 0
 595 001e 4020     		movs	r0, #64
 596 0020 0121     		movs	r1, #1
 597 0022 FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  44:App/STM32F4-Discovery/usart.c **** 
  45:App/STM32F4-Discovery/usart.c **** 	
  46:App/STM32F4-Discovery/usart.c **** 	/* This sequence sets up the TX and RX pins 
  47:App/STM32F4-Discovery/usart.c **** 	 * so they work correctly with the USART1 peripheral
  48:App/STM32F4-Discovery/usart.c **** 	 */
  49:App/STM32F4-Discovery/usart.c **** 	GPIO_InitStruct.GPIO_Pin = USARTx_RX_GPIO_PIN | USARTx_TX_GPIO_PIN; // Pins 6 (TX) and 7 (RX) are 
 598              		.loc 1 49 0
 599 0026 C023     		movs	r3, #192
 600 0028 3B65     		str	r3, [r7, #80]
  50:App/STM32F4-Discovery/usart.c **** 	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF; 			// the pins are configured as alternate function so t
 601              		.loc 1 50 0
 602 002a 0223     		movs	r3, #2
 603 002c 87F85430 		strb	r3, [r7, #84]
  51:App/STM32F4-Discovery/usart.c **** 	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;		// this defines the IO speed and has nothing to d
 604              		.loc 1 51 0
 605 0030 0323     		movs	r3, #3
 606 0032 87F85530 		strb	r3, [r7, #85]
  52:App/STM32F4-Discovery/usart.c **** 	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;			// this defines the output type as push pull mode (a
 607              		.loc 1 52 0
 608 0036 0023     		movs	r3, #0
 609 0038 87F85630 		strb	r3, [r7, #86]
  53:App/STM32F4-Discovery/usart.c **** 	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;			// this activates the pullup resistors on the IO pins
 610              		.loc 1 53 0
 611 003c 0123     		movs	r3, #1
 612 003e 87F85730 		strb	r3, [r7, #87]
  54:App/STM32F4-Discovery/usart.c **** 	GPIO_Init(USARTx_TX_GPIO_PORT, &GPIO_InitStruct);					// now all the values are passed to the GPIO
 613              		.loc 1 54 0
 614 0042 07F15003 		add	r3, r7, #80
 615 0046 7648     		ldr	r0, .L4
 616 0048 1946     		mov	r1, r3
 617 004a FFF7FEFF 		bl	GPIO_Init
  55:App/STM32F4-Discovery/usart.c **** 	
  56:App/STM32F4-Discovery/usart.c **** 	
  57:App/STM32F4-Discovery/usart.c **** 	
  58:App/STM32F4-Discovery/usart.c **** 	/* Configure the chip select pin in this case we will use PG8 */
  59:App/STM32F4-Discovery/usart.c **** 	GPIO_InitStruct.GPIO_Pin = USARTx_CS_GPIO_PIN;
 618              		.loc 1 59 0
 619 004e 4FF48073 		mov	r3, #256
 620 0052 3B65     		str	r3, [r7, #80]
  60:App/STM32F4-Discovery/usart.c **** 	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_OUT;
 621              		.loc 1 60 0
 622 0054 0123     		movs	r3, #1
 623 0056 87F85430 		strb	r3, [r7, #84]
  61:App/STM32F4-Discovery/usart.c **** 	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;
 624              		.loc 1 61 0
 625 005a 0023     		movs	r3, #0
 626 005c 87F85630 		strb	r3, [r7, #86]
  62:App/STM32F4-Discovery/usart.c **** 	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;
 627              		.loc 1 62 0
 628 0060 0323     		movs	r3, #3
 629 0062 87F85530 		strb	r3, [r7, #85]
  63:App/STM32F4-Discovery/usart.c **** 	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;
 630              		.loc 1 63 0
 631 0066 0123     		movs	r3, #1
 632 0068 87F85730 		strb	r3, [r7, #87]
  64:App/STM32F4-Discovery/usart.c **** 	GPIO_Init(USARTx_CS_GPIO_PORT, &GPIO_InitStruct);
 633              		.loc 1 64 0
 634 006c 07F15003 		add	r3, r7, #80
 635 0070 6C48     		ldr	r0, .L4+4
 636 0072 1946     		mov	r1, r3
 637 0074 FFF7FEFF 		bl	GPIO_Init
  65:App/STM32F4-Discovery/usart.c **** 
  66:App/STM32F4-Discovery/usart.c **** 	DD() // set PG8 high
 638              		.loc 1 66 0
 639 0078 6A4B     		ldr	r3, .L4+4
 640 007a 6A4A     		ldr	r2, .L4+4
 641 007c 128B     		ldrh	r2, [r2, #24]	@ movhi
 642 007e 92B2     		uxth	r2, r2
 643 0080 42F48072 		orr	r2, r2, #256
 644 0084 92B2     		uxth	r2, r2
 645 0086 1A83     		strh	r2, [r3, #24]	@ movhi
  67:App/STM32F4-Discovery/usart.c **** 	
  68:App/STM32F4-Discovery/usart.c **** 	
  69:App/STM32F4-Discovery/usart.c **** 	/* The RX and TX pins are now connected to their AF
  70:App/STM32F4-Discovery/usart.c **** 	 * so that the USART1 can take over control of the 
  71:App/STM32F4-Discovery/usart.c **** 	 * pins
  72:App/STM32F4-Discovery/usart.c **** 	 */
  73:App/STM32F4-Discovery/usart.c **** 	GPIO_PinAFConfig(GPIOC, GPIO_PinSource6, GPIO_AF_USART6); //
 646              		.loc 1 73 0
 647 0088 6548     		ldr	r0, .L4
 648 008a 0621     		movs	r1, #6
 649 008c 0822     		movs	r2, #8
 650 008e FFF7FEFF 		bl	GPIO_PinAFConfig
  74:App/STM32F4-Discovery/usart.c **** 	GPIO_PinAFConfig(GPIOC, GPIO_PinSource7, GPIO_AF_USART6);
 651              		.loc 1 74 0
 652 0092 6348     		ldr	r0, .L4
 653 0094 0721     		movs	r1, #7
 654 0096 0822     		movs	r2, #8
 655 0098 FFF7FEFF 		bl	GPIO_PinAFConfig
  75:App/STM32F4-Discovery/usart.c **** 	
  76:App/STM32F4-Discovery/usart.c **** 	/* Now the USART_InitStruct is used to define the 
  77:App/STM32F4-Discovery/usart.c **** 	 * properties of USART1 
  78:App/STM32F4-Discovery/usart.c **** 	 */
  79:App/STM32F4-Discovery/usart.c **** 	USART_InitStruct.USART_BaudRate = 38400;				// the baudrate is set to the value we passed into thi
 656              		.loc 1 79 0
 657 009c 4FF41643 		mov	r3, #38400
 658 00a0 3B64     		str	r3, [r7, #64]
  80:App/STM32F4-Discovery/usart.c **** 	USART_InitStruct.USART_WordLength = USART_WordLength_8b;// we want the data frame size to be 8 bit
 659              		.loc 1 80 0
 660 00a2 0023     		movs	r3, #0
 661 00a4 A7F84430 		strh	r3, [r7, #68]	@ movhi
  81:App/STM32F4-Discovery/usart.c **** 	USART_InitStruct.USART_StopBits = USART_StopBits_1;		// we want 1 stop bit (standard)
 662              		.loc 1 81 0
 663 00a8 0023     		movs	r3, #0
 664 00aa A7F84630 		strh	r3, [r7, #70]	@ movhi
  82:App/STM32F4-Discovery/usart.c **** 	USART_InitStruct.USART_Parity = USART_Parity_No;		// we don't want a parity bit (standard)
 665              		.loc 1 82 0
 666 00ae 0023     		movs	r3, #0
 667 00b0 A7F84830 		strh	r3, [r7, #72]	@ movhi
  83:App/STM32F4-Discovery/usart.c **** 	USART_InitStruct.USART_HardwareFlowControl = USART_HardwareFlowControl_None; // we don't want flow
 668              		.loc 1 83 0
 669 00b4 0023     		movs	r3, #0
 670 00b6 A7F84C30 		strh	r3, [r7, #76]	@ movhi
  84:App/STM32F4-Discovery/usart.c **** 	USART_InitStruct.USART_Mode = USART_Mode_Tx | USART_Mode_Rx; // we want to enable the transmitter 
 671              		.loc 1 84 0
 672 00ba 0C23     		movs	r3, #12
 673 00bc A7F84A30 		strh	r3, [r7, #74]	@ movhi
  85:App/STM32F4-Discovery/usart.c **** 	USART_Init(USART6, &USART_InitStruct);					// again all the properties are passed to the USART_Ini
 674              		.loc 1 85 0
 675 00c0 07F14003 		add	r3, r7, #64
 676 00c4 5848     		ldr	r0, .L4+8
 677 00c6 1946     		mov	r1, r3
 678 00c8 FFF7FEFF 		bl	USART_Init
  86:App/STM32F4-Discovery/usart.c **** 	
  87:App/STM32F4-Discovery/usart.c **** 	
  88:App/STM32F4-Discovery/usart.c **** 	/* Here the USART1 receive interrupt is enabled
  89:App/STM32F4-Discovery/usart.c **** 	 * and the interrupt controller is configured 
  90:App/STM32F4-Discovery/usart.c **** 	 * to jump to the USART1_IRQHandler() function
  91:App/STM32F4-Discovery/usart.c **** 	 * if the USART1 receive interrupt occurs
  92:App/STM32F4-Discovery/usart.c **** 	 */
  93:App/STM32F4-Discovery/usart.c **** 	USART_ITConfig(USARTx, USART_IT_RXNE, ENABLE); // enable the USART1 receive interrupt 
 679              		.loc 1 93 0
 680 00cc 5648     		ldr	r0, .L4+8
 681 00ce 40F22551 		movw	r1, #1317
 682 00d2 0122     		movs	r2, #1
 683 00d4 FFF7FEFF 		bl	USART_ITConfig
  94:App/STM32F4-Discovery/usart.c **** 	
  95:App/STM32F4-Discovery/usart.c **** 	NVIC_InitStruct.NVIC_IRQChannel = USART6_IRQn;		 // we want to configure the USART interrupts
 684              		.loc 1 95 0
 685 00d8 4723     		movs	r3, #71
 686 00da 87F83C30 		strb	r3, [r7, #60]
  96:App/STM32F4-Discovery/usart.c **** 	NVIC_InitStruct.NVIC_IRQChannelPreemptionPriority = configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY +
 687              		.loc 1 96 0
 688 00de 0623     		movs	r3, #6
 689 00e0 87F83D30 		strb	r3, [r7, #61]
  97:App/STM32F4-Discovery/usart.c **** 	NVIC_InitStruct.NVIC_IRQChannelSubPriority = 0x1;		 // this sets the subpriority inside the group
 690              		.loc 1 97 0
 691 00e4 0123     		movs	r3, #1
 692 00e6 87F83E30 		strb	r3, [r7, #62]
  98:App/STM32F4-Discovery/usart.c **** 	NVIC_InitStruct.NVIC_IRQChannelCmd = ENABLE;			 // the USART1 interrupts are globally enabled
 693              		.loc 1 98 0
 694 00ea 0123     		movs	r3, #1
 695 00ec 87F83F30 		strb	r3, [r7, #63]
  99:App/STM32F4-Discovery/usart.c **** 	NVIC_Init(&NVIC_InitStruct);	 // the properties are passed to the NVIC_Init function which takes c
 696              		.loc 1 99 0
 697 00f0 07F13C03 		add	r3, r7, #60
 698 00f4 1846     		mov	r0, r3
 699 00f6 FFF7FEFF 		bl	NVIC_Init
 100:App/STM32F4-Discovery/usart.c **** 
 101:App/STM32F4-Discovery/usart.c **** 	// finally this enables the complete USART1 peripheral
 102:App/STM32F4-Discovery/usart.c **** 	USART_Cmd(USART6, ENABLE);
 700              		.loc 1 102 0
 701 00fa 4B48     		ldr	r0, .L4+8
 702 00fc 0121     		movs	r1, #1
 703 00fe FFF7FEFF 		bl	USART_Cmd
 103:App/STM32F4-Discovery/usart.c **** 
 104:App/STM32F4-Discovery/usart.c **** 		/* setup DMA */
 105:App/STM32F4-Discovery/usart.c **** 
 106:App/STM32F4-Discovery/usart.c **** 	// enable clock 
 107:App/STM32F4-Discovery/usart.c **** 	RCC_AHB1PeriphClockCmd (USARTx_DMA_CLK, ENABLE); 
 704              		.loc 1 107 0
 705 0102 4FF48000 		mov	r0, #4194304
 706 0106 0121     		movs	r1, #1
 707 0108 FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
 108:App/STM32F4-Discovery/usart.c **** 	
 109:App/STM32F4-Discovery/usart.c **** 	// start with blank DMA configuration
 110:App/STM32F4-Discovery/usart.c **** 	DMA_DeInit (USARTx_TX_DMA_STREAM);
 708              		.loc 1 110 0
 709 010c 4748     		ldr	r0, .L4+12
 710 010e FFF7FEFF 		bl	DMA_DeInit
 111:App/STM32F4-Discovery/usart.c **** 	DMA_DeInit (USARTx_RX_DMA_STREAM);
 711              		.loc 1 111 0
 712 0112 4748     		ldr	r0, .L4+16
 713 0114 FFF7FEFF 		bl	DMA_DeInit
 112:App/STM32F4-Discovery/usart.c **** 
 113:App/STM32F4-Discovery/usart.c **** 	// check if DMA stream is disabled before enabling 
 114:App/STM32F4-Discovery/usart.c **** 	// this is useful when stream is enabled and disabled multiple times. 
 115:App/STM32F4-Discovery/usart.c **** 	while (DMA_GetCmdStatus (USARTx_TX_DMA_STREAM) != DISABLE);
 714              		.loc 1 115 0
 715 0118 00BF     		nop
 716              	.L2:
 717              		.loc 1 115 0 is_stmt 0 discriminator 1
 718 011a 4448     		ldr	r0, .L4+12
 719 011c FFF7FEFF 		bl	DMA_GetCmdStatus
 720 0120 0346     		mov	r3, r0
 721 0122 002B     		cmp	r3, #0
 722 0124 F9D1     		bne	.L2
 116:App/STM32F4-Discovery/usart.c **** 	while (DMA_GetCmdStatus (USARTx_RX_DMA_STREAM) != DISABLE);
 723              		.loc 1 116 0 is_stmt 1
 724 0126 00BF     		nop
 725              	.L3:
 726              		.loc 1 116 0 is_stmt 0 discriminator 1
 727 0128 4148     		ldr	r0, .L4+16
 728 012a FFF7FEFF 		bl	DMA_GetCmdStatus
 729 012e 0346     		mov	r3, r0
 730 0130 002B     		cmp	r3, #0
 731 0132 F9D1     		bne	.L3
 117:App/STM32F4-Discovery/usart.c **** 	
 118:App/STM32F4-Discovery/usart.c **** 	
 119:App/STM32F4-Discovery/usart.c **** 	DMA_StructInit(&DMA_InitStruct);
 732              		.loc 1 119 0 is_stmt 1
 733 0134 3B46     		mov	r3, r7
 734 0136 1846     		mov	r0, r3
 735 0138 FFF7FEFF 		bl	DMA_StructInit
 120:App/STM32F4-Discovery/usart.c ****   	//Configure DMA Initialization Structure
 121:App/STM32F4-Discovery/usart.c **** 	//DMA_InitStruct.DMA_FIFOMode = DMA_FIFOMode_Disable ;
 122:App/STM32F4-Discovery/usart.c ****  	//DMA_InitStruct.DMA_FIFOThreshold = DMA_FIFOThreshold_HalfFull ;
 123:App/STM32F4-Discovery/usart.c ****   	//DMA_InitStruct.DMA_MemoryBurst = DMA_MemoryBurst_Single ;
 124:App/STM32F4-Discovery/usart.c ****   	DMA_InitStruct.DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;
 736              		.loc 1 124 0
 737 013c 0023     		movs	r3, #0
 738 013e 3B62     		str	r3, [r7, #32]
 125:App/STM32F4-Discovery/usart.c ****   	DMA_InitStruct.DMA_MemoryInc = DMA_MemoryInc_Enable;
 739              		.loc 1 125 0
 740 0140 4FF48063 		mov	r3, #1024
 741 0144 BB61     		str	r3, [r7, #24]
 126:App/STM32F4-Discovery/usart.c ****   	DMA_InitStruct.DMA_Mode = DMA_Mode_Normal;
 742              		.loc 1 126 0
 743 0146 0023     		movs	r3, #0
 744 0148 7B62     		str	r3, [r7, #36]
 127:App/STM32F4-Discovery/usart.c ****   	DMA_InitStruct.DMA_PeripheralBaseAddr =(uint32_t) (&(USARTx->DR)) ;
 745              		.loc 1 127 0
 746 014a 3A4B     		ldr	r3, .L4+20
 747 014c 7B60     		str	r3, [r7, #4]
 128:App/STM32F4-Discovery/usart.c ****   	DMA_InitStruct.DMA_PeripheralBurst = DMA_PeripheralBurst_Single;
 748              		.loc 1 128 0
 749 014e 0023     		movs	r3, #0
 750 0150 BB63     		str	r3, [r7, #56]
 129:App/STM32F4-Discovery/usart.c ****   	DMA_InitStruct.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;
 751              		.loc 1 129 0
 752 0152 0023     		movs	r3, #0
 753 0154 FB61     		str	r3, [r7, #28]
 130:App/STM32F4-Discovery/usart.c ****   	DMA_InitStruct.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
 754              		.loc 1 130 0
 755 0156 0023     		movs	r3, #0
 756 0158 7B61     		str	r3, [r7, #20]
 131:App/STM32F4-Discovery/usart.c ****   	DMA_InitStruct.DMA_Priority = DMA_Priority_High;
 757              		.loc 1 131 0
 758 015a 4FF40033 		mov	r3, #131072
 759 015e BB62     		str	r3, [r7, #40]
 132:App/STM32F4-Discovery/usart.c ****   	// Configure TX DMA 
 133:App/STM32F4-Discovery/usart.c ****   	DMA_InitStruct.DMA_Channel = USARTx_TX_DMA_CHANNEL ;
 760              		.loc 1 133 0
 761 0160 4FF02063 		mov	r3, #167772160
 762 0164 3B60     		str	r3, [r7]
 134:App/STM32F4-Discovery/usart.c ****   	DMA_InitStruct.DMA_DIR = DMA_DIR_MemoryToPeripheral ;
 763              		.loc 1 134 0
 764 0166 4023     		movs	r3, #64
 765 0168 FB60     		str	r3, [r7, #12]
 135:App/STM32F4-Discovery/usart.c ****   	DMA_InitStruct.DMA_Memory0BaseAddr = (uint32_t) &bufferTX ;
 766              		.loc 1 135 0
 767 016a 334B     		ldr	r3, .L4+24
 768 016c BB60     		str	r3, [r7, #8]
 136:App/STM32F4-Discovery/usart.c **** 	DMA_InitStruct.DMA_BufferSize = MAX_BUFFER_LENGTH;
 769              		.loc 1 136 0
 770 016e 4FF4FA63 		mov	r3, #2000
 771 0172 3B61     		str	r3, [r7, #16]
 137:App/STM32F4-Discovery/usart.c ****   	DMA_Init(USARTx_TX_DMA_STREAM, &DMA_InitStruct);
 772              		.loc 1 137 0
 773 0174 3B46     		mov	r3, r7
 774 0176 2D48     		ldr	r0, .L4+12
 775 0178 1946     		mov	r1, r3
 776 017a FFF7FEFF 		bl	DMA_Init
 138:App/STM32F4-Discovery/usart.c **** 	// Configure RX DMA 
 139:App/STM32F4-Discovery/usart.c ****   	DMA_InitStruct.DMA_Channel = USARTx_RX_DMA_CHANNEL ;
 777              		.loc 1 139 0
 778 017e 4FF02063 		mov	r3, #167772160
 779 0182 3B60     		str	r3, [r7]
 140:App/STM32F4-Discovery/usart.c **** 	DMA_InitStruct.DMA_DIR = DMA_DIR_PeripheralToMemory ;
 780              		.loc 1 140 0
 781 0184 0023     		movs	r3, #0
 782 0186 FB60     		str	r3, [r7, #12]
 141:App/STM32F4-Discovery/usart.c **** 	DMA_InitStruct.DMA_Memory0BaseAddr = (uint32_t)&bufferRX; 
 783              		.loc 1 141 0
 784 0188 2C4B     		ldr	r3, .L4+28
 785 018a BB60     		str	r3, [r7, #8]
 142:App/STM32F4-Discovery/usart.c **** 	DMA_InitStruct.DMA_BufferSize = MAX_BUFFER_LENGTH;
 786              		.loc 1 142 0
 787 018c 4FF4FA63 		mov	r3, #2000
 788 0190 3B61     		str	r3, [r7, #16]
 143:App/STM32F4-Discovery/usart.c **** 	DMA_Init(USARTx_RX_DMA_STREAM, &DMA_InitStruct);	
 789              		.loc 1 143 0
 790 0192 3B46     		mov	r3, r7
 791 0194 2648     		ldr	r0, .L4+16
 792 0196 1946     		mov	r1, r3
 793 0198 FFF7FEFF 		bl	DMA_Init
 144:App/STM32F4-Discovery/usart.c **** 	
 145:App/STM32F4-Discovery/usart.c **** 	DMA_ITConfig(USARTx_TX_DMA_STREAM, DMA_IT_TC, ENABLE); 
 794              		.loc 1 145 0
 795 019c 2348     		ldr	r0, .L4+12
 796 019e 1021     		movs	r1, #16
 797 01a0 0122     		movs	r2, #1
 798 01a2 FFF7FEFF 		bl	DMA_ITConfig
 146:App/STM32F4-Discovery/usart.c **** 	DMA_ITConfig(USARTx_RX_DMA_STREAM, DMA_IT_TC, ENABLE); 
 799              		.loc 1 146 0
 800 01a6 2248     		ldr	r0, .L4+16
 801 01a8 1021     		movs	r1, #16
 802 01aa 0122     		movs	r2, #1
 803 01ac FFF7FEFF 		bl	DMA_ITConfig
 147:App/STM32F4-Discovery/usart.c ****   
 148:App/STM32F4-Discovery/usart.c **** 	USART_ClearFlag(USARTx, USART_FLAG_TXE);
 804              		.loc 1 148 0
 805 01b0 1D48     		ldr	r0, .L4+8
 806 01b2 8021     		movs	r1, #128
 807 01b4 FFF7FEFF 		bl	USART_ClearFlag
 149:App/STM32F4-Discovery/usart.c **** 	USART_ClearFlag(USARTx, USART_FLAG_RXNE);
 808              		.loc 1 149 0
 809 01b8 1B48     		ldr	r0, .L4+8
 810 01ba 2021     		movs	r1, #32
 811 01bc FFF7FEFF 		bl	USART_ClearFlag
 150:App/STM32F4-Discovery/usart.c ****   	
 151:App/STM32F4-Discovery/usart.c **** 	// enable the interrupt in the NVIC
 152:App/STM32F4-Discovery/usart.c ****  	NVIC_InitStruct.NVIC_IRQChannel = USARTx_TX_DMA_IRQn;
 812              		.loc 1 152 0
 813 01c0 4523     		movs	r3, #69
 814 01c2 87F83C30 		strb	r3, [r7, #60]
 153:App/STM32F4-Discovery/usart.c ****   	NVIC_InitStruct.NVIC_IRQChannelPreemptionPriority = configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY
 815              		.loc 1 153 0
 816 01c6 0723     		movs	r3, #7
 817 01c8 87F83D30 		strb	r3, [r7, #61]
 154:App/STM32F4-Discovery/usart.c ****  	NVIC_InitStruct.NVIC_IRQChannelSubPriority = 0x1;
 818              		.loc 1 154 0
 819 01cc 0123     		movs	r3, #1
 820 01ce 87F83E30 		strb	r3, [r7, #62]
 155:App/STM32F4-Discovery/usart.c ****   	NVIC_InitStruct.NVIC_IRQChannelCmd = ENABLE;
 821              		.loc 1 155 0
 822 01d2 0123     		movs	r3, #1
 823 01d4 87F83F30 		strb	r3, [r7, #63]
 156:App/STM32F4-Discovery/usart.c ****   	NVIC_Init (&NVIC_InitStruct);
 824              		.loc 1 156 0
 825 01d8 07F13C03 		add	r3, r7, #60
 826 01dc 1846     		mov	r0, r3
 827 01de FFF7FEFF 		bl	NVIC_Init
 157:App/STM32F4-Discovery/usart.c **** 	// enable the interrupt in the NVIC
 158:App/STM32F4-Discovery/usart.c ****  	NVIC_InitStruct.NVIC_IRQChannel = USARTx_RX_DMA_IRQn;
 828              		.loc 1 158 0
 829 01e2 3923     		movs	r3, #57
 830 01e4 87F83C30 		strb	r3, [r7, #60]
 159:App/STM32F4-Discovery/usart.c ****    	NVIC_InitStruct.NVIC_IRQChannelPreemptionPriority = configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORIT
 831              		.loc 1 159 0
 832 01e8 0723     		movs	r3, #7
 833 01ea 87F83D30 		strb	r3, [r7, #61]
 160:App/STM32F4-Discovery/usart.c ****  	NVIC_InitStruct.NVIC_IRQChannelSubPriority = 0x1;
 834              		.loc 1 160 0
 835 01ee 0123     		movs	r3, #1
 836 01f0 87F83E30 		strb	r3, [r7, #62]
 161:App/STM32F4-Discovery/usart.c ****   	NVIC_InitStruct.NVIC_IRQChannelCmd = ENABLE;
 837              		.loc 1 161 0
 838 01f4 0123     		movs	r3, #1
 839 01f6 87F83F30 		strb	r3, [r7, #63]
 162:App/STM32F4-Discovery/usart.c ****   	NVIC_Init (&NVIC_InitStruct);
 840              		.loc 1 162 0
 841 01fa 07F13C03 		add	r3, r7, #60
 842 01fe 1846     		mov	r0, r3
 843 0200 FFF7FEFF 		bl	NVIC_Init
 163:App/STM32F4-Discovery/usart.c ****   	// Enable dma tx and rx request
 164:App/STM32F4-Discovery/usart.c **** 	USART_DMACmd (USARTx, USART_DMAReq_Tx, ENABLE);	
 844              		.loc 1 164 0
 845 0204 0848     		ldr	r0, .L4+8
 846 0206 8021     		movs	r1, #128
 847 0208 0122     		movs	r2, #1
 848 020a FFF7FEFF 		bl	USART_DMACmd
 165:App/STM32F4-Discovery/usart.c **** 	USART_DMACmd (USARTx, USART_DMAReq_Rx, ENABLE);	
 849              		.loc 1 165 0
 850 020e 0648     		ldr	r0, .L4+8
 851 0210 4021     		movs	r1, #64
 852 0212 0122     		movs	r2, #1
 853 0214 FFF7FEFF 		bl	USART_DMACmd
 166:App/STM32F4-Discovery/usart.c **** 	
 167:App/STM32F4-Discovery/usart.c **** 
 168:App/STM32F4-Discovery/usart.c **** }
 854              		.loc 1 168 0
 855 0218 5837     		adds	r7, r7, #88
 856 021a BD46     		mov	sp, r7
 857              		@ sp needed
 858 021c 80BD     		pop	{r7, pc}
 859              	.L5:
 860 021e 00BF     		.align	2
 861              	.L4:
 862 0220 00080240 		.word	1073874944
 863 0224 00180240 		.word	1073879040
 864 0228 00140140 		.word	1073812480
 865 022c A0640240 		.word	1073898656
 866 0230 28640240 		.word	1073898536
 867 0234 04140140 		.word	1073812484
 868 0238 00000000 		.word	bufferTX
 869 023c 00000000 		.word	bufferRX
 870              		.cfi_endproc
 871              	.LFE110:
 873              		.section	.text.DMA2_Stream1_IRQHandler,"ax",%progbits
 874              		.align	2
 875              		.global	DMA2_Stream1_IRQHandler
 876              		.thumb
 877              		.thumb_func
 879              	DMA2_Stream1_IRQHandler:
 880              	.LFB111:
 169:App/STM32F4-Discovery/usart.c **** 
 170:App/STM32F4-Discovery/usart.c **** void DMA2_Stream1_IRQHandler()
 171:App/STM32F4-Discovery/usart.c **** {
 881              		.loc 1 171 0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 8
 884              		@ frame_needed = 1, uses_anonymous_args = 0
 885 0000 80B5     		push	{r7, lr}
 886              	.LCFI3:
 887              		.cfi_def_cfa_offset 8
 888              		.cfi_offset 7, -8
 889              		.cfi_offset 14, -4
 890 0002 82B0     		sub	sp, sp, #8
 891              	.LCFI4:
 892              		.cfi_def_cfa_offset 16
 893 0004 00AF     		add	r7, sp, #0
 894              	.LCFI5:
 895              		.cfi_def_cfa_register 7
 172:App/STM32F4-Discovery/usart.c **** 	/*!	\var static unsigned portBASE_TYPE xHigherPriorityTaskWoken
 173:App/STM32F4-Discovery/usart.c **** 	 * 	\brief Indicates if higher priority has been woken
 174:App/STM32F4-Discovery/usart.c **** 	 */
 175:App/STM32F4-Discovery/usart.c **** 
 176:App/STM32F4-Discovery/usart.c **** 	unsigned portBASE_TYPE xHigherPriorityTaskWoken = pdFalse;
 896              		.loc 1 176 0
 897 0006 0023     		movs	r3, #0
 898 0008 7B60     		str	r3, [r7, #4]
 177:App/STM32F4-Discovery/usart.c **** 
 178:App/STM32F4-Discovery/usart.c ****   // Test if DMA Stream Transfer Complete interrupt
 179:App/STM32F4-Discovery/usart.c ****   if (DMA_GetITStatus (USARTx_RX_DMA_STREAM, USARTx_RX_DMA_FLAG_TCIF)) {
 899              		.loc 1 179 0
 900 000a 1748     		ldr	r0, .L9
 901 000c 1749     		ldr	r1, .L9+4
 902 000e FFF7FEFF 		bl	DMA_GetITStatus
 903 0012 0346     		mov	r3, r0
 904 0014 002B     		cmp	r3, #0
 905 0016 1CD0     		beq	.L7
 180:App/STM32F4-Discovery/usart.c ****     
 181:App/STM32F4-Discovery/usart.c **** 	DMA_ClearITPendingBit (USARTx_RX_DMA_STREAM,  USARTx_RX_DMA_FLAG_TCIF);
 906              		.loc 1 181 0
 907 0018 1348     		ldr	r0, .L9
 908 001a 1449     		ldr	r1, .L9+4
 909 001c FFF7FEFF 		bl	DMA_ClearITPendingBit
 182:App/STM32F4-Discovery/usart.c **** 	
 183:App/STM32F4-Discovery/usart.c **** 	DE();
 910              		.loc 1 183 0
 911 0020 134B     		ldr	r3, .L9+8
 912 0022 134A     		ldr	r2, .L9+8
 913 0024 528B     		ldrh	r2, [r2, #26]	@ movhi
 914 0026 92B2     		uxth	r2, r2
 915 0028 42F48072 		orr	r2, r2, #256
 916 002c 92B2     		uxth	r2, r2
 917 002e 5A83     		strh	r2, [r3, #26]	@ movhi
 184:App/STM32F4-Discovery/usart.c **** //	DMA_Cmd(USARTx_TX_DMA_STREAM, DISABLE);		
 185:App/STM32F4-Discovery/usart.c **** 	DMA_Cmd(USARTx_RX_DMA_STREAM, DISABLE);		
 918              		.loc 1 185 0
 919 0030 0D48     		ldr	r0, .L9
 920 0032 0021     		movs	r1, #0
 921 0034 FFF7FEFF 		bl	DMA_Cmd
 186:App/STM32F4-Discovery/usart.c ****  
 187:App/STM32F4-Discovery/usart.c **** 	taskENTER_CRITICAL(); 
 922              		.loc 1 187 0
 923 0038 FFF7FEFF 		bl	vPortEnterCritical
 188:App/STM32F4-Discovery/usart.c **** 	xSemaphoreGiveFromISR( xSemaphoreDMASPI, &xHigherPriorityTaskWoken );
 924              		.loc 1 188 0
 925 003c 0D4B     		ldr	r3, .L9+12
 926 003e 1A68     		ldr	r2, [r3]
 927 0040 3B1D     		adds	r3, r7, #4
 928 0042 1046     		mov	r0, r2
 929 0044 0021     		movs	r1, #0
 930 0046 1A46     		mov	r2, r3
 931 0048 0023     		movs	r3, #0
 932 004a FFF7FEFF 		bl	xQueueGenericSendFromISR
 189:App/STM32F4-Discovery/usart.c **** 	taskEXIT_CRITICAL(); //
 933              		.loc 1 189 0
 934 004e FFF7FEFF 		bl	vPortExitCritical
 935              	.L7:
 190:App/STM32F4-Discovery/usart.c ****   }	
 191:App/STM32F4-Discovery/usart.c ****  portEND_SWITCHING_ISR( xHigherPriorityTaskWoken );
 936              		.loc 1 191 0
 937 0052 7B68     		ldr	r3, [r7, #4]
 938 0054 002B     		cmp	r3, #0
 939 0056 03D0     		beq	.L6
 940              		.loc 1 191 0 is_stmt 0 discriminator 1
 941 0058 074B     		ldr	r3, .L9+16
 942 005a 4FF08052 		mov	r2, #268435456
 943 005e 1A60     		str	r2, [r3]
 944              	.L6:
 192:App/STM32F4-Discovery/usart.c **** }
 945              		.loc 1 192 0 is_stmt 1
 946 0060 0837     		adds	r7, r7, #8
 947 0062 BD46     		mov	sp, r7
 948              		@ sp needed
 949 0064 80BD     		pop	{r7, pc}
 950              	.L10:
 951 0066 00BF     		.align	2
 952              	.L9:
 953 0068 28640240 		.word	1073898536
 954 006c 00880010 		.word	268470272
 955 0070 00180240 		.word	1073879040
 956 0074 00000000 		.word	xSemaphoreDMASPI
 957 0078 04ED00E0 		.word	-536810236
 958              		.cfi_endproc
 959              	.LFE111:
 961              		.section	.text.DMA2_Stream6_IRQHandler,"ax",%progbits
 962              		.align	2
 963              		.global	DMA2_Stream6_IRQHandler
 964              		.thumb
 965              		.thumb_func
 967              	DMA2_Stream6_IRQHandler:
 968              	.LFB112:
 193:App/STM32F4-Discovery/usart.c **** void DMA2_Stream6_IRQHandler()
 194:App/STM32F4-Discovery/usart.c **** {
 969              		.loc 1 194 0
 970              		.cfi_startproc
 971              		@ args = 0, pretend = 0, frame = 8
 972              		@ frame_needed = 1, uses_anonymous_args = 0
 973 0000 80B5     		push	{r7, lr}
 974              	.LCFI6:
 975              		.cfi_def_cfa_offset 8
 976              		.cfi_offset 7, -8
 977              		.cfi_offset 14, -4
 978 0002 82B0     		sub	sp, sp, #8
 979              	.LCFI7:
 980              		.cfi_def_cfa_offset 16
 981 0004 00AF     		add	r7, sp, #0
 982              	.LCFI8:
 983              		.cfi_def_cfa_register 7
 195:App/STM32F4-Discovery/usart.c **** 	/*!	\var static unsigned portBASE_TYPE xHigherPriorityTaskWoken
 196:App/STM32F4-Discovery/usart.c **** 	 * 	\brief Indicates if higher priority has been woken
 197:App/STM32F4-Discovery/usart.c **** 	 */
 198:App/STM32F4-Discovery/usart.c **** 
 199:App/STM32F4-Discovery/usart.c **** 	unsigned portBASE_TYPE xHigherPriorityTaskWoken = pdFalse;
 984              		.loc 1 199 0
 985 0006 0023     		movs	r3, #0
 986 0008 7B60     		str	r3, [r7, #4]
 200:App/STM32F4-Discovery/usart.c **** 
 201:App/STM32F4-Discovery/usart.c ****   // Test if DMA Stream Transfer Complete interrupt
 202:App/STM32F4-Discovery/usart.c ****   if (DMA_GetITStatus (USARTx_TX_DMA_STREAM,  USARTx_TX_DMA_FLAG_TCIF)) {
 987              		.loc 1 202 0
 988 000a 1748     		ldr	r0, .L14
 989 000c 1749     		ldr	r1, .L14+4
 990 000e FFF7FEFF 		bl	DMA_GetITStatus
 991 0012 0346     		mov	r3, r0
 992 0014 002B     		cmp	r3, #0
 993 0016 1CD0     		beq	.L12
 203:App/STM32F4-Discovery/usart.c ****     
 204:App/STM32F4-Discovery/usart.c **** 	DMA_ClearITPendingBit (USARTx_TX_DMA_STREAM, USARTx_TX_DMA_FLAG_TCIF);
 994              		.loc 1 204 0
 995 0018 1348     		ldr	r0, .L14
 996 001a 1449     		ldr	r1, .L14+4
 997 001c FFF7FEFF 		bl	DMA_ClearITPendingBit
 205:App/STM32F4-Discovery/usart.c **** 	
 206:App/STM32F4-Discovery/usart.c **** 	DE();
 998              		.loc 1 206 0
 999 0020 134B     		ldr	r3, .L14+8
 1000 0022 134A     		ldr	r2, .L14+8
 1001 0024 528B     		ldrh	r2, [r2, #26]	@ movhi
 1002 0026 92B2     		uxth	r2, r2
 1003 0028 42F48072 		orr	r2, r2, #256
 1004 002c 92B2     		uxth	r2, r2
 1005 002e 5A83     		strh	r2, [r3, #26]	@ movhi
 207:App/STM32F4-Discovery/usart.c **** 	DMA_Cmd(USARTx_TX_DMA_STREAM, DISABLE);		
 1006              		.loc 1 207 0
 1007 0030 0D48     		ldr	r0, .L14
 1008 0032 0021     		movs	r1, #0
 1009 0034 FFF7FEFF 		bl	DMA_Cmd
 208:App/STM32F4-Discovery/usart.c **** //	DMA_Cmd(USARTx_RX_DMA_STREAM, DISABLE);		
 209:App/STM32F4-Discovery/usart.c ****        
 210:App/STM32F4-Discovery/usart.c **** 	taskENTER_CRITICAL(); 
 1010              		.loc 1 210 0
 1011 0038 FFF7FEFF 		bl	vPortEnterCritical
 211:App/STM32F4-Discovery/usart.c **** 	xSemaphoreGiveFromISR( xSemaphoreDMASPI, &xHigherPriorityTaskWoken );
 1012              		.loc 1 211 0
 1013 003c 0D4B     		ldr	r3, .L14+12
 1014 003e 1A68     		ldr	r2, [r3]
 1015 0040 3B1D     		adds	r3, r7, #4
 1016 0042 1046     		mov	r0, r2
 1017 0044 0021     		movs	r1, #0
 1018 0046 1A46     		mov	r2, r3
 1019 0048 0023     		movs	r3, #0
 1020 004a FFF7FEFF 		bl	xQueueGenericSendFromISR
 212:App/STM32F4-Discovery/usart.c ****  	taskEXIT_CRITICAL();  
 1021              		.loc 1 212 0
 1022 004e FFF7FEFF 		bl	vPortExitCritical
 1023              	.L12:
 213:App/STM32F4-Discovery/usart.c ****  }
 214:App/STM32F4-Discovery/usart.c ****    portEND_SWITCHING_ISR( xHigherPriorityTaskWoken );
 1024              		.loc 1 214 0
 1025 0052 7B68     		ldr	r3, [r7, #4]
 1026 0054 002B     		cmp	r3, #0
 1027 0056 03D0     		beq	.L11
 1028              		.loc 1 214 0 is_stmt 0 discriminator 1
 1029 0058 074B     		ldr	r3, .L14+16
 1030 005a 4FF08052 		mov	r2, #268435456
 1031 005e 1A60     		str	r2, [r3]
 1032              	.L11:
 215:App/STM32F4-Discovery/usart.c **** }
 1033              		.loc 1 215 0 is_stmt 1
 1034 0060 0837     		adds	r7, r7, #8
 1035 0062 BD46     		mov	sp, r7
 1036              		@ sp needed
 1037 0064 80BD     		pop	{r7, pc}
 1038              	.L15:
 1039 0066 00BF     		.align	2
 1040              	.L14:
 1041 0068 A0640240 		.word	1073898656
 1042 006c 00802020 		.word	539000832
 1043 0070 00180240 		.word	1073879040
 1044 0074 00000000 		.word	xSemaphoreDMASPI
 1045 0078 04ED00E0 		.word	-536810236
 1046              		.cfi_endproc
 1047              	.LFE112:
 1049              		.section	.text.usart_dma_send,"ax",%progbits
 1050              		.align	2
 1051              		.global	usart_dma_send
 1052              		.thumb
 1053              		.thumb_func
 1055              	usart_dma_send:
 1056              	.LFB113:
 216:App/STM32F4-Discovery/usart.c **** 
 217:App/STM32F4-Discovery/usart.c **** 
 218:App/STM32F4-Discovery/usart.c **** void usart_dma_send(uint16_t data_len, uint8_t *data_buf)
 219:App/STM32F4-Discovery/usart.c **** {
 1057              		.loc 1 219 0
 1058              		.cfi_startproc
 1059              		@ args = 0, pretend = 0, frame = 8
 1060              		@ frame_needed = 1, uses_anonymous_args = 0
 1061 0000 80B5     		push	{r7, lr}
 1062              	.LCFI9:
 1063              		.cfi_def_cfa_offset 8
 1064              		.cfi_offset 7, -8
 1065              		.cfi_offset 14, -4
 1066 0002 82B0     		sub	sp, sp, #8
 1067              	.LCFI10:
 1068              		.cfi_def_cfa_offset 16
 1069 0004 00AF     		add	r7, sp, #0
 1070              	.LCFI11:
 1071              		.cfi_def_cfa_register 7
 1072 0006 0346     		mov	r3, r0
 1073 0008 3960     		str	r1, [r7]
 1074 000a FB80     		strh	r3, [r7, #6]	@ movhi
 220:App/STM32F4-Discovery/usart.c **** 	
 221:App/STM32F4-Discovery/usart.c **** 		xSemaphoreTake(xSemaphoreDMASPI, portMAX_DELAY);
 1075              		.loc 1 221 0
 1076 000c 114B     		ldr	r3, .L17
 1077 000e 1B68     		ldr	r3, [r3]
 1078 0010 1846     		mov	r0, r3
 1079 0012 0021     		movs	r1, #0
 1080 0014 4FF0FF32 		mov	r2, #-1
 1081 0018 0023     		movs	r3, #0
 1082 001a FFF7FEFF 		bl	xQueueGenericReceive
 222:App/STM32F4-Discovery/usart.c **** 
 223:App/STM32F4-Discovery/usart.c **** 		DMA_SetCurrDataCounter(USARTx_TX_DMA_STREAM, data_len);
 1083              		.loc 1 223 0
 1084 001e FB88     		ldrh	r3, [r7, #6]
 1085 0020 0D48     		ldr	r0, .L17+4
 1086 0022 1946     		mov	r1, r3
 1087 0024 FFF7FEFF 		bl	DMA_SetCurrDataCounter
 224:App/STM32F4-Discovery/usart.c **** 		USARTx_TX_DMA_STREAM->M0AR =(uint32_t)data_buf;	
 1088              		.loc 1 224 0
 1089 0028 0B4B     		ldr	r3, .L17+4
 1090 002a 3A68     		ldr	r2, [r7]
 1091 002c DA60     		str	r2, [r3, #12]
 225:App/STM32F4-Discovery/usart.c **** 		DD(); // chip select 
 1092              		.loc 1 225 0
 1093 002e 0B4B     		ldr	r3, .L17+8
 1094 0030 0A4A     		ldr	r2, .L17+8
 1095 0032 128B     		ldrh	r2, [r2, #24]	@ movhi
 1096 0034 92B2     		uxth	r2, r2
 1097 0036 42F48072 		orr	r2, r2, #256
 1098 003a 92B2     		uxth	r2, r2
 1099 003c 1A83     		strh	r2, [r3, #24]	@ movhi
 226:App/STM32F4-Discovery/usart.c **** 		DMA_Cmd(USARTx_TX_DMA_STREAM, ENABLE);		
 1100              		.loc 1 226 0
 1101 003e 0648     		ldr	r0, .L17+4
 1102 0040 0121     		movs	r1, #1
 1103 0042 FFF7FEFF 		bl	DMA_Cmd
 227:App/STM32F4-Discovery/usart.c **** 		DMA_Cmd(USARTx_RX_DMA_STREAM, ENABLE);	
 1104              		.loc 1 227 0
 1105 0046 0648     		ldr	r0, .L17+12
 1106 0048 0121     		movs	r1, #1
 1107 004a FFF7FEFF 		bl	DMA_Cmd
 228:App/STM32F4-Discovery/usart.c **** 		/* Block until the semaphore is given */
 229:App/STM32F4-Discovery/usart.c ****         
 230:App/STM32F4-Discovery/usart.c **** 	//	CSOFF(); // chip deselect 
 231:App/STM32F4-Discovery/usart.c **** 			
 232:App/STM32F4-Discovery/usart.c **** 	
 233:App/STM32F4-Discovery/usart.c **** }
 1108              		.loc 1 233 0
 1109 004e 0837     		adds	r7, r7, #8
 1110 0050 BD46     		mov	sp, r7
 1111              		@ sp needed
 1112 0052 80BD     		pop	{r7, pc}
 1113              	.L18:
 1114              		.align	2
 1115              	.L17:
 1116 0054 00000000 		.word	xSemaphoreDMASPI
 1117 0058 A0640240 		.word	1073898656
 1118 005c 00180240 		.word	1073879040
 1119 0060 28640240 		.word	1073898536
 1120              		.cfi_endproc
 1121              	.LFE113:
 1123              		.section	.text.USART_puts,"ax",%progbits
 1124              		.align	2
 1125              		.global	USART_puts
 1126              		.thumb
 1127              		.thumb_func
 1129              	USART_puts:
 1130              	.LFB114:
 234:App/STM32F4-Discovery/usart.c **** 
 235:App/STM32F4-Discovery/usart.c **** 
 236:App/STM32F4-Discovery/usart.c **** 
 237:App/STM32F4-Discovery/usart.c **** 
 238:App/STM32F4-Discovery/usart.c **** 
 239:App/STM32F4-Discovery/usart.c **** void USART_puts(uint8_t *s, int nb)
 240:App/STM32F4-Discovery/usart.c **** {
 1131              		.loc 1 240 0
 1132              		.cfi_startproc
 1133              		@ args = 0, pretend = 0, frame = 16
 1134              		@ frame_needed = 1, uses_anonymous_args = 0
 1135              		@ link register save eliminated.
 1136 0000 80B4     		push	{r7}
 1137              	.LCFI12:
 1138              		.cfi_def_cfa_offset 4
 1139              		.cfi_offset 7, -4
 1140 0002 85B0     		sub	sp, sp, #20
 1141              	.LCFI13:
 1142              		.cfi_def_cfa_offset 24
 1143 0004 00AF     		add	r7, sp, #0
 1144              	.LCFI14:
 1145              		.cfi_def_cfa_register 7
 1146 0006 7860     		str	r0, [r7, #4]
 1147 0008 3960     		str	r1, [r7]
 241:App/STM32F4-Discovery/usart.c **** 
 242:App/STM32F4-Discovery/usart.c **** 	/*! This function is used to transmit a string of characters via 
 243:App/STM32F4-Discovery/usart.c **** 	 * the USART specified in USARTx.
 244:App/STM32F4-Discovery/usart.c **** 	 * 
 245:App/STM32F4-Discovery/usart.c **** 	 * It takes two arguments: USARTx --> can be any of the USARTs e.g. USART1, USART2 etc.
 246:App/STM32F4-Discovery/usart.c **** 	 * 						   (volatile) char *s is the string you want to send
 247:App/STM32F4-Discovery/usart.c **** 	 * 
 248:App/STM32F4-Discovery/usart.c **** 	 * Note: The string has to be passed to the function as a pointer because
 249:App/STM32F4-Discovery/usart.c **** 	 * 		 the compiler doesn't know the 'string' data type. In standard
 250:App/STM32F4-Discovery/usart.c **** 	 * 		 C a string is just an array of characters
 251:App/STM32F4-Discovery/usart.c **** 	 * 
 252:App/STM32F4-Discovery/usart.c **** 	 * Note 2: At the moment it takes a volatile char because the received_string variable
 253:App/STM32F4-Discovery/usart.c **** 	 * 		   declared as volatile char --> otherwise the compiler will spit out warnings
 254:App/STM32F4-Discovery/usart.c **** 	 * */
 255:App/STM32F4-Discovery/usart.c **** 
 256:App/STM32F4-Discovery/usart.c **** 	int i = 0;
 1148              		.loc 1 256 0
 1149 000a 0023     		movs	r3, #0
 1150 000c FB60     		str	r3, [r7, #12]
 257:App/STM32F4-Discovery/usart.c **** 	while(i < nb && *s){
 1151              		.loc 1 257 0
 1152 000e 10E0     		b	.L20
 1153              	.L23:
 258:App/STM32F4-Discovery/usart.c **** 		// wait until data register is empty
 259:App/STM32F4-Discovery/usart.c **** 		while( !(USARTx->SR & 0x00000040) ); 
 1154              		.loc 1 259 0
 1155 0010 00BF     		nop
 1156              	.L21:
 1157              		.loc 1 259 0 is_stmt 0 discriminator 1
 1158 0012 0E4B     		ldr	r3, .L24
 1159 0014 1B88     		ldrh	r3, [r3]	@ movhi
 1160 0016 9BB2     		uxth	r3, r3
 1161 0018 03F04003 		and	r3, r3, #64
 1162 001c 002B     		cmp	r3, #0
 1163 001e F8D0     		beq	.L21
 260:App/STM32F4-Discovery/usart.c **** 		//USART_SendData(USART6, s[i]);
 261:App/STM32F4-Discovery/usart.c **** 		USARTx->DR = s[i];
 1164              		.loc 1 261 0 is_stmt 1
 1165 0020 0A4B     		ldr	r3, .L24
 1166 0022 FA68     		ldr	r2, [r7, #12]
 1167 0024 7968     		ldr	r1, [r7, #4]
 1168 0026 0A44     		add	r2, r2, r1
 1169 0028 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1170 002a 9A80     		strh	r2, [r3, #4]	@ movhi
 262:App/STM32F4-Discovery/usart.c **** 		i++;
 1171              		.loc 1 262 0
 1172 002c FB68     		ldr	r3, [r7, #12]
 1173 002e 0133     		adds	r3, r3, #1
 1174 0030 FB60     		str	r3, [r7, #12]
 1175              	.L20:
 257:App/STM32F4-Discovery/usart.c **** 	while(i < nb && *s){
 1176              		.loc 1 257 0 discriminator 1
 1177 0032 FA68     		ldr	r2, [r7, #12]
 1178 0034 3B68     		ldr	r3, [r7]
 1179 0036 9A42     		cmp	r2, r3
 1180 0038 03DA     		bge	.L19
 257:App/STM32F4-Discovery/usart.c **** 	while(i < nb && *s){
 1181              		.loc 1 257 0 is_stmt 0 discriminator 2
 1182 003a 7B68     		ldr	r3, [r7, #4]
 1183 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1184 003e 002B     		cmp	r3, #0
 1185 0040 E6D1     		bne	.L23
 1186              	.L19:
 263:App/STM32F4-Discovery/usart.c **** 	
 264:App/STM32F4-Discovery/usart.c **** 	}
 265:App/STM32F4-Discovery/usart.c **** 	
 266:App/STM32F4-Discovery/usart.c **** 	
 267:App/STM32F4-Discovery/usart.c **** }
 1187              		.loc 1 267 0 is_stmt 1
 1188 0042 1437     		adds	r7, r7, #20
 1189 0044 BD46     		mov	sp, r7
 1190              		@ sp needed
 1191 0046 5DF8047B 		ldr	r7, [sp], #4
 1192 004a 7047     		bx	lr
 1193              	.L25:
 1194              		.align	2
 1195              	.L24:
 1196 004c 00140140 		.word	1073812480
 1197              		.cfi_endproc
 1198              	.LFE114:
 1200              		.section	.text.USART6_IRQHandler,"ax",%progbits
 1201              		.align	2
 1202              		.global	USART6_IRQHandler
 1203              		.thumb
 1204              		.thumb_func
 1206              	USART6_IRQHandler:
 1207              	.LFB115:
 268:App/STM32F4-Discovery/usart.c **** 
 269:App/STM32F4-Discovery/usart.c **** // this is the interrupt request handler (IRQ) for ALL USART6 interrupts
 270:App/STM32F4-Discovery/usart.c **** void USART6_IRQHandler(void){
 1208              		.loc 1 270 0
 1209              		.cfi_startproc
 1210              		@ args = 0, pretend = 0, frame = 8
 1211              		@ frame_needed = 1, uses_anonymous_args = 0
 1212 0000 80B5     		push	{r7, lr}
 1213              	.LCFI15:
 1214              		.cfi_def_cfa_offset 8
 1215              		.cfi_offset 7, -8
 1216              		.cfi_offset 14, -4
 1217 0002 82B0     		sub	sp, sp, #8
 1218              	.LCFI16:
 1219              		.cfi_def_cfa_offset 16
 1220 0004 00AF     		add	r7, sp, #0
 1221              	.LCFI17:
 1222              		.cfi_def_cfa_register 7
 271:App/STM32F4-Discovery/usart.c **** 	
 272:App/STM32F4-Discovery/usart.c **** 	unsigned portBASE_TYPE xHigherPriorityTaskWoken_usart = pdFalse;
 1223              		.loc 1 272 0
 1224 0006 0023     		movs	r3, #0
 1225 0008 3B60     		str	r3, [r7]
 273:App/STM32F4-Discovery/usart.c **** 	
 274:App/STM32F4-Discovery/usart.c **** 
 275:App/STM32F4-Discovery/usart.c **** 	// check if the USART1 receive interrupt flag was set
 276:App/STM32F4-Discovery/usart.c **** 	if( USART_GetITStatus(USARTx, USART_IT_RXNE) ){
 1226              		.loc 1 276 0
 1227 000a 2148     		ldr	r0, .L30
 1228 000c 40F22551 		movw	r1, #1317
 1229 0010 FFF7FEFF 		bl	USART_GetITStatus
 1230 0014 0346     		mov	r3, r0
 1231 0016 002B     		cmp	r3, #0
 1232 0018 30D0     		beq	.L27
 1233              	.LBB2:
 277:App/STM32F4-Discovery/usart.c **** 		
 278:App/STM32F4-Discovery/usart.c **** 		
 279:App/STM32F4-Discovery/usart.c **** 	//	USART_ClearITPendingBit ( USARTx, USART_IT_RXNE ) ;
 280:App/STM32F4-Discovery/usart.c **** 		static uint8_t cnt = 0; // this counter is used to determine the string length
 281:App/STM32F4-Discovery/usart.c **** 	 	char t = USARTx->DR; // the character from the USART1 data register is saved in t
 1234              		.loc 1 281 0
 1235 001a 1D4B     		ldr	r3, .L30
 1236 001c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1237 001e 9BB2     		uxth	r3, r3
 1238 0020 FB71     		strb	r3, [r7, #7]
 282:App/STM32F4-Discovery/usart.c **** 		
 283:App/STM32F4-Discovery/usart.c **** 		/* check if the received character is not the LF character (used to determine end of string) 
 284:App/STM32F4-Discovery/usart.c **** 		 * or the if the maximum string length has been been reached 
 285:App/STM32F4-Discovery/usart.c **** 		 */
 286:App/STM32F4-Discovery/usart.c **** 	
 287:App/STM32F4-Discovery/usart.c **** 		
 288:App/STM32F4-Discovery/usart.c **** 		if( (cnt < rx_length) &&
 1239              		.loc 1 288 0
 1240 0022 1C4B     		ldr	r3, .L30+4
 1241 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1242 0026 1A46     		mov	r2, r3
 1243 0028 1B4B     		ldr	r3, .L30+8
 1244 002a 1B68     		ldr	r3, [r3]
 1245 002c 9A42     		cmp	r2, r3
 1246 002e 0FDA     		bge	.L28
 289:App/STM32F4-Discovery/usart.c **** 				(cnt < MAX_STRLEN-400) ){ 
 1247              		.loc 1 289 0 discriminator 1
 1248 0030 184B     		ldr	r3, .L30+4
 1249 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 288:App/STM32F4-Discovery/usart.c **** 		if( (cnt < rx_length) &&
 1250              		.loc 1 288 0 discriminator 1
 1251 0034 6F2B     		cmp	r3, #111
 1252 0036 0BD8     		bhi	.L28
 290:App/STM32F4-Discovery/usart.c **** 			received_string[cnt] = t;
 1253              		.loc 1 290 0
 1254 0038 164B     		ldr	r3, .L30+4
 1255 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1256 003c 174A     		ldr	r2, .L30+12
 1257 003e F979     		ldrb	r1, [r7, #7]
 1258 0040 D154     		strb	r1, [r2, r3]
 291:App/STM32F4-Discovery/usart.c **** 			cnt++;
 1259              		.loc 1 291 0
 1260 0042 144B     		ldr	r3, .L30+4
 1261 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1262 0046 0133     		adds	r3, r3, #1
 1263 0048 DAB2     		uxtb	r2, r3
 1264 004a 124B     		ldr	r3, .L30+4
 1265 004c 1A70     		strb	r2, [r3]
 1266 004e 15E0     		b	.L27
 1267              	.L28:
 292:App/STM32F4-Discovery/usart.c **** 		}
 293:App/STM32F4-Discovery/usart.c **** 		else{ // otherwise reset the character counter and print the received string
 294:App/STM32F4-Discovery/usart.c **** 			received_string[cnt] = t; 
 1268              		.loc 1 294 0
 1269 0050 104B     		ldr	r3, .L30+4
 1270 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1271 0054 114A     		ldr	r2, .L30+12
 1272 0056 F979     		ldrb	r1, [r7, #7]
 1273 0058 D154     		strb	r1, [r2, r3]
 295:App/STM32F4-Discovery/usart.c **** 			cnt = 0;
 1274              		.loc 1 295 0
 1275 005a 0E4B     		ldr	r3, .L30+4
 1276 005c 0022     		movs	r2, #0
 1277 005e 1A70     		strb	r2, [r3]
 296:App/STM32F4-Discovery/usart.c **** 		//	USART_ITConfig(USART6, USART_IT_RXNE, DISABLE); 
 297:App/STM32F4-Discovery/usart.c **** 	
 298:App/STM32F4-Discovery/usart.c **** 			USART_ClearITPendingBit ( USARTx, USART_IT_RXNE ) ;
 1278              		.loc 1 298 0
 1279 0060 0B48     		ldr	r0, .L30
 1280 0062 40F22551 		movw	r1, #1317
 1281 0066 FFF7FEFF 		bl	USART_ClearITPendingBit
 299:App/STM32F4-Discovery/usart.c **** 	
 300:App/STM32F4-Discovery/usart.c **** 			xSemaphoreGiveFromISR(xSmphrUSART,&xHigherPriorityTaskWoken_usart );
 1282              		.loc 1 300 0
 1283 006a 0D4B     		ldr	r3, .L30+16
 1284 006c 1A68     		ldr	r2, [r3]
 1285 006e 3B46     		mov	r3, r7
 1286 0070 1046     		mov	r0, r2
 1287 0072 0021     		movs	r1, #0
 1288 0074 1A46     		mov	r2, r3
 1289 0076 0023     		movs	r3, #0
 1290 0078 FFF7FEFF 		bl	xQueueGenericSendFromISR
 1291              	.L27:
 1292              	.LBE2:
 301:App/STM32F4-Discovery/usart.c **** 	
 302:App/STM32F4-Discovery/usart.c **** 			//USART_puts(USART1, received_string);
 303:App/STM32F4-Discovery/usart.c **** 		}
 304:App/STM32F4-Discovery/usart.c **** 
 305:App/STM32F4-Discovery/usart.c **** 
 306:App/STM32F4-Discovery/usart.c **** 	}
 307:App/STM32F4-Discovery/usart.c ****  portEND_SWITCHING_ISR( xHigherPriorityTaskWoken_usart );	
 1293              		.loc 1 307 0
 1294 007c 3B68     		ldr	r3, [r7]
 1295 007e 002B     		cmp	r3, #0
 1296 0080 03D0     		beq	.L26
 1297              		.loc 1 307 0 is_stmt 0 discriminator 1
 1298 0082 084B     		ldr	r3, .L30+20
 1299 0084 4FF08052 		mov	r2, #268435456
 1300 0088 1A60     		str	r2, [r3]
 1301              	.L26:
 308:App/STM32F4-Discovery/usart.c **** }
 1302              		.loc 1 308 0 is_stmt 1
 1303 008a 0837     		adds	r7, r7, #8
 1304 008c BD46     		mov	sp, r7
 1305              		@ sp needed
 1306 008e 80BD     		pop	{r7, pc}
 1307              	.L31:
 1308              		.align	2
 1309              	.L30:
 1310 0090 00140140 		.word	1073812480
 1311 0094 00000000 		.word	cnt.9251
 1312 0098 00000000 		.word	rx_length
 1313 009c 00000000 		.word	received_string
 1314 00a0 00000000 		.word	xSmphrUSART
 1315 00a4 04ED00E0 		.word	-536810236
 1316              		.cfi_endproc
 1317              	.LFE115:
 1319              		.section	.text.crc16,"ax",%progbits
 1320              		.align	2
 1321              		.global	crc16
 1322              		.thumb
 1323              		.thumb_func
 1325              	crc16:
 1326              	.LFB116:
 309:App/STM32F4-Discovery/usart.c **** 
 310:App/STM32F4-Discovery/usart.c **** 
 311:App/STM32F4-Discovery/usart.c **** 
 312:App/STM32F4-Discovery/usart.c **** /* function for  */
 313:App/STM32F4-Discovery/usart.c **** uint16_t crc16(uint8_t *buffer, uint16_t buffer_length)
 314:App/STM32F4-Discovery/usart.c **** {
 1327              		.loc 1 314 0
 1328              		.cfi_startproc
 1329              		@ args = 0, pretend = 0, frame = 16
 1330              		@ frame_needed = 1, uses_anonymous_args = 0
 1331              		@ link register save eliminated.
 1332 0000 80B4     		push	{r7}
 1333              	.LCFI18:
 1334              		.cfi_def_cfa_offset 4
 1335              		.cfi_offset 7, -4
 1336 0002 85B0     		sub	sp, sp, #20
 1337              	.LCFI19:
 1338              		.cfi_def_cfa_offset 24
 1339 0004 00AF     		add	r7, sp, #0
 1340              	.LCFI20:
 1341              		.cfi_def_cfa_register 7
 1342 0006 7860     		str	r0, [r7, #4]
 1343 0008 0B46     		mov	r3, r1
 1344 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 315:App/STM32F4-Discovery/usart.c ****      uint8_t crc_hi = 0xFF; /* high CRC byte initialized */
 1345              		.loc 1 315 0
 1346 000c FF23     		movs	r3, #255
 1347 000e FB73     		strb	r3, [r7, #15]
 316:App/STM32F4-Discovery/usart.c ****      uint8_t crc_lo = 0xFF; /* low CRC byte initialized */
 1348              		.loc 1 316 0
 1349 0010 FF23     		movs	r3, #255
 1350 0012 BB73     		strb	r3, [r7, #14]
 317:App/STM32F4-Discovery/usart.c ****      unsigned int i; /* will index into CRC lookup */
 318:App/STM32F4-Discovery/usart.c ****  
 319:App/STM32F4-Discovery/usart.c ****      /* pass through message buffer */
 320:App/STM32F4-Discovery/usart.c ****      while (buffer_length--) {
 1351              		.loc 1 320 0
 1352 0014 13E0     		b	.L33
 1353              	.L34:
 321:App/STM32F4-Discovery/usart.c ****          i = crc_hi ^ *buffer++; /* calculate the CRC  */
 1354              		.loc 1 321 0
 1355 0016 7B68     		ldr	r3, [r7, #4]
 1356 0018 5A1C     		adds	r2, r3, #1
 1357 001a 7A60     		str	r2, [r7, #4]
 1358 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1359 001e FB7B     		ldrb	r3, [r7, #15]
 1360 0020 5340     		eors	r3, r3, r2
 1361 0022 DBB2     		uxtb	r3, r3
 1362 0024 BB60     		str	r3, [r7, #8]
 322:App/STM32F4-Discovery/usart.c ****          crc_hi = crc_lo ^ table_crc_hi[i];
 1363              		.loc 1 322 0
 1364 0026 0F4A     		ldr	r2, .L36
 1365 0028 BB68     		ldr	r3, [r7, #8]
 1366 002a 1344     		add	r3, r3, r2
 1367 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1368 002e BB7B     		ldrb	r3, [r7, #14]
 1369 0030 5340     		eors	r3, r3, r2
 1370 0032 FB73     		strb	r3, [r7, #15]
 323:App/STM32F4-Discovery/usart.c ****          crc_lo = table_crc_lo[i];
 1371              		.loc 1 323 0
 1372 0034 0C4A     		ldr	r2, .L36+4
 1373 0036 BB68     		ldr	r3, [r7, #8]
 1374 0038 1344     		add	r3, r3, r2
 1375 003a 1B78     		ldrb	r3, [r3]
 1376 003c BB73     		strb	r3, [r7, #14]
 1377              	.L33:
 320:App/STM32F4-Discovery/usart.c ****      while (buffer_length--) {
 1378              		.loc 1 320 0 discriminator 1
 1379 003e 7B88     		ldrh	r3, [r7, #2]
 1380 0040 5A1E     		subs	r2, r3, #1
 1381 0042 7A80     		strh	r2, [r7, #2]	@ movhi
 1382 0044 002B     		cmp	r3, #0
 1383 0046 E6D1     		bne	.L34
 324:App/STM32F4-Discovery/usart.c ****      }
 325:App/STM32F4-Discovery/usart.c ****  
 326:App/STM32F4-Discovery/usart.c ****      return (crc_hi << 8 | crc_lo);
 1384              		.loc 1 326 0
 1385 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1386 004a 1B02     		lsls	r3, r3, #8
 1387 004c 9AB2     		uxth	r2, r3
 1388 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1389 0050 9BB2     		uxth	r3, r3
 1390 0052 1343     		orrs	r3, r3, r2
 1391 0054 9BB2     		uxth	r3, r3
 1392 0056 9BB2     		uxth	r3, r3
 327:App/STM32F4-Discovery/usart.c **** }
 1393              		.loc 1 327 0
 1394 0058 1846     		mov	r0, r3
 1395 005a 1437     		adds	r7, r7, #20
 1396 005c BD46     		mov	sp, r7
 1397              		@ sp needed
 1398 005e 5DF8047B 		ldr	r7, [sp], #4
 1399 0062 7047     		bx	lr
 1400              	.L37:
 1401              		.align	2
 1402              	.L36:
 1403 0064 00000000 		.word	table_crc_hi
 1404 0068 00000000 		.word	table_crc_lo
 1405              		.cfi_endproc
 1406              	.LFE116:
 1408              		.section	.rodata
 1409              		.align	2
 1410              	.LC0:
 1411 0000 6D6F6462 		.ascii	"modbus OK.\012\000"
 1411      7573204F 
 1411      4B2E0A00 
 1412              		.section	.text.modbus_confirmation,"ax",%progbits
 1413              		.align	2
 1414              		.global	modbus_confirmation
 1415              		.thumb
 1416              		.thumb_func
 1418              	modbus_confirmation:
 1419              	.LFB117:
 328:App/STM32F4-Discovery/usart.c **** 
 329:App/STM32F4-Discovery/usart.c **** /* modbus_confirmation */ 
 330:App/STM32F4-Discovery/usart.c **** 
 331:App/STM32F4-Discovery/usart.c **** int modbus_confirmation ( uint8_t * req, uint8_t * rsp, uint16_t write_len, uint16_t read_len)
 332:App/STM32F4-Discovery/usart.c **** {
 1420              		.loc 1 332 0
 1421              		.cfi_startproc
 1422              		@ args = 0, pretend = 0, frame = 24
 1423              		@ frame_needed = 1, uses_anonymous_args = 0
 1424 0000 80B5     		push	{r7, lr}
 1425              	.LCFI21:
 1426              		.cfi_def_cfa_offset 8
 1427              		.cfi_offset 7, -8
 1428              		.cfi_offset 14, -4
 1429 0002 86B0     		sub	sp, sp, #24
 1430              	.LCFI22:
 1431              		.cfi_def_cfa_offset 32
 1432 0004 00AF     		add	r7, sp, #0
 1433              	.LCFI23:
 1434              		.cfi_def_cfa_register 7
 1435 0006 F860     		str	r0, [r7, #12]
 1436 0008 B960     		str	r1, [r7, #8]
 1437 000a FA80     		strh	r2, [r7, #6]	@ movhi
 1438 000c BB80     		strh	r3, [r7, #4]	@ movhi
 333:App/STM32F4-Discovery/usart.c **** 	uint16_t crc = crc16(rsp, read_len - 2 );
 1439              		.loc 1 333 0
 1440 000e BB88     		ldrh	r3, [r7, #4]	@ movhi
 1441 0010 023B     		subs	r3, r3, #2
 1442 0012 9BB2     		uxth	r3, r3
 1443 0014 B868     		ldr	r0, [r7, #8]
 1444 0016 1946     		mov	r1, r3
 1445 0018 FFF7FEFF 		bl	crc16
 1446 001c 0346     		mov	r3, r0
 1447 001e FB82     		strh	r3, [r7, #22]	@ movhi
 334:App/STM32F4-Discovery/usart.c **** 
 335:App/STM32F4-Discovery/usart.c **** 	if (	rsp[read_len -1 ] == ( crc & 0x00ff ) && 
 1448              		.loc 1 335 0
 1449 0020 BB88     		ldrh	r3, [r7, #4]
 1450 0022 013B     		subs	r3, r3, #1
 1451 0024 BA68     		ldr	r2, [r7, #8]
 1452 0026 1344     		add	r3, r3, r2
 1453 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1454 002a 1A46     		mov	r2, r3
 1455 002c FB8A     		ldrh	r3, [r7, #22]
 1456 002e DBB2     		uxtb	r3, r3
 1457 0030 9A42     		cmp	r2, r3
 1458 0032 0FD1     		bne	.L39
 336:App/STM32F4-Discovery/usart.c **** 		rsp[read_len - 2 ] == ( crc >> 8 ) ) 
 1459              		.loc 1 336 0 discriminator 1
 1460 0034 BB88     		ldrh	r3, [r7, #4]
 1461 0036 023B     		subs	r3, r3, #2
 1462 0038 BA68     		ldr	r2, [r7, #8]
 1463 003a 1344     		add	r3, r3, r2
 1464 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1465 003e 1A46     		mov	r2, r3
 1466 0040 FB8A     		ldrh	r3, [r7, #22]
 1467 0042 1B0A     		lsrs	r3, r3, #8
 1468 0044 9BB2     		uxth	r3, r3
 335:App/STM32F4-Discovery/usart.c **** 	if (	rsp[read_len -1 ] == ( crc & 0x00ff ) && 
 1469              		.loc 1 335 0 discriminator 1
 1470 0046 9A42     		cmp	r2, r3
 1471 0048 04D1     		bne	.L39
 337:App/STM32F4-Discovery/usart.c **** 	{
 338:App/STM32F4-Discovery/usart.c **** #ifdef DEBUG
 339:App/STM32F4-Discovery/usart.c **** 		t_printf("modbus OK.\n");
 1472              		.loc 1 339 0
 1473 004a 0548     		ldr	r0, .L41
 1474 004c FFF7FEFF 		bl	t_printf
 340:App/STM32F4-Discovery/usart.c **** #endif
 341:App/STM32F4-Discovery/usart.c **** 		return 1;
 1475              		.loc 1 341 0
 1476 0050 0123     		movs	r3, #1
 1477 0052 00E0     		b	.L40
 1478              	.L39:
 342:App/STM32F4-Discovery/usart.c **** 	}
 343:App/STM32F4-Discovery/usart.c **** #ifdef DEBUF
 344:App/STM32F4-Discovery/usart.c **** 		t_printf("modbus FAIL.\n");
 345:App/STM32F4-Discovery/usart.c **** #endif
 346:App/STM32F4-Discovery/usart.c **** 	return 0; 
 1479              		.loc 1 346 0
 1480 0054 0023     		movs	r3, #0
 1481              	.L40:
 347:App/STM32F4-Discovery/usart.c **** 	
 348:App/STM32F4-Discovery/usart.c **** }
 1482              		.loc 1 348 0
 1483 0056 1846     		mov	r0, r3
 1484 0058 1837     		adds	r7, r7, #24
 1485 005a BD46     		mov	sp, r7
 1486              		@ sp needed
 1487 005c 80BD     		pop	{r7, pc}
 1488              	.L42:
 1489 005e 00BF     		.align	2
 1490              	.L41:
 1491 0060 00000000 		.word	.LC0
 1492              		.cfi_endproc
 1493              	.LFE117:
 1495              		.section	.rodata
 1496              		.align	2
 1497              	.LC1:
 1498 000c 5B25785D 		.ascii	"[%x]\000"
 1498      00
 1499 0011 000000   		.align	2
 1500              	.LC2:
 1501 0014 0A00     		.ascii	"\012\000"
 1502              		.section	.text.write_read_modbus,"ax",%progbits
 1503              		.align	2
 1504              		.global	write_read_modbus
 1505              		.thumb
 1506              		.thumb_func
 1508              	write_read_modbus:
 1509              	.LFB118:
 349:App/STM32F4-Discovery/usart.c **** 
 350:App/STM32F4-Discovery/usart.c **** /* write to modbus */
 351:App/STM32F4-Discovery/usart.c **** void write_read_modbus( uint8_t * req, uint8_t * rsp, int write_len, int read_len )
 352:App/STM32F4-Discovery/usart.c **** {
 1510              		.loc 1 352 0
 1511              		.cfi_startproc
 1512              		@ args = 0, pretend = 0, frame = 24
 1513              		@ frame_needed = 1, uses_anonymous_args = 0
 1514 0000 80B5     		push	{r7, lr}
 1515              	.LCFI24:
 1516              		.cfi_def_cfa_offset 8
 1517              		.cfi_offset 7, -8
 1518              		.cfi_offset 14, -4
 1519 0002 86B0     		sub	sp, sp, #24
 1520              	.LCFI25:
 1521              		.cfi_def_cfa_offset 32
 1522 0004 00AF     		add	r7, sp, #0
 1523              	.LCFI26:
 1524              		.cfi_def_cfa_register 7
 1525 0006 F860     		str	r0, [r7, #12]
 1526 0008 B960     		str	r1, [r7, #8]
 1527 000a 7A60     		str	r2, [r7, #4]
 1528 000c 3B60     		str	r3, [r7]
 353:App/STM32F4-Discovery/usart.c **** 	int i; 
 354:App/STM32F4-Discovery/usart.c **** 	rx_length = read_len + write_len - 1 ; 
 1529              		.loc 1 354 0
 1530 000e 3A68     		ldr	r2, [r7]
 1531 0010 7B68     		ldr	r3, [r7, #4]
 1532 0012 1344     		add	r3, r3, r2
 1533 0014 5A1E     		subs	r2, r3, #1
 1534 0016 2A4B     		ldr	r3, .L50
 1535 0018 1A60     		str	r2, [r3]
 355:App/STM32F4-Discovery/usart.c **** 
 356:App/STM32F4-Discovery/usart.c **** 	// driver disable 
 357:App/STM32F4-Discovery/usart.c **** 	DD();
 1536              		.loc 1 357 0
 1537 001a 2A4B     		ldr	r3, .L50+4
 1538 001c 294A     		ldr	r2, .L50+4
 1539 001e 128B     		ldrh	r2, [r2, #24]	@ movhi
 1540 0020 92B2     		uxth	r2, r2
 1541 0022 42F48072 		orr	r2, r2, #256
 1542 0026 92B2     		uxth	r2, r2
 1543 0028 1A83     		strh	r2, [r3, #24]	@ movhi
 358:App/STM32F4-Discovery/usart.c **** 	for (i=0; i < 4000; i++) ;
 1544              		.loc 1 358 0
 1545 002a 0023     		movs	r3, #0
 1546 002c 7B61     		str	r3, [r7, #20]
 1547 002e 02E0     		b	.L44
 1548              	.L45:
 1549              		.loc 1 358 0 is_stmt 0 discriminator 2
 1550 0030 7B69     		ldr	r3, [r7, #20]
 1551 0032 0133     		adds	r3, r3, #1
 1552 0034 7B61     		str	r3, [r7, #20]
 1553              	.L44:
 1554              		.loc 1 358 0 discriminator 1
 1555 0036 7B69     		ldr	r3, [r7, #20]
 1556 0038 B3F57A6F 		cmp	r3, #4000
 1557 003c F8DB     		blt	.L45
 359:App/STM32F4-Discovery/usart.c **** 	USART_puts(req,write_len);
 1558              		.loc 1 359 0 is_stmt 1
 1559 003e F868     		ldr	r0, [r7, #12]
 1560 0040 7968     		ldr	r1, [r7, #4]
 1561 0042 FFF7FEFF 		bl	USART_puts
 360:App/STM32F4-Discovery/usart.c **** 	for (i = 0; i < 4000; i++);
 1562              		.loc 1 360 0
 1563 0046 0023     		movs	r3, #0
 1564 0048 7B61     		str	r3, [r7, #20]
 1565 004a 02E0     		b	.L46
 1566              	.L47:
 1567              		.loc 1 360 0 is_stmt 0 discriminator 2
 1568 004c 7B69     		ldr	r3, [r7, #20]
 1569 004e 0133     		adds	r3, r3, #1
 1570 0050 7B61     		str	r3, [r7, #20]
 1571              	.L46:
 1572              		.loc 1 360 0 discriminator 1
 1573 0052 7B69     		ldr	r3, [r7, #20]
 1574 0054 B3F57A6F 		cmp	r3, #4000
 1575 0058 F8DB     		blt	.L47
 361:App/STM32F4-Discovery/usart.c **** 	// driver enable 
 362:App/STM32F4-Discovery/usart.c **** 	DE();
 1576              		.loc 1 362 0 is_stmt 1
 1577 005a 1A4B     		ldr	r3, .L50+4
 1578 005c 194A     		ldr	r2, .L50+4
 1579 005e 528B     		ldrh	r2, [r2, #26]	@ movhi
 1580 0060 92B2     		uxth	r2, r2
 1581 0062 42F48072 		orr	r2, r2, #256
 1582 0066 92B2     		uxth	r2, r2
 1583 0068 5A83     		strh	r2, [r3, #26]	@ movhi
 363:App/STM32F4-Discovery/usart.c **** 	
 364:App/STM32F4-Discovery/usart.c **** 	xSemaphoreTake(xSmphrUSART, 500/portTICK_RATE_MS);
 1584              		.loc 1 364 0
 1585 006a 174B     		ldr	r3, .L50+8
 1586 006c 1B68     		ldr	r3, [r3]
 1587 006e 1846     		mov	r0, r3
 1588 0070 0021     		movs	r1, #0
 1589 0072 4FF4FA72 		mov	r2, #500
 1590 0076 0023     		movs	r3, #0
 1591 0078 FFF7FEFF 		bl	xQueueGenericReceive
 365:App/STM32F4-Discovery/usart.c **** 	
 366:App/STM32F4-Discovery/usart.c **** 	for (i = 0; i < read_len; i++) 
 1592              		.loc 1 366 0
 1593 007c 0023     		movs	r3, #0
 1594 007e 7B61     		str	r3, [r7, #20]
 1595 0080 14E0     		b	.L48
 1596              	.L49:
 367:App/STM32F4-Discovery/usart.c **** 	{
 368:App/STM32F4-Discovery/usart.c **** 
 369:App/STM32F4-Discovery/usart.c **** 		rsp[i] = received_string[i+write_len]; 
 1597              		.loc 1 369 0 discriminator 2
 1598 0082 7B69     		ldr	r3, [r7, #20]
 1599 0084 BA68     		ldr	r2, [r7, #8]
 1600 0086 1344     		add	r3, r3, r2
 1601 0088 7969     		ldr	r1, [r7, #20]
 1602 008a 7A68     		ldr	r2, [r7, #4]
 1603 008c 0A44     		add	r2, r2, r1
 1604 008e 0F49     		ldr	r1, .L50+12
 1605 0090 8A5C     		ldrb	r2, [r1, r2]
 1606 0092 D2B2     		uxtb	r2, r2
 1607 0094 1A70     		strb	r2, [r3]
 370:App/STM32F4-Discovery/usart.c **** #ifdef DEBUG
 371:App/STM32F4-Discovery/usart.c **** 		t_printf("[%x]", rsp[i]);
 1608              		.loc 1 371 0 discriminator 2
 1609 0096 7B69     		ldr	r3, [r7, #20]
 1610 0098 BA68     		ldr	r2, [r7, #8]
 1611 009a 1344     		add	r3, r3, r2
 1612 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1613 009e 0C48     		ldr	r0, .L50+16
 1614 00a0 1946     		mov	r1, r3
 1615 00a2 FFF7FEFF 		bl	t_printf
 366:App/STM32F4-Discovery/usart.c **** 	for (i = 0; i < read_len; i++) 
 1616              		.loc 1 366 0 discriminator 2
 1617 00a6 7B69     		ldr	r3, [r7, #20]
 1618 00a8 0133     		adds	r3, r3, #1
 1619 00aa 7B61     		str	r3, [r7, #20]
 1620              	.L48:
 366:App/STM32F4-Discovery/usart.c **** 	for (i = 0; i < read_len; i++) 
 1621              		.loc 1 366 0 is_stmt 0 discriminator 1
 1622 00ac 7A69     		ldr	r2, [r7, #20]
 1623 00ae 3B68     		ldr	r3, [r7]
 1624 00b0 9A42     		cmp	r2, r3
 1625 00b2 E6DB     		blt	.L49
 372:App/STM32F4-Discovery/usart.c **** #endif	
 373:App/STM32F4-Discovery/usart.c **** 	}
 374:App/STM32F4-Discovery/usart.c **** 
 375:App/STM32F4-Discovery/usart.c **** #ifdef DEBUG
 376:App/STM32F4-Discovery/usart.c **** 		t_printf("\n");
 1626              		.loc 1 376 0 is_stmt 1
 1627 00b4 0748     		ldr	r0, .L50+20
 1628 00b6 FFF7FEFF 		bl	t_printf
 377:App/STM32F4-Discovery/usart.c **** #endif		
 378:App/STM32F4-Discovery/usart.c **** 
 379:App/STM32F4-Discovery/usart.c **** }
 1629              		.loc 1 379 0
 1630 00ba 1837     		adds	r7, r7, #24
 1631 00bc BD46     		mov	sp, r7
 1632              		@ sp needed
 1633 00be 80BD     		pop	{r7, pc}
 1634              	.L51:
 1635              		.align	2
 1636              	.L50:
 1637 00c0 00000000 		.word	rx_length
 1638 00c4 00180240 		.word	1073879040
 1639 00c8 00000000 		.word	xSmphrUSART
 1640 00cc 00000000 		.word	received_string
 1641 00d0 0C000000 		.word	.LC1
 1642 00d4 14000000 		.word	.LC2
 1643              		.cfi_endproc
 1644              	.LFE118:
 1646              		.section	.text.modbus_RIB,"ax",%progbits
 1647              		.align	2
 1648              		.global	modbus_RIB
 1649              		.thumb
 1650              		.thumb_func
 1652              	modbus_RIB:
 1653              	.LFB119:
 380:App/STM32F4-Discovery/usart.c **** 
 381:App/STM32F4-Discovery/usart.c **** 
 382:App/STM32F4-Discovery/usart.c **** /* modbus read input bits */
 383:App/STM32F4-Discovery/usart.c **** uint8_t modbus_RIB( int16_t address, int nb, uint8_t *dst )
 384:App/STM32F4-Discovery/usart.c **** {
 1654              		.loc 1 384 0
 1655              		.cfi_startproc
 1656              		@ args = 0, pretend = 0, frame = 536
 1657              		@ frame_needed = 1, uses_anonymous_args = 0
 1658 0000 80B5     		push	{r7, lr}
 1659              	.LCFI27:
 1660              		.cfi_def_cfa_offset 8
 1661              		.cfi_offset 7, -8
 1662              		.cfi_offset 14, -4
 1663 0002 ADF5067D 		sub	sp, sp, #536
 1664              	.LCFI28:
 1665              		.cfi_def_cfa_offset 544
 1666 0006 00AF     		add	r7, sp, #0
 1667              	.LCFI29:
 1668              		.cfi_def_cfa_register 7
 1669 0008 07F10803 		add	r3, r7, #8
 1670 000c 1960     		str	r1, [r3]
 1671 000e 3B1D     		adds	r3, r7, #4
 1672 0010 1A60     		str	r2, [r3]
 1673 0012 07F10E03 		add	r3, r7, #14
 1674 0016 0246     		mov	r2, r0	@ movhi
 1675 0018 1A80     		strh	r2, [r3]	@ movhi
 385:App/STM32F4-Discovery/usart.c **** 	/* first send request */
 386:App/STM32F4-Discovery/usart.c **** 
 387:App/STM32F4-Discovery/usart.c **** 	uint8_t req[REQ_MAX_LEN];
 388:App/STM32F4-Discovery/usart.c **** 	int req_length; 
 389:App/STM32F4-Discovery/usart.c **** 	
 390:App/STM32F4-Discovery/usart.c **** 	req[0] = 0x36; 
 1676              		.loc 1 390 0
 1677 001a 07F11003 		add	r3, r7, #16
 1678 001e 3622     		movs	r2, #54
 1679 0020 1A70     		strb	r2, [r3]
 391:App/STM32F4-Discovery/usart.c **** 	req[1] = 0x2;
 1680              		.loc 1 391 0
 1681 0022 07F11003 		add	r3, r7, #16
 1682 0026 0222     		movs	r2, #2
 1683 0028 5A70     		strb	r2, [r3, #1]
 392:App/STM32F4-Discovery/usart.c **** 	req[2] = address >> 8;
 1684              		.loc 1 392 0
 1685 002a 07F10E03 		add	r3, r7, #14
 1686 002e B3F90030 		ldrsh	r3, [r3]
 1687 0032 1B12     		asrs	r3, r3, #8
 1688 0034 9BB2     		uxth	r3, r3
 1689 0036 DAB2     		uxtb	r2, r3
 1690 0038 07F11003 		add	r3, r7, #16
 1691 003c 9A70     		strb	r2, [r3, #2]
 393:App/STM32F4-Discovery/usart.c **** 	req[3] = address & 0x00ff;
 1692              		.loc 1 393 0
 1693 003e 07F10E03 		add	r3, r7, #14
 1694 0042 1B88     		ldrh	r3, [r3]	@ movhi
 1695 0044 DAB2     		uxtb	r2, r3
 1696 0046 07F11003 		add	r3, r7, #16
 1697 004a DA70     		strb	r2, [r3, #3]
 394:App/STM32F4-Discovery/usart.c **** 	req[4] = nb >> 8;
 1698              		.loc 1 394 0
 1699 004c 07F10803 		add	r3, r7, #8
 1700 0050 1B68     		ldr	r3, [r3]
 1701 0052 1B12     		asrs	r3, r3, #8
 1702 0054 DAB2     		uxtb	r2, r3
 1703 0056 07F11003 		add	r3, r7, #16
 1704 005a 1A71     		strb	r2, [r3, #4]
 395:App/STM32F4-Discovery/usart.c **** 	req[5] = nb & 0x00ff; 
 1705              		.loc 1 395 0
 1706 005c 07F10803 		add	r3, r7, #8
 1707 0060 1B68     		ldr	r3, [r3]
 1708 0062 DAB2     		uxtb	r2, r3
 1709 0064 07F11003 		add	r3, r7, #16
 1710 0068 5A71     		strb	r2, [r3, #5]
 396:App/STM32F4-Discovery/usart.c **** 	req_length = 6;
 1711              		.loc 1 396 0
 1712 006a 0623     		movs	r3, #6
 1713 006c C7F81432 		str	r3, [r7, #532]
 397:App/STM32F4-Discovery/usart.c **** 	uint16_t crc = crc16(req, req_length);
 1714              		.loc 1 397 0
 1715 0070 D7F81432 		ldr	r3, [r7, #532]
 1716 0074 9BB2     		uxth	r3, r3
 1717 0076 07F11002 		add	r2, r7, #16
 1718 007a 1046     		mov	r0, r2
 1719 007c 1946     		mov	r1, r3
 1720 007e FFF7FEFF 		bl	crc16
 1721 0082 0346     		mov	r3, r0
 1722 0084 A7F81232 		strh	r3, [r7, #530]	@ movhi
 398:App/STM32F4-Discovery/usart.c **** 
 399:App/STM32F4-Discovery/usart.c **** 	req[req_length++] = crc >> 8; 
 1723              		.loc 1 399 0
 1724 0088 D7F81432 		ldr	r3, [r7, #532]
 1725 008c 5A1C     		adds	r2, r3, #1
 1726 008e C7F81422 		str	r2, [r7, #532]
 1727 0092 B7F81222 		ldrh	r2, [r7, #530]
 1728 0096 120A     		lsrs	r2, r2, #8
 1729 0098 92B2     		uxth	r2, r2
 1730 009a D1B2     		uxtb	r1, r2
 1731 009c 07F11002 		add	r2, r7, #16
 1732 00a0 D154     		strb	r1, [r2, r3]
 400:App/STM32F4-Discovery/usart.c **** 	req[req_length++] = crc & 0x00ff; 
 1733              		.loc 1 400 0
 1734 00a2 D7F81432 		ldr	r3, [r7, #532]
 1735 00a6 5A1C     		adds	r2, r3, #1
 1736 00a8 C7F81422 		str	r2, [r7, #532]
 1737 00ac B7F81222 		ldrh	r2, [r7, #530]	@ movhi
 1738 00b0 D1B2     		uxtb	r1, r2
 1739 00b2 07F11002 		add	r2, r7, #16
 1740 00b6 D154     		strb	r1, [r2, r3]
 401:App/STM32F4-Discovery/usart.c **** 	
 402:App/STM32F4-Discovery/usart.c **** 	write_read_modbus( req, dst, req_length, 6);
 1741              		.loc 1 402 0
 1742 00b8 07F11002 		add	r2, r7, #16
 1743 00bc 3B1D     		adds	r3, r7, #4
 1744 00be 1046     		mov	r0, r2
 1745 00c0 1968     		ldr	r1, [r3]
 1746 00c2 D7F81422 		ldr	r2, [r7, #532]
 1747 00c6 0623     		movs	r3, #6
 1748 00c8 FFF7FEFF 		bl	write_read_modbus
 403:App/STM32F4-Discovery/usart.c **** 	return modbus_confirmation (req, dst, req_length, 6);
 1749              		.loc 1 403 0
 1750 00cc D7F81432 		ldr	r3, [r7, #532]
 1751 00d0 9BB2     		uxth	r3, r3
 1752 00d2 07F11001 		add	r1, r7, #16
 1753 00d6 3A1D     		adds	r2, r7, #4
 1754 00d8 0846     		mov	r0, r1
 1755 00da 1168     		ldr	r1, [r2]
 1756 00dc 1A46     		mov	r2, r3
 1757 00de 0623     		movs	r3, #6
 1758 00e0 FFF7FEFF 		bl	modbus_confirmation
 1759 00e4 0346     		mov	r3, r0
 1760 00e6 DBB2     		uxtb	r3, r3
 404:App/STM32F4-Discovery/usart.c **** 
 405:App/STM32F4-Discovery/usart.c **** }
 1761              		.loc 1 405 0
 1762 00e8 1846     		mov	r0, r3
 1763 00ea 07F50677 		add	r7, r7, #536
 1764 00ee BD46     		mov	sp, r7
 1765              		@ sp needed
 1766 00f0 80BD     		pop	{r7, pc}
 1767              		.cfi_endproc
 1768              	.LFE119:
 1770 00f2 00BF     		.section	.text.modbus_WIB,"ax",%progbits
 1771              		.align	2
 1772              		.global	modbus_WIB
 1773              		.thumb
 1774              		.thumb_func
 1776              	modbus_WIB:
 1777              	.LFB120:
 406:App/STM32F4-Discovery/usart.c **** 
 407:App/STM32F4-Discovery/usart.c **** 
 408:App/STM32F4-Discovery/usart.c **** /* modbus write input bits */
 409:App/STM32F4-Discovery/usart.c **** uint8_t modbus_WIB( uint16_t address, int nb, uint8_t *src )
 410:App/STM32F4-Discovery/usart.c **** {
 1778              		.loc 1 410 0
 1779              		.cfi_startproc
 1780              		@ args = 0, pretend = 0, frame = 1072
 1781              		@ frame_needed = 1, uses_anonymous_args = 0
 1782 0000 80B5     		push	{r7, lr}
 1783              	.LCFI30:
 1784              		.cfi_def_cfa_offset 8
 1785              		.cfi_offset 7, -8
 1786              		.cfi_offset 14, -4
 1787 0002 ADF5866D 		sub	sp, sp, #1072
 1788              	.LCFI31:
 1789              		.cfi_def_cfa_offset 1080
 1790 0006 00AF     		add	r7, sp, #0
 1791              	.LCFI32:
 1792              		.cfi_def_cfa_register 7
 1793 0008 07F10803 		add	r3, r7, #8
 1794 000c 1960     		str	r1, [r3]
 1795 000e 3B1D     		adds	r3, r7, #4
 1796 0010 1A60     		str	r2, [r3]
 1797 0012 07F10E03 		add	r3, r7, #14
 1798 0016 0246     		mov	r2, r0	@ movhi
 1799 0018 1A80     		strh	r2, [r3]	@ movhi
 411:App/STM32F4-Discovery/usart.c **** 	/* first send request */
 412:App/STM32F4-Discovery/usart.c **** 
 413:App/STM32F4-Discovery/usart.c **** 	uint8_t req[REQ_MAX_LEN];
 414:App/STM32F4-Discovery/usart.c **** 	uint8_t rsp[REQ_MAX_LEN];
 415:App/STM32F4-Discovery/usart.c **** 	int byte_count; 
 416:App/STM32F4-Discovery/usart.c **** 	int req_length; 
 417:App/STM32F4-Discovery/usart.c **** 	int bit_check = 0; 
 1800              		.loc 1 417 0
 1801 001a 0023     		movs	r3, #0
 1802 001c C7F82834 		str	r3, [r7, #1064]
 418:App/STM32F4-Discovery/usart.c **** 	int pos = 0; 
 1803              		.loc 1 418 0
 1804 0020 0023     		movs	r3, #0
 1805 0022 C7F82434 		str	r3, [r7, #1060]
 419:App/STM32F4-Discovery/usart.c **** 	
 420:App/STM32F4-Discovery/usart.c **** 	req[0] = 0x36; 
 1806              		.loc 1 420 0
 1807 0026 07F50573 		add	r3, r7, #532
 1808 002a 3622     		movs	r2, #54
 1809 002c 1A70     		strb	r2, [r3]
 421:App/STM32F4-Discovery/usart.c **** 	req[1] = 0xF;
 1810              		.loc 1 421 0
 1811 002e 07F50573 		add	r3, r7, #532
 1812 0032 0F22     		movs	r2, #15
 1813 0034 5A70     		strb	r2, [r3, #1]
 422:App/STM32F4-Discovery/usart.c **** 	req[2] = address >> 8;
 1814              		.loc 1 422 0
 1815 0036 07F10E03 		add	r3, r7, #14
 1816 003a 1B88     		ldrh	r3, [r3]
 1817 003c 1B0A     		lsrs	r3, r3, #8
 1818 003e 9BB2     		uxth	r3, r3
 1819 0040 DAB2     		uxtb	r2, r3
 1820 0042 07F50573 		add	r3, r7, #532
 1821 0046 9A70     		strb	r2, [r3, #2]
 423:App/STM32F4-Discovery/usart.c **** 	req[3] = address & 0x00ff;
 1822              		.loc 1 423 0
 1823 0048 07F10E03 		add	r3, r7, #14
 1824 004c 1B88     		ldrh	r3, [r3]	@ movhi
 1825 004e DAB2     		uxtb	r2, r3
 1826 0050 07F50573 		add	r3, r7, #532
 1827 0054 DA70     		strb	r2, [r3, #3]
 424:App/STM32F4-Discovery/usart.c **** 	req[4] = nb >> 8;
 1828              		.loc 1 424 0
 1829 0056 07F10803 		add	r3, r7, #8
 1830 005a 1B68     		ldr	r3, [r3]
 1831 005c 1B12     		asrs	r3, r3, #8
 1832 005e DAB2     		uxtb	r2, r3
 1833 0060 07F50573 		add	r3, r7, #532
 1834 0064 1A71     		strb	r2, [r3, #4]
 425:App/STM32F4-Discovery/usart.c **** 	req[5] = nb & 0x00ff; 
 1835              		.loc 1 425 0
 1836 0066 07F10803 		add	r3, r7, #8
 1837 006a 1B68     		ldr	r3, [r3]
 1838 006c DAB2     		uxtb	r2, r3
 1839 006e 07F50573 		add	r3, r7, #532
 1840 0072 5A71     		strb	r2, [r3, #5]
 426:App/STM32F4-Discovery/usart.c **** 	req_length = 6; 
 1841              		.loc 1 426 0
 1842 0074 0623     		movs	r3, #6
 1843 0076 C7F82C34 		str	r3, [r7, #1068]
 427:App/STM32F4-Discovery/usart.c **** 	
 428:App/STM32F4-Discovery/usart.c ****     	byte_count = (nb / 8) + ((nb % 8) ? 1 : 0);
 1844              		.loc 1 428 0
 1845 007a 07F10803 		add	r3, r7, #8
 1846 007e 1B68     		ldr	r3, [r3]
 1847 0080 002B     		cmp	r3, #0
 1848 0082 00DA     		bge	.L55
 1849 0084 0733     		adds	r3, r3, #7
 1850              	.L55:
 1851 0086 DB10     		asrs	r3, r3, #3
 1852 0088 1A46     		mov	r2, r3
 1853 008a 07F10803 		add	r3, r7, #8
 1854 008e 1B68     		ldr	r3, [r3]
 1855 0090 03F00703 		and	r3, r3, #7
 1856 0094 002B     		cmp	r3, #0
 1857 0096 0CBF     		ite	eq
 1858 0098 0023     		moveq	r3, #0
 1859 009a 0123     		movne	r3, #1
 1860 009c DBB2     		uxtb	r3, r3
 1861 009e 1344     		add	r3, r3, r2
 1862 00a0 C7F81834 		str	r3, [r7, #1048]
 429:App/STM32F4-Discovery/usart.c ****   	req[req_length++] = byte_count;
 1863              		.loc 1 429 0
 1864 00a4 D7F82C34 		ldr	r3, [r7, #1068]
 1865 00a8 5A1C     		adds	r2, r3, #1
 1866 00aa C7F82C24 		str	r2, [r7, #1068]
 1867 00ae D7F81824 		ldr	r2, [r7, #1048]
 1868 00b2 D1B2     		uxtb	r1, r2
 1869 00b4 07F50572 		add	r2, r7, #532
 1870 00b8 D154     		strb	r1, [r2, r3]
 430:App/STM32F4-Discovery/usart.c **** 
 431:App/STM32F4-Discovery/usart.c **** 	int i; 
 432:App/STM32F4-Discovery/usart.c ****     	for (i = 0; i < byte_count; i++) {
 1871              		.loc 1 432 0
 1872 00ba 0023     		movs	r3, #0
 1873 00bc C7F82034 		str	r3, [r7, #1056]
 1874 00c0 5CE0     		b	.L56
 1875              	.L62:
 1876              	.LBB3:
 433:App/STM32F4-Discovery/usart.c ****         
 434:App/STM32F4-Discovery/usart.c **** 		int bit;
 435:App/STM32F4-Discovery/usart.c **** 		bit = 0x01;
 1877              		.loc 1 435 0
 1878 00c2 0123     		movs	r3, #1
 1879 00c4 C7F81C34 		str	r3, [r7, #1052]
 436:App/STM32F4-Discovery/usart.c ****         	req[req_length] = 0;
 1880              		.loc 1 436 0
 1881 00c8 07F50572 		add	r2, r7, #532
 1882 00cc D7F82C34 		ldr	r3, [r7, #1068]
 1883 00d0 1344     		add	r3, r3, r2
 1884 00d2 0022     		movs	r2, #0
 1885 00d4 1A70     		strb	r2, [r3]
 437:App/STM32F4-Discovery/usart.c **** 
 438:App/STM32F4-Discovery/usart.c ****         	while ((bit & 0xFF) && (bit_check++ < nb)) {
 1886              		.loc 1 438 0
 1887 00d6 38E0     		b	.L57
 1888              	.L61:
 439:App/STM32F4-Discovery/usart.c ****             		if (src[pos++])
 1889              		.loc 1 439 0
 1890 00d8 D7F82434 		ldr	r3, [r7, #1060]
 1891 00dc 5A1C     		adds	r2, r3, #1
 1892 00de C7F82424 		str	r2, [r7, #1060]
 1893 00e2 3A1D     		adds	r2, r7, #4
 1894 00e4 1268     		ldr	r2, [r2]
 1895 00e6 1344     		add	r3, r3, r2
 1896 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1897 00ea 002B     		cmp	r3, #0
 1898 00ec 13D0     		beq	.L58
 440:App/STM32F4-Discovery/usart.c ****                 		req[req_length] |= bit;
 1899              		.loc 1 440 0
 1900 00ee 07F50572 		add	r2, r7, #532
 1901 00f2 D7F82C34 		ldr	r3, [r7, #1068]
 1902 00f6 1344     		add	r3, r3, r2
 1903 00f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1904 00fa DAB2     		uxtb	r2, r3
 1905 00fc D7F81C34 		ldr	r3, [r7, #1052]
 1906 0100 DBB2     		uxtb	r3, r3
 1907 0102 1343     		orrs	r3, r3, r2
 1908 0104 DBB2     		uxtb	r3, r3
 1909 0106 DAB2     		uxtb	r2, r3
 1910 0108 07F50571 		add	r1, r7, #532
 1911 010c D7F82C34 		ldr	r3, [r7, #1068]
 1912 0110 0B44     		add	r3, r3, r1
 1913 0112 1A70     		strb	r2, [r3]
 1914 0114 14E0     		b	.L59
 1915              	.L58:
 441:App/STM32F4-Discovery/usart.c ****             		else
 442:App/STM32F4-Discovery/usart.c ****                 		req[req_length] &=~ bit;
 1916              		.loc 1 442 0
 1917 0116 07F50572 		add	r2, r7, #532
 1918 011a D7F82C34 		ldr	r3, [r7, #1068]
 1919 011e 1344     		add	r3, r3, r2
 1920 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1921 0122 DAB2     		uxtb	r2, r3
 1922 0124 D7F81C34 		ldr	r3, [r7, #1052]
 1923 0128 DBB2     		uxtb	r3, r3
 1924 012a DB43     		mvns	r3, r3
 1925 012c DBB2     		uxtb	r3, r3
 1926 012e 1340     		ands	r3, r3, r2
 1927 0130 DBB2     		uxtb	r3, r3
 1928 0132 DAB2     		uxtb	r2, r3
 1929 0134 07F50571 		add	r1, r7, #532
 1930 0138 D7F82C34 		ldr	r3, [r7, #1068]
 1931 013c 0B44     		add	r3, r3, r1
 1932 013e 1A70     		strb	r2, [r3]
 1933              	.L59:
 443:App/STM32F4-Discovery/usart.c **** 
 444:App/STM32F4-Discovery/usart.c ****             		bit = bit << 1;
 1934              		.loc 1 444 0
 1935 0140 D7F81C34 		ldr	r3, [r7, #1052]
 1936 0144 5B00     		lsls	r3, r3, #1
 1937 0146 C7F81C34 		str	r3, [r7, #1052]
 1938              	.L57:
 438:App/STM32F4-Discovery/usart.c ****         	while ((bit & 0xFF) && (bit_check++ < nb)) {
 1939              		.loc 1 438 0 discriminator 1
 1940 014a D7F81C34 		ldr	r3, [r7, #1052]
 1941 014e DBB2     		uxtb	r3, r3
 1942 0150 002B     		cmp	r3, #0
 1943 0152 09D0     		beq	.L60
 438:App/STM32F4-Discovery/usart.c ****         	while ((bit & 0xFF) && (bit_check++ < nb)) {
 1944              		.loc 1 438 0 is_stmt 0 discriminator 2
 1945 0154 D7F82834 		ldr	r3, [r7, #1064]
 1946 0158 5A1C     		adds	r2, r3, #1
 1947 015a C7F82824 		str	r2, [r7, #1064]
 1948 015e 07F10802 		add	r2, r7, #8
 1949 0162 1268     		ldr	r2, [r2]
 1950 0164 9342     		cmp	r3, r2
 1951 0166 B7DB     		blt	.L61
 1952              	.L60:
 445:App/STM32F4-Discovery/usart.c ****         	}	
 446:App/STM32F4-Discovery/usart.c ****         	
 447:App/STM32F4-Discovery/usart.c **** 		req_length++;
 1953              		.loc 1 447 0 is_stmt 1
 1954 0168 D7F82C34 		ldr	r3, [r7, #1068]
 1955 016c 0133     		adds	r3, r3, #1
 1956 016e C7F82C34 		str	r3, [r7, #1068]
 1957              	.LBE3:
 432:App/STM32F4-Discovery/usart.c ****     	for (i = 0; i < byte_count; i++) {
 1958              		.loc 1 432 0
 1959 0172 D7F82034 		ldr	r3, [r7, #1056]
 1960 0176 0133     		adds	r3, r3, #1
 1961 0178 C7F82034 		str	r3, [r7, #1056]
 1962              	.L56:
 432:App/STM32F4-Discovery/usart.c ****     	for (i = 0; i < byte_count; i++) {
 1963              		.loc 1 432 0 is_stmt 0 discriminator 1
 1964 017c D7F82024 		ldr	r2, [r7, #1056]
 1965 0180 D7F81834 		ldr	r3, [r7, #1048]
 1966 0184 9A42     		cmp	r2, r3
 1967 0186 9CDB     		blt	.L62
 448:App/STM32F4-Discovery/usart.c **** 	 }
 449:App/STM32F4-Discovery/usart.c **** 
 450:App/STM32F4-Discovery/usart.c **** 	uint16_t crc = crc16(req, req_length);
 1968              		.loc 1 450 0 is_stmt 1
 1969 0188 D7F82C34 		ldr	r3, [r7, #1068]
 1970 018c 9BB2     		uxth	r3, r3
 1971 018e 07F50572 		add	r2, r7, #532
 1972 0192 1046     		mov	r0, r2
 1973 0194 1946     		mov	r1, r3
 1974 0196 FFF7FEFF 		bl	crc16
 1975 019a 0346     		mov	r3, r0
 1976 019c A7F81634 		strh	r3, [r7, #1046]	@ movhi
 451:App/STM32F4-Discovery/usart.c **** 
 452:App/STM32F4-Discovery/usart.c **** 	req[req_length++] = crc >> 8; 
 1977              		.loc 1 452 0
 1978 01a0 D7F82C34 		ldr	r3, [r7, #1068]
 1979 01a4 5A1C     		adds	r2, r3, #1
 1980 01a6 C7F82C24 		str	r2, [r7, #1068]
 1981 01aa B7F81624 		ldrh	r2, [r7, #1046]
 1982 01ae 120A     		lsrs	r2, r2, #8
 1983 01b0 92B2     		uxth	r2, r2
 1984 01b2 D1B2     		uxtb	r1, r2
 1985 01b4 07F50572 		add	r2, r7, #532
 1986 01b8 D154     		strb	r1, [r2, r3]
 453:App/STM32F4-Discovery/usart.c **** 	req[req_length++] = crc & 0x00ff; 
 1987              		.loc 1 453 0
 1988 01ba D7F82C34 		ldr	r3, [r7, #1068]
 1989 01be 5A1C     		adds	r2, r3, #1
 1990 01c0 C7F82C24 		str	r2, [r7, #1068]
 1991 01c4 B7F81624 		ldrh	r2, [r7, #1046]	@ movhi
 1992 01c8 D1B2     		uxtb	r1, r2
 1993 01ca 07F50572 		add	r2, r7, #532
 1994 01ce D154     		strb	r1, [r2, r3]
 454:App/STM32F4-Discovery/usart.c **** 	
 455:App/STM32F4-Discovery/usart.c **** 	/* write request  to modbus line */
 456:App/STM32F4-Discovery/usart.c **** 	write_read_modbus( req,rsp, req_length ,8); 
 1995              		.loc 1 456 0
 1996 01d0 07F50572 		add	r2, r7, #532
 1997 01d4 07F11403 		add	r3, r7, #20
 1998 01d8 1046     		mov	r0, r2
 1999 01da 1946     		mov	r1, r3
 2000 01dc D7F82C24 		ldr	r2, [r7, #1068]
 2001 01e0 0823     		movs	r3, #8
 2002 01e2 FFF7FEFF 		bl	write_read_modbus
 457:App/STM32F4-Discovery/usart.c **** 	return modbus_confirmation (req, rsp,req_length, 8); 
 2003              		.loc 1 457 0
 2004 01e6 D7F82C34 		ldr	r3, [r7, #1068]
 2005 01ea 9BB2     		uxth	r3, r3
 2006 01ec 07F50571 		add	r1, r7, #532
 2007 01f0 07F11402 		add	r2, r7, #20
 2008 01f4 0846     		mov	r0, r1
 2009 01f6 1146     		mov	r1, r2
 2010 01f8 1A46     		mov	r2, r3
 2011 01fa 0823     		movs	r3, #8
 2012 01fc FFF7FEFF 		bl	modbus_confirmation
 2013 0200 0346     		mov	r3, r0
 2014 0202 DBB2     		uxtb	r3, r3
 458:App/STM32F4-Discovery/usart.c **** 
 459:App/STM32F4-Discovery/usart.c **** 	
 460:App/STM32F4-Discovery/usart.c **** }
 2015              		.loc 1 460 0
 2016 0204 1846     		mov	r0, r3
 2017 0206 07F58667 		add	r7, r7, #1072
 2018 020a BD46     		mov	sp, r7
 2019              		@ sp needed
 2020 020c 80BD     		pop	{r7, pc}
 2021              		.cfi_endproc
 2022              	.LFE120:
 2024 020e 00BF     		.section	.text.modbus_WR,"ax",%progbits
 2025              		.align	2
 2026              		.global	modbus_WR
 2027              		.thumb
 2028              		.thumb_func
 2030              	modbus_WR:
 2031              	.LFB121:
 461:App/STM32F4-Discovery/usart.c **** 
 462:App/STM32F4-Discovery/usart.c **** /* Write the values from the array to the registers of the remote device */
 463:App/STM32F4-Discovery/usart.c **** uint8_t modbus_WR( int address, int nb, const uint16_t *src)
 464:App/STM32F4-Discovery/usart.c **** {
 2032              		.loc 1 464 0
 2033              		.cfi_startproc
 2034              		@ args = 0, pretend = 0, frame = 1056
 2035              		@ frame_needed = 1, uses_anonymous_args = 0
 2036 0000 80B5     		push	{r7, lr}
 2037              	.LCFI33:
 2038              		.cfi_def_cfa_offset 8
 2039              		.cfi_offset 7, -8
 2040              		.cfi_offset 14, -4
 2041 0002 ADF5846D 		sub	sp, sp, #1056
 2042              	.LCFI34:
 2043              		.cfi_def_cfa_offset 1064
 2044 0006 00AF     		add	r7, sp, #0
 2045              	.LCFI35:
 2046              		.cfi_def_cfa_register 7
 2047 0008 07F10C03 		add	r3, r7, #12
 2048 000c 1860     		str	r0, [r3]
 2049 000e 07F10803 		add	r3, r7, #8
 2050 0012 1960     		str	r1, [r3]
 2051 0014 3B1D     		adds	r3, r7, #4
 2052 0016 1A60     		str	r2, [r3]
 465:App/STM32F4-Discovery/usart.c **** 	int rc;
 466:App/STM32F4-Discovery/usart.c **** 	int i;
 467:App/STM32F4-Discovery/usart.c ****     	int req_length;
 468:App/STM32F4-Discovery/usart.c ****     	int byte_count;
 469:App/STM32F4-Discovery/usart.c **** 
 470:App/STM32F4-Discovery/usart.c ****     	uint8_t req[REQ_MAX_LEN];
 471:App/STM32F4-Discovery/usart.c **** 	uint8_t rsp[REQ_MAX_LEN];
 472:App/STM32F4-Discovery/usart.c **** 
 473:App/STM32F4-Discovery/usart.c **** 	req[0] = 0x36; 
 2053              		.loc 1 473 0
 2054 0018 07F50473 		add	r3, r7, #528
 2055 001c 3622     		movs	r2, #54
 2056 001e 1A70     		strb	r2, [r3]
 474:App/STM32F4-Discovery/usart.c **** 	req[1] = 0x10;
 2057              		.loc 1 474 0
 2058 0020 07F50473 		add	r3, r7, #528
 2059 0024 1022     		movs	r2, #16
 2060 0026 5A70     		strb	r2, [r3, #1]
 475:App/STM32F4-Discovery/usart.c **** 	req[2] = address >> 8;
 2061              		.loc 1 475 0
 2062 0028 07F10C03 		add	r3, r7, #12
 2063 002c 1B68     		ldr	r3, [r3]
 2064 002e 1B12     		asrs	r3, r3, #8
 2065 0030 DAB2     		uxtb	r2, r3
 2066 0032 07F50473 		add	r3, r7, #528
 2067 0036 9A70     		strb	r2, [r3, #2]
 476:App/STM32F4-Discovery/usart.c **** 	req[3] = address & 0x00ff;
 2068              		.loc 1 476 0
 2069 0038 07F10C03 		add	r3, r7, #12
 2070 003c 1B68     		ldr	r3, [r3]
 2071 003e DAB2     		uxtb	r2, r3
 2072 0040 07F50473 		add	r3, r7, #528
 2073 0044 DA70     		strb	r2, [r3, #3]
 477:App/STM32F4-Discovery/usart.c **** 	req[4] = nb >> 8;
 2074              		.loc 1 477 0
 2075 0046 07F10803 		add	r3, r7, #8
 2076 004a 1B68     		ldr	r3, [r3]
 2077 004c 1B12     		asrs	r3, r3, #8
 2078 004e DAB2     		uxtb	r2, r3
 2079 0050 07F50473 		add	r3, r7, #528
 2080 0054 1A71     		strb	r2, [r3, #4]
 478:App/STM32F4-Discovery/usart.c **** 	req[5] = nb & 0x00ff; 
 2081              		.loc 1 478 0
 2082 0056 07F10803 		add	r3, r7, #8
 2083 005a 1B68     		ldr	r3, [r3]
 2084 005c DAB2     		uxtb	r2, r3
 2085 005e 07F50473 		add	r3, r7, #528
 2086 0062 5A71     		strb	r2, [r3, #5]
 479:App/STM32F4-Discovery/usart.c **** 	req_length = 6; 
 2087              		.loc 1 479 0
 2088 0064 0623     		movs	r3, #6
 2089 0066 C7F81834 		str	r3, [r7, #1048]
 480:App/STM32F4-Discovery/usart.c **** 	
 481:App/STM32F4-Discovery/usart.c ****    	byte_count = nb * 2;
 2090              		.loc 1 481 0
 2091 006a 07F10803 		add	r3, r7, #8
 2092 006e 1B68     		ldr	r3, [r3]
 2093 0070 5B00     		lsls	r3, r3, #1
 2094 0072 C7F81434 		str	r3, [r7, #1044]
 482:App/STM32F4-Discovery/usart.c ****     	req[req_length++] = byte_count;
 2095              		.loc 1 482 0
 2096 0076 D7F81834 		ldr	r3, [r7, #1048]
 2097 007a 5A1C     		adds	r2, r3, #1
 2098 007c C7F81824 		str	r2, [r7, #1048]
 2099 0080 D7F81424 		ldr	r2, [r7, #1044]
 2100 0084 D1B2     		uxtb	r1, r2
 2101 0086 07F50472 		add	r2, r7, #528
 2102 008a D154     		strb	r1, [r2, r3]
 483:App/STM32F4-Discovery/usart.c **** 
 484:App/STM32F4-Discovery/usart.c ****     for (i = 0; i < nb; i++) {
 2103              		.loc 1 484 0
 2104 008c 0023     		movs	r3, #0
 2105 008e C7F81C34 		str	r3, [r7, #1052]
 2106 0092 26E0     		b	.L65
 2107              	.L66:
 485:App/STM32F4-Discovery/usart.c **** 		req[req_length++] = src[i] >> 8;
 2108              		.loc 1 485 0 discriminator 2
 2109 0094 D7F81834 		ldr	r3, [r7, #1048]
 2110 0098 5A1C     		adds	r2, r3, #1
 2111 009a C7F81824 		str	r2, [r7, #1048]
 2112 009e D7F81C24 		ldr	r2, [r7, #1052]
 2113 00a2 5200     		lsls	r2, r2, #1
 2114 00a4 391D     		adds	r1, r7, #4
 2115 00a6 0968     		ldr	r1, [r1]
 2116 00a8 0A44     		add	r2, r2, r1
 2117 00aa 1288     		ldrh	r2, [r2]
 2118 00ac 120A     		lsrs	r2, r2, #8
 2119 00ae 92B2     		uxth	r2, r2
 2120 00b0 D1B2     		uxtb	r1, r2
 2121 00b2 07F50472 		add	r2, r7, #528
 2122 00b6 D154     		strb	r1, [r2, r3]
 486:App/STM32F4-Discovery/usart.c ****         	req[req_length++] = src[i] & 0x00ff;
 2123              		.loc 1 486 0 discriminator 2
 2124 00b8 D7F81834 		ldr	r3, [r7, #1048]
 2125 00bc 5A1C     		adds	r2, r3, #1
 2126 00be C7F81824 		str	r2, [r7, #1048]
 2127 00c2 D7F81C24 		ldr	r2, [r7, #1052]
 2128 00c6 5200     		lsls	r2, r2, #1
 2129 00c8 391D     		adds	r1, r7, #4
 2130 00ca 0968     		ldr	r1, [r1]
 2131 00cc 0A44     		add	r2, r2, r1
 2132 00ce 1288     		ldrh	r2, [r2]
 2133 00d0 D1B2     		uxtb	r1, r2
 2134 00d2 07F50472 		add	r2, r7, #528
 2135 00d6 D154     		strb	r1, [r2, r3]
 484:App/STM32F4-Discovery/usart.c ****     for (i = 0; i < nb; i++) {
 2136              		.loc 1 484 0 discriminator 2
 2137 00d8 D7F81C34 		ldr	r3, [r7, #1052]
 2138 00dc 0133     		adds	r3, r3, #1
 2139 00de C7F81C34 		str	r3, [r7, #1052]
 2140              	.L65:
 484:App/STM32F4-Discovery/usart.c ****     for (i = 0; i < nb; i++) {
 2141              		.loc 1 484 0 is_stmt 0 discriminator 1
 2142 00e2 07F10803 		add	r3, r7, #8
 2143 00e6 D7F81C24 		ldr	r2, [r7, #1052]
 2144 00ea 1B68     		ldr	r3, [r3]
 2145 00ec 9A42     		cmp	r2, r3
 2146 00ee D1DB     		blt	.L66
 487:App/STM32F4-Discovery/usart.c ****     	}
 488:App/STM32F4-Discovery/usart.c **** 
 489:App/STM32F4-Discovery/usart.c **** 	uint16_t crc = crc16(req, req_length);
 2147              		.loc 1 489 0 is_stmt 1
 2148 00f0 D7F81834 		ldr	r3, [r7, #1048]
 2149 00f4 9BB2     		uxth	r3, r3
 2150 00f6 07F50472 		add	r2, r7, #528
 2151 00fa 1046     		mov	r0, r2
 2152 00fc 1946     		mov	r1, r3
 2153 00fe FFF7FEFF 		bl	crc16
 2154 0102 0346     		mov	r3, r0
 2155 0104 A7F81234 		strh	r3, [r7, #1042]	@ movhi
 490:App/STM32F4-Discovery/usart.c **** 
 491:App/STM32F4-Discovery/usart.c **** 	req[req_length++] = crc >> 8; 
 2156              		.loc 1 491 0
 2157 0108 D7F81834 		ldr	r3, [r7, #1048]
 2158 010c 5A1C     		adds	r2, r3, #1
 2159 010e C7F81824 		str	r2, [r7, #1048]
 2160 0112 B7F81224 		ldrh	r2, [r7, #1042]
 2161 0116 120A     		lsrs	r2, r2, #8
 2162 0118 92B2     		uxth	r2, r2
 2163 011a D1B2     		uxtb	r1, r2
 2164 011c 07F50472 		add	r2, r7, #528
 2165 0120 D154     		strb	r1, [r2, r3]
 492:App/STM32F4-Discovery/usart.c **** 	req[req_length++] = crc & 0x00ff;
 2166              		.loc 1 492 0
 2167 0122 D7F81834 		ldr	r3, [r7, #1048]
 2168 0126 5A1C     		adds	r2, r3, #1
 2169 0128 C7F81824 		str	r2, [r7, #1048]
 2170 012c B7F81224 		ldrh	r2, [r7, #1042]	@ movhi
 2171 0130 D1B2     		uxtb	r1, r2
 2172 0132 07F50472 		add	r2, r7, #528
 2173 0136 D154     		strb	r1, [r2, r3]
 493:App/STM32F4-Discovery/usart.c **** 
 494:App/STM32F4-Discovery/usart.c **** 	/* write request  to modbus line */
 495:App/STM32F4-Discovery/usart.c **** 	write_read_modbus( req, rsp, req_length, 8); 
 2174              		.loc 1 495 0
 2175 0138 07F50472 		add	r2, r7, #528
 2176 013c 07F11003 		add	r3, r7, #16
 2177 0140 1046     		mov	r0, r2
 2178 0142 1946     		mov	r1, r3
 2179 0144 D7F81824 		ldr	r2, [r7, #1048]
 2180 0148 0823     		movs	r3, #8
 2181 014a FFF7FEFF 		bl	write_read_modbus
 496:App/STM32F4-Discovery/usart.c **** 	return modbus_confirmation (req, rsp,req_length, 8); 
 2182              		.loc 1 496 0
 2183 014e D7F81834 		ldr	r3, [r7, #1048]
 2184 0152 9BB2     		uxth	r3, r3
 2185 0154 07F50471 		add	r1, r7, #528
 2186 0158 07F11002 		add	r2, r7, #16
 2187 015c 0846     		mov	r0, r1
 2188 015e 1146     		mov	r1, r2
 2189 0160 1A46     		mov	r2, r3
 2190 0162 0823     		movs	r3, #8
 2191 0164 FFF7FEFF 		bl	modbus_confirmation
 2192 0168 0346     		mov	r3, r0
 2193 016a DBB2     		uxtb	r3, r3
 497:App/STM32F4-Discovery/usart.c **** 
 498:App/STM32F4-Discovery/usart.c **** 
 499:App/STM32F4-Discovery/usart.c **** 
 500:App/STM32F4-Discovery/usart.c **** }
 2194              		.loc 1 500 0
 2195 016c 1846     		mov	r0, r3
 2196 016e 07F58467 		add	r7, r7, #1056
 2197 0172 BD46     		mov	sp, r7
 2198              		@ sp needed
 2199 0174 80BD     		pop	{r7, pc}
 2200              		.cfi_endproc
 2201              	.LFE121:
 2203 0176 00BF     		.section	.text.modbus_WSR,"ax",%progbits
 2204              		.align	2
 2205              		.global	modbus_WSR
 2206              		.thumb
 2207              		.thumb_func
 2209              	modbus_WSR:
 2210              	.LFB122:
 501:App/STM32F4-Discovery/usart.c **** 
 502:App/STM32F4-Discovery/usart.c **** /* Write the values from the array to the registers of the remote device */
 503:App/STM32F4-Discovery/usart.c **** uint8_t modbus_WSR( int address, const uint16_t src)
 504:App/STM32F4-Discovery/usart.c **** {
 2211              		.loc 1 504 0
 2212              		.cfi_startproc
 2213              		@ args = 0, pretend = 0, frame = 1048
 2214              		@ frame_needed = 1, uses_anonymous_args = 0
 2215 0000 80B5     		push	{r7, lr}
 2216              	.LCFI36:
 2217              		.cfi_def_cfa_offset 8
 2218              		.cfi_offset 7, -8
 2219              		.cfi_offset 14, -4
 2220 0002 ADF5836D 		sub	sp, sp, #1048
 2221              	.LCFI37:
 2222              		.cfi_def_cfa_offset 1056
 2223 0006 00AF     		add	r7, sp, #0
 2224              	.LCFI38:
 2225              		.cfi_def_cfa_register 7
 2226 0008 3B1D     		adds	r3, r7, #4
 2227 000a 1860     		str	r0, [r3]
 2228 000c 0A46     		mov	r2, r1
 2229 000e BB1C     		adds	r3, r7, #2
 2230 0010 1A80     		strh	r2, [r3]	@ movhi
 505:App/STM32F4-Discovery/usart.c **** 	int nb = 1; 
 2231              		.loc 1 505 0
 2232 0012 0123     		movs	r3, #1
 2233 0014 C7F81434 		str	r3, [r7, #1044]
 506:App/STM32F4-Discovery/usart.c **** 	int rc;
 507:App/STM32F4-Discovery/usart.c **** 	int i;
 508:App/STM32F4-Discovery/usart.c ****     	int req_length;
 509:App/STM32F4-Discovery/usart.c ****     	int byte_count;
 510:App/STM32F4-Discovery/usart.c **** 
 511:App/STM32F4-Discovery/usart.c ****     	uint8_t req[REQ_MAX_LEN];
 512:App/STM32F4-Discovery/usart.c **** 	uint8_t rsp[REQ_MAX_LEN];
 513:App/STM32F4-Discovery/usart.c **** 
 514:App/STM32F4-Discovery/usart.c **** 	req[0] = 0x36; 
 2234              		.loc 1 514 0
 2235 0018 07F50273 		add	r3, r7, #520
 2236 001c 3622     		movs	r2, #54
 2237 001e 1A70     		strb	r2, [r3]
 515:App/STM32F4-Discovery/usart.c **** 	req[1] = 0x6;
 2238              		.loc 1 515 0
 2239 0020 07F50273 		add	r3, r7, #520
 2240 0024 0622     		movs	r2, #6
 2241 0026 5A70     		strb	r2, [r3, #1]
 516:App/STM32F4-Discovery/usart.c **** 	req[2] = address >> 8;
 2242              		.loc 1 516 0
 2243 0028 3B1D     		adds	r3, r7, #4
 2244 002a 1B68     		ldr	r3, [r3]
 2245 002c 1B12     		asrs	r3, r3, #8
 2246 002e DAB2     		uxtb	r2, r3
 2247 0030 07F50273 		add	r3, r7, #520
 2248 0034 9A70     		strb	r2, [r3, #2]
 517:App/STM32F4-Discovery/usart.c **** 	req[3] = address & 0x00ff;
 2249              		.loc 1 517 0
 2250 0036 3B1D     		adds	r3, r7, #4
 2251 0038 1B68     		ldr	r3, [r3]
 2252 003a DAB2     		uxtb	r2, r3
 2253 003c 07F50273 		add	r3, r7, #520
 2254 0040 DA70     		strb	r2, [r3, #3]
 518:App/STM32F4-Discovery/usart.c **** //	req[4] = nb >> 8;
 519:App/STM32F4-Discovery/usart.c **** //	req[5] = nb & 0x00ff; 
 520:App/STM32F4-Discovery/usart.c **** 	req_length = 4; 
 2255              		.loc 1 520 0
 2256 0042 0423     		movs	r3, #4
 2257 0044 C7F81034 		str	r3, [r7, #1040]
 521:App/STM32F4-Discovery/usart.c **** 	
 522:App/STM32F4-Discovery/usart.c ****    	byte_count = nb * 2;
 2258              		.loc 1 522 0
 2259 0048 D7F81434 		ldr	r3, [r7, #1044]
 2260 004c 5B00     		lsls	r3, r3, #1
 2261 004e C7F80C34 		str	r3, [r7, #1036]
 523:App/STM32F4-Discovery/usart.c ****     	req[req_length++] = byte_count;
 2262              		.loc 1 523 0
 2263 0052 D7F81034 		ldr	r3, [r7, #1040]
 2264 0056 5A1C     		adds	r2, r3, #1
 2265 0058 C7F81024 		str	r2, [r7, #1040]
 2266 005c D7F80C24 		ldr	r2, [r7, #1036]
 2267 0060 D1B2     		uxtb	r1, r2
 2268 0062 07F50272 		add	r2, r7, #520
 2269 0066 D154     		strb	r1, [r2, r3]
 524:App/STM32F4-Discovery/usart.c **** 
 525:App/STM32F4-Discovery/usart.c **** 	req[req_length++] = src >> 8;
 2270              		.loc 1 525 0
 2271 0068 D7F81034 		ldr	r3, [r7, #1040]
 2272 006c 5A1C     		adds	r2, r3, #1
 2273 006e C7F81024 		str	r2, [r7, #1040]
 2274 0072 BA1C     		adds	r2, r7, #2
 2275 0074 1288     		ldrh	r2, [r2]
 2276 0076 120A     		lsrs	r2, r2, #8
 2277 0078 92B2     		uxth	r2, r2
 2278 007a D1B2     		uxtb	r1, r2
 2279 007c 07F50272 		add	r2, r7, #520
 2280 0080 D154     		strb	r1, [r2, r3]
 526:App/STM32F4-Discovery/usart.c ****        	req[req_length++] = src & 0x00ff;
 2281              		.loc 1 526 0
 2282 0082 D7F81034 		ldr	r3, [r7, #1040]
 2283 0086 5A1C     		adds	r2, r3, #1
 2284 0088 C7F81024 		str	r2, [r7, #1040]
 2285 008c BA1C     		adds	r2, r7, #2
 2286 008e 1288     		ldrh	r2, [r2]	@ movhi
 2287 0090 D1B2     		uxtb	r1, r2
 2288 0092 07F50272 		add	r2, r7, #520
 2289 0096 D154     		strb	r1, [r2, r3]
 527:App/STM32F4-Discovery/usart.c ****     	
 528:App/STM32F4-Discovery/usart.c **** 
 529:App/STM32F4-Discovery/usart.c **** 	uint16_t crc = crc16(req, req_length);
 2290              		.loc 1 529 0
 2291 0098 D7F81034 		ldr	r3, [r7, #1040]
 2292 009c 9BB2     		uxth	r3, r3
 2293 009e 07F50272 		add	r2, r7, #520
 2294 00a2 1046     		mov	r0, r2
 2295 00a4 1946     		mov	r1, r3
 2296 00a6 FFF7FEFF 		bl	crc16
 2297 00aa 0346     		mov	r3, r0
 2298 00ac A7F80A34 		strh	r3, [r7, #1034]	@ movhi
 530:App/STM32F4-Discovery/usart.c **** 
 531:App/STM32F4-Discovery/usart.c **** 	req[req_length++] = crc >> 8; 
 2299              		.loc 1 531 0
 2300 00b0 D7F81034 		ldr	r3, [r7, #1040]
 2301 00b4 5A1C     		adds	r2, r3, #1
 2302 00b6 C7F81024 		str	r2, [r7, #1040]
 2303 00ba B7F80A24 		ldrh	r2, [r7, #1034]
 2304 00be 120A     		lsrs	r2, r2, #8
 2305 00c0 92B2     		uxth	r2, r2
 2306 00c2 D1B2     		uxtb	r1, r2
 2307 00c4 07F50272 		add	r2, r7, #520
 2308 00c8 D154     		strb	r1, [r2, r3]
 532:App/STM32F4-Discovery/usart.c **** 	req[req_length++] = crc & 0x00ff;
 2309              		.loc 1 532 0
 2310 00ca D7F81034 		ldr	r3, [r7, #1040]
 2311 00ce 5A1C     		adds	r2, r3, #1
 2312 00d0 C7F81024 		str	r2, [r7, #1040]
 2313 00d4 B7F80A24 		ldrh	r2, [r7, #1034]	@ movhi
 2314 00d8 D1B2     		uxtb	r1, r2
 2315 00da 07F50272 		add	r2, r7, #520
 2316 00de D154     		strb	r1, [r2, r3]
 533:App/STM32F4-Discovery/usart.c **** 
 534:App/STM32F4-Discovery/usart.c **** 	/* write request  to modbus line */
 535:App/STM32F4-Discovery/usart.c **** 	write_read_modbus( req, rsp, req_length, 5); 
 2317              		.loc 1 535 0
 2318 00e0 07F50272 		add	r2, r7, #520
 2319 00e4 07F10803 		add	r3, r7, #8
 2320 00e8 1046     		mov	r0, r2
 2321 00ea 1946     		mov	r1, r3
 2322 00ec D7F81024 		ldr	r2, [r7, #1040]
 2323 00f0 0523     		movs	r3, #5
 2324 00f2 FFF7FEFF 		bl	write_read_modbus
 536:App/STM32F4-Discovery/usart.c **** 	return modbus_confirmation (req, rsp,req_length, 5); 
 2325              		.loc 1 536 0
 2326 00f6 D7F81034 		ldr	r3, [r7, #1040]
 2327 00fa 9BB2     		uxth	r3, r3
 2328 00fc 07F50271 		add	r1, r7, #520
 2329 0100 07F10802 		add	r2, r7, #8
 2330 0104 0846     		mov	r0, r1
 2331 0106 1146     		mov	r1, r2
 2332 0108 1A46     		mov	r2, r3
 2333 010a 0523     		movs	r3, #5
 2334 010c FFF7FEFF 		bl	modbus_confirmation
 2335 0110 0346     		mov	r3, r0
 2336 0112 DBB2     		uxtb	r3, r3
 537:App/STM32F4-Discovery/usart.c **** 
 538:App/STM32F4-Discovery/usart.c **** 
 539:App/STM32F4-Discovery/usart.c **** 
 540:App/STM32F4-Discovery/usart.c **** }
 2337              		.loc 1 540 0
 2338 0114 1846     		mov	r0, r3
 2339 0116 07F58367 		add	r7, r7, #1048
 2340 011a BD46     		mov	sp, r7
 2341              		@ sp needed
 2342 011c 80BD     		pop	{r7, pc}
 2343              		.cfi_endproc
 2344              	.LFE122:
 2346 011e 00BF     		.section	.text.modbus_RR,"ax",%progbits
 2347              		.align	2
 2348              		.global	modbus_RR
 2349              		.thumb
 2350              		.thumb_func
 2352              	modbus_RR:
 2353              	.LFB123:
 541:App/STM32F4-Discovery/usart.c **** 
 542:App/STM32F4-Discovery/usart.c **** 
 543:App/STM32F4-Discovery/usart.c **** /* Read the values from the array to the registers of the remote device */
 544:App/STM32F4-Discovery/usart.c **** uint8_t modbus_RR( int address, int nb, uint16_t *src)
 545:App/STM32F4-Discovery/usart.c **** {
 2354              		.loc 1 545 0
 2355              		.cfi_startproc
 2356              		@ args = 0, pretend = 0, frame = 1064
 2357              		@ frame_needed = 1, uses_anonymous_args = 0
 2358 0000 80B5     		push	{r7, lr}
 2359              	.LCFI39:
 2360              		.cfi_def_cfa_offset 8
 2361              		.cfi_offset 7, -8
 2362              		.cfi_offset 14, -4
 2363 0002 ADF5856D 		sub	sp, sp, #1064
 2364              	.LCFI40:
 2365              		.cfi_def_cfa_offset 1072
 2366 0006 00AF     		add	r7, sp, #0
 2367              	.LCFI41:
 2368              		.cfi_def_cfa_register 7
 2369 0008 07F10C03 		add	r3, r7, #12
 2370 000c 1860     		str	r0, [r3]
 2371 000e 07F10803 		add	r3, r7, #8
 2372 0012 1960     		str	r1, [r3]
 2373 0014 3B1D     		adds	r3, r7, #4
 2374 0016 1A60     		str	r2, [r3]
 546:App/STM32F4-Discovery/usart.c ****     	int rc;
 547:App/STM32F4-Discovery/usart.c ****     	int i;
 548:App/STM32F4-Discovery/usart.c ****     	int req_length;
 549:App/STM32F4-Discovery/usart.c **** 	int byte_count;
 550:App/STM32F4-Discovery/usart.c ****     	uint8_t req[REQ_MAX_LEN];
 551:App/STM32F4-Discovery/usart.c ****   	uint8_t rsp[REQ_MAX_LEN];
 552:App/STM32F4-Discovery/usart.c **** 
 553:App/STM32F4-Discovery/usart.c **** 	req[0] = 0x36; 
 2375              		.loc 1 553 0
 2376 0018 07F50573 		add	r3, r7, #532
 2377 001c 3622     		movs	r2, #54
 2378 001e 1A70     		strb	r2, [r3]
 554:App/STM32F4-Discovery/usart.c **** 	req[1] = 0x4;
 2379              		.loc 1 554 0
 2380 0020 07F50573 		add	r3, r7, #532
 2381 0024 0422     		movs	r2, #4
 2382 0026 5A70     		strb	r2, [r3, #1]
 555:App/STM32F4-Discovery/usart.c **** 	req[2] = address >> 8;
 2383              		.loc 1 555 0
 2384 0028 07F10C03 		add	r3, r7, #12
 2385 002c 1B68     		ldr	r3, [r3]
 2386 002e 1B12     		asrs	r3, r3, #8
 2387 0030 DAB2     		uxtb	r2, r3
 2388 0032 07F50573 		add	r3, r7, #532
 2389 0036 9A70     		strb	r2, [r3, #2]
 556:App/STM32F4-Discovery/usart.c **** 	req[3] = address & 0x00ff;
 2390              		.loc 1 556 0
 2391 0038 07F10C03 		add	r3, r7, #12
 2392 003c 1B68     		ldr	r3, [r3]
 2393 003e DAB2     		uxtb	r2, r3
 2394 0040 07F50573 		add	r3, r7, #532
 2395 0044 DA70     		strb	r2, [r3, #3]
 557:App/STM32F4-Discovery/usart.c **** 	req[4] = nb >> 8;
 2396              		.loc 1 557 0
 2397 0046 07F10803 		add	r3, r7, #8
 2398 004a 1B68     		ldr	r3, [r3]
 2399 004c 1B12     		asrs	r3, r3, #8
 2400 004e DAB2     		uxtb	r2, r3
 2401 0050 07F50573 		add	r3, r7, #532
 2402 0054 1A71     		strb	r2, [r3, #4]
 558:App/STM32F4-Discovery/usart.c **** 	req[5] = nb & 0x00ff; 
 2403              		.loc 1 558 0
 2404 0056 07F10803 		add	r3, r7, #8
 2405 005a 1B68     		ldr	r3, [r3]
 2406 005c DAB2     		uxtb	r2, r3
 2407 005e 07F50573 		add	r3, r7, #532
 2408 0062 5A71     		strb	r2, [r3, #5]
 559:App/STM32F4-Discovery/usart.c **** 	req_length = 6; 
 2409              		.loc 1 559 0
 2410 0064 0623     		movs	r3, #6
 2411 0066 C7F82034 		str	r3, [r7, #1056]
 560:App/STM32F4-Discovery/usart.c ****    	
 561:App/STM32F4-Discovery/usart.c **** 	byte_count = nb * 2;
 2412              		.loc 1 561 0
 2413 006a 07F10803 		add	r3, r7, #8
 2414 006e 1B68     		ldr	r3, [r3]
 2415 0070 5B00     		lsls	r3, r3, #1
 2416 0072 C7F81C34 		str	r3, [r7, #1052]
 562:App/STM32F4-Discovery/usart.c ****     	req[req_length++] = byte_count;
 2417              		.loc 1 562 0
 2418 0076 D7F82034 		ldr	r3, [r7, #1056]
 2419 007a 5A1C     		adds	r2, r3, #1
 2420 007c C7F82024 		str	r2, [r7, #1056]
 2421 0080 D7F81C24 		ldr	r2, [r7, #1052]
 2422 0084 D1B2     		uxtb	r1, r2
 2423 0086 07F50572 		add	r2, r7, #532
 2424 008a D154     		strb	r1, [r2, r3]
 563:App/STM32F4-Discovery/usart.c **** 	
 564:App/STM32F4-Discovery/usart.c **** 	uint16_t crc = crc16(req, req_length);
 2425              		.loc 1 564 0
 2426 008c D7F82034 		ldr	r3, [r7, #1056]
 2427 0090 9BB2     		uxth	r3, r3
 2428 0092 07F50572 		add	r2, r7, #532
 2429 0096 1046     		mov	r0, r2
 2430 0098 1946     		mov	r1, r3
 2431 009a FFF7FEFF 		bl	crc16
 2432 009e 0346     		mov	r3, r0
 2433 00a0 A7F81A34 		strh	r3, [r7, #1050]	@ movhi
 565:App/STM32F4-Discovery/usart.c **** 
 566:App/STM32F4-Discovery/usart.c **** 	req[req_length++] = crc >> 8; 
 2434              		.loc 1 566 0
 2435 00a4 D7F82034 		ldr	r3, [r7, #1056]
 2436 00a8 5A1C     		adds	r2, r3, #1
 2437 00aa C7F82024 		str	r2, [r7, #1056]
 2438 00ae B7F81A24 		ldrh	r2, [r7, #1050]
 2439 00b2 120A     		lsrs	r2, r2, #8
 2440 00b4 92B2     		uxth	r2, r2
 2441 00b6 D1B2     		uxtb	r1, r2
 2442 00b8 07F50572 		add	r2, r7, #532
 2443 00bc D154     		strb	r1, [r2, r3]
 567:App/STM32F4-Discovery/usart.c **** 	req[req_length++] = crc & 0x00ff; 
 2444              		.loc 1 567 0
 2445 00be D7F82034 		ldr	r3, [r7, #1056]
 2446 00c2 5A1C     		adds	r2, r3, #1
 2447 00c4 C7F82024 		str	r2, [r7, #1056]
 2448 00c8 B7F81A24 		ldrh	r2, [r7, #1050]	@ movhi
 2449 00cc D1B2     		uxtb	r1, r2
 2450 00ce 07F50572 		add	r2, r7, #532
 2451 00d2 D154     		strb	r1, [r2, r3]
 568:App/STM32F4-Discovery/usart.c **** 	
 569:App/STM32F4-Discovery/usart.c **** 	/* write request  to modbus line */
 570:App/STM32F4-Discovery/usart.c **** 	write_read_modbus( req, rsp,  req_length, nb*2 + 5); 
 2452              		.loc 1 570 0
 2453 00d4 07F10803 		add	r3, r7, #8
 2454 00d8 1B68     		ldr	r3, [r3]
 2455 00da 5B00     		lsls	r3, r3, #1
 2456 00dc 0533     		adds	r3, r3, #5
 2457 00de 07F50571 		add	r1, r7, #532
 2458 00e2 07F11402 		add	r2, r7, #20
 2459 00e6 0846     		mov	r0, r1
 2460 00e8 1146     		mov	r1, r2
 2461 00ea D7F82024 		ldr	r2, [r7, #1056]
 2462 00ee FFF7FEFF 		bl	write_read_modbus
 571:App/STM32F4-Discovery/usart.c **** 	
 572:App/STM32F4-Discovery/usart.c **** 	int offset = 2;
 2463              		.loc 1 572 0
 2464 00f2 0223     		movs	r3, #2
 2465 00f4 C7F81434 		str	r3, [r7, #1044]
 573:App/STM32F4-Discovery/usart.c **** 	
 574:App/STM32F4-Discovery/usart.c **** 	for (i = 0; i < nb; i++) {
 2466              		.loc 1 574 0
 2467 00f8 0023     		movs	r3, #0
 2468 00fa C7F82434 		str	r3, [r7, #1060]
 2469 00fe 24E0     		b	.L71
 2470              	.L72:
 575:App/STM32F4-Discovery/usart.c ****             /* shift reg hi_byte to temp OR with lo_byte */
 576:App/STM32F4-Discovery/usart.c ****             src[i] = (rsp[offset + 1 + (i << 1)] << 8) |
 2471              		.loc 1 576 0 discriminator 2
 2472 0100 D7F82434 		ldr	r3, [r7, #1060]
 2473 0104 5B00     		lsls	r3, r3, #1
 2474 0106 3A1D     		adds	r2, r7, #4
 2475 0108 1268     		ldr	r2, [r2]
 2476 010a 1344     		add	r3, r3, r2
 2477 010c D7F81424 		ldr	r2, [r7, #1044]
 2478 0110 511C     		adds	r1, r2, #1
 2479 0112 D7F82424 		ldr	r2, [r7, #1060]
 2480 0116 5200     		lsls	r2, r2, #1
 2481 0118 0A44     		add	r2, r2, r1
 2482 011a 07F11401 		add	r1, r7, #20
 2483 011e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 2484 0120 1202     		lsls	r2, r2, #8
 2485 0122 91B2     		uxth	r1, r2
 577:App/STM32F4-Discovery/usart.c ****                 rsp[offset + 2 + (i << 1)];
 2486              		.loc 1 577 0 discriminator 2
 2487 0124 D7F81424 		ldr	r2, [r7, #1044]
 2488 0128 901C     		adds	r0, r2, #2
 2489 012a D7F82424 		ldr	r2, [r7, #1060]
 2490 012e 5200     		lsls	r2, r2, #1
 2491 0130 0244     		add	r2, r2, r0
 2492 0132 07F11400 		add	r0, r7, #20
 2493 0136 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 576:App/STM32F4-Discovery/usart.c ****             src[i] = (rsp[offset + 1 + (i << 1)] << 8) |
 2494              		.loc 1 576 0 discriminator 2
 2495 0138 0A43     		orrs	r2, r2, r1
 2496 013a 92B2     		uxth	r2, r2
 2497 013c 92B2     		uxth	r2, r2
 2498 013e 1A80     		strh	r2, [r3]	@ movhi
 574:App/STM32F4-Discovery/usart.c **** 	for (i = 0; i < nb; i++) {
 2499              		.loc 1 574 0 discriminator 2
 2500 0140 D7F82434 		ldr	r3, [r7, #1060]
 2501 0144 0133     		adds	r3, r3, #1
 2502 0146 C7F82434 		str	r3, [r7, #1060]
 2503              	.L71:
 574:App/STM32F4-Discovery/usart.c **** 	for (i = 0; i < nb; i++) {
 2504              		.loc 1 574 0 is_stmt 0 discriminator 1
 2505 014a 07F10803 		add	r3, r7, #8
 2506 014e D7F82424 		ldr	r2, [r7, #1060]
 2507 0152 1B68     		ldr	r3, [r3]
 2508 0154 9A42     		cmp	r2, r3
 2509 0156 D3DB     		blt	.L72
 578:App/STM32F4-Discovery/usart.c **** 		
 579:App/STM32F4-Discovery/usart.c ****         }
 580:App/STM32F4-Discovery/usart.c **** 
 581:App/STM32F4-Discovery/usart.c **** //	for (i =0; i < nb; i++ ){ t_printf("[%d] ", src[i]); }
 582:App/STM32F4-Discovery/usart.c **** //	t_printf("\n");
 583:App/STM32F4-Discovery/usart.c **** 
 584:App/STM32F4-Discovery/usart.c **** 	
 585:App/STM32F4-Discovery/usart.c **** 
 586:App/STM32F4-Discovery/usart.c **** 	return modbus_confirmation (req, rsp,req_length, nb*2 + 5); 
 2510              		.loc 1 586 0 is_stmt 1
 2511 0158 D7F82034 		ldr	r3, [r7, #1056]
 2512 015c 9AB2     		uxth	r2, r3
 2513 015e 07F10803 		add	r3, r7, #8
 2514 0162 1B68     		ldr	r3, [r3]
 2515 0164 9BB2     		uxth	r3, r3
 2516 0166 5B00     		lsls	r3, r3, #1
 2517 0168 9BB2     		uxth	r3, r3
 2518 016a 0533     		adds	r3, r3, #5
 2519 016c 9BB2     		uxth	r3, r3
 2520 016e 07F50570 		add	r0, r7, #532
 2521 0172 07F11401 		add	r1, r7, #20
 2522 0176 FFF7FEFF 		bl	modbus_confirmation
 2523 017a 0346     		mov	r3, r0
 2524 017c DBB2     		uxtb	r3, r3
 587:App/STM32F4-Discovery/usart.c **** 
 588:App/STM32F4-Discovery/usart.c **** 
 589:App/STM32F4-Discovery/usart.c **** }
 2525              		.loc 1 589 0
 2526 017e 1846     		mov	r0, r3
 2527 0180 07F58567 		add	r7, r7, #1064
 2528 0184 BD46     		mov	sp, r7
 2529              		@ sp needed
 2530 0186 80BD     		pop	{r7, pc}
 2531              		.cfi_endproc
 2532              	.LFE123:
 2534              		.section	.rodata
 2535 0016 0000     		.align	2
 2536              	.LC3:
 2537 0018 48423A20 		.ascii	"HB: %d\012\012\000"
 2537      25640A0A 
 2537      00
 2538 0021 000000   		.section	.text.motorHeartBeat_task,"ax",%progbits
 2539              		.align	2
 2540              		.global	motorHeartBeat_task
 2541              		.thumb
 2542              		.thumb_func
 2544              	motorHeartBeat_task:
 2545              	.LFB124:
 590:App/STM32F4-Discovery/usart.c **** 
 591:App/STM32F4-Discovery/usart.c **** 
 592:App/STM32F4-Discovery/usart.c **** 
 593:App/STM32F4-Discovery/usart.c **** /*===================================================================================
 594:App/STM32F4-Discovery/usart.c **** =====================================================================================
 595:App/STM32F4-Discovery/usart.c **** ============    		TASKS SECTION			===================== 
 596:App/STM32F4-Discovery/usart.c **** =====================================================================================
 597:App/STM32F4-Discovery/usart.c **** ====================================================================================*/
 598:App/STM32F4-Discovery/usart.c **** void motorHeartBeat_task(void * pvParameters)
 599:App/STM32F4-Discovery/usart.c **** {
 2546              		.loc 1 599 0
 2547              		.cfi_startproc
 2548              		@ args = 0, pretend = 0, frame = 32
 2549              		@ frame_needed = 1, uses_anonymous_args = 0
 2550 0000 80B5     		push	{r7, lr}
 2551              	.LCFI42:
 2552              		.cfi_def_cfa_offset 8
 2553              		.cfi_offset 7, -8
 2554              		.cfi_offset 14, -4
 2555 0002 88B0     		sub	sp, sp, #32
 2556              	.LCFI43:
 2557              		.cfi_def_cfa_offset 40
 2558 0004 00AF     		add	r7, sp, #0
 2559              	.LCFI44:
 2560              		.cfi_def_cfa_register 7
 2561 0006 7860     		str	r0, [r7, #4]
 600:App/STM32F4-Discovery/usart.c **** 	/*! sets speed of motor */
 601:App/STM32F4-Discovery/usart.c **** 
 602:App/STM32F4-Discovery/usart.c **** 	uint16_t tab_reg[10];
 603:App/STM32F4-Discovery/usart.c **** //	portTickType xLastWakeTime; 
 604:App/STM32F4-Discovery/usart.c **** //	xLastWakeTime = xTaskGetTickCount();
 605:App/STM32F4-Discovery/usart.c **** 	//vTaskDelay(portMAX_DELAY);	
 606:App/STM32F4-Discovery/usart.c **** 	//vTaskSuspend(NULL); 
 607:App/STM32F4-Discovery/usart.c **** 	int counter = 0;	
 2562              		.loc 1 607 0
 2563 0008 0023     		movs	r3, #0
 2564 000a FB61     		str	r3, [r7, #28]
 2565              	.L75:
 608:App/STM32F4-Discovery/usart.c **** 	for(;;)
 609:App/STM32F4-Discovery/usart.c **** 	{
 610:App/STM32F4-Discovery/usart.c **** 		#ifdef DEBUG
 611:App/STM32F4-Discovery/usart.c **** 		t_printf("HB: %d\n\n", counter);
 2566              		.loc 1 611 0 discriminator 1
 2567 000c 0948     		ldr	r0, .L76
 2568 000e F969     		ldr	r1, [r7, #28]
 2569 0010 FFF7FEFF 		bl	t_printf
 612:App/STM32F4-Discovery/usart.c **** 		#endif
 613:App/STM32F4-Discovery/usart.c **** 		modbus_RR(0,10,tab_reg);
 2570              		.loc 1 613 0 discriminator 1
 2571 0014 07F10803 		add	r3, r7, #8
 2572 0018 0020     		movs	r0, #0
 2573 001a 0A21     		movs	r1, #10
 2574 001c 1A46     		mov	r2, r3
 2575 001e FFF7FEFF 		bl	modbus_RR
 614:App/STM32F4-Discovery/usart.c **** 		counter ++;
 2576              		.loc 1 614 0 discriminator 1
 2577 0022 FB69     		ldr	r3, [r7, #28]
 2578 0024 0133     		adds	r3, r3, #1
 2579 0026 FB61     		str	r3, [r7, #28]
 615:App/STM32F4-Discovery/usart.c **** 	//	vTaskDelayUntil(&xLastWakeTime, 3000/portTICK_RATE_MS);
 616:App/STM32F4-Discovery/usart.c **** 		vTaskDelay(3000/portTICK_RATE_MS);
 2580              		.loc 1 616 0 discriminator 1
 2581 0028 40F6B830 		movw	r0, #3000
 2582 002c FFF7FEFF 		bl	vTaskDelay
 617:App/STM32F4-Discovery/usart.c **** 
 618:App/STM32F4-Discovery/usart.c **** 	}
 2583              		.loc 1 618 0 discriminator 1
 2584 0030 ECE7     		b	.L75
 2585              	.L77:
 2586 0032 00BF     		.align	2
 2587              	.L76:
 2588 0034 18000000 		.word	.LC3
 2589              		.cfi_endproc
 2590              	.LFE124:
 2592              		.section	.text.motorControl_task,"ax",%progbits
 2593              		.align	2
 2594              		.global	motorControl_task
 2595              		.thumb
 2596              		.thumb_func
 2598              	motorControl_task:
 2599              	.LFB125:
 619:App/STM32F4-Discovery/usart.c **** 	/* Tasks must not attempt to return from their implementing
 620:App/STM32F4-Discovery/usart.c ****         function or otherwise exit.  In newer FreeRTOS port
 621:App/STM32F4-Discovery/usart.c ****         attempting to do so will result in an configASSERT() being
 622:App/STM32F4-Discovery/usart.c ****         called if it is defined.  If it is necessary for a task to
 623:App/STM32F4-Discovery/usart.c ****         exit then have the task call vTaskDelete( NULL ) to ensure
 624:App/STM32F4-Discovery/usart.c ****         its exit is clean. */
 625:App/STM32F4-Discovery/usart.c **** 	closesocket(socket_0);		
 626:App/STM32F4-Discovery/usart.c ****         vTaskDelete( NULL );
 627:App/STM32F4-Discovery/usart.c **** 
 628:App/STM32F4-Discovery/usart.c **** 
 629:App/STM32F4-Discovery/usart.c **** 
 630:App/STM32F4-Discovery/usart.c **** 
 631:App/STM32F4-Discovery/usart.c **** }
 632:App/STM32F4-Discovery/usart.c **** 
 633:App/STM32F4-Discovery/usart.c **** void motorControl_task(void * pvParameters)
 634:App/STM32F4-Discovery/usart.c **** {
 2600              		.loc 1 634 0
 2601              		.cfi_startproc
 2602              		@ args = 0, pretend = 0, frame = 32
 2603              		@ frame_needed = 1, uses_anonymous_args = 0
 2604 0000 80B5     		push	{r7, lr}
 2605              	.LCFI45:
 2606              		.cfi_def_cfa_offset 8
 2607              		.cfi_offset 7, -8
 2608              		.cfi_offset 14, -4
 2609 0002 88B0     		sub	sp, sp, #32
 2610              	.LCFI46:
 2611              		.cfi_def_cfa_offset 40
 2612 0004 00AF     		add	r7, sp, #0
 2613              	.LCFI47:
 2614              		.cfi_def_cfa_register 7
 2615 0006 7860     		str	r0, [r7, #4]
 635:App/STM32F4-Discovery/usart.c **** 	
 636:App/STM32F4-Discovery/usart.c **** 
 637:App/STM32F4-Discovery/usart.c **** 	uint8_t src[4];
 638:App/STM32F4-Discovery/usart.c **** 	uint16_t spd[5]; 
 639:App/STM32F4-Discovery/usart.c **** 	
 640:App/STM32F4-Discovery/usart.c **** 
 641:App/STM32F4-Discovery/usart.c **** //	vTaskSuspend(NULL);	
 642:App/STM32F4-Discovery/usart.c **** 
 643:App/STM32F4-Discovery/usart.c **** 	src[0]=1; src[1]=1; src[2]=1; src[3]=1;
 2616              		.loc 1 643 0
 2617 0008 0123     		movs	r3, #1
 2618 000a 3B75     		strb	r3, [r7, #20]
 2619 000c 0123     		movs	r3, #1
 2620 000e 7B75     		strb	r3, [r7, #21]
 2621 0010 0123     		movs	r3, #1
 2622 0012 BB75     		strb	r3, [r7, #22]
 2623 0014 0123     		movs	r3, #1
 2624 0016 FB75     		strb	r3, [r7, #23]
 644:App/STM32F4-Discovery/usart.c **** 	
 645:App/STM32F4-Discovery/usart.c **** //	spd[0]=1500;spd[1]=0;spd[2]=2250;spd[3]=10;spd[4]=10;
 646:App/STM32F4-Discovery/usart.c **** 	
 647:App/STM32F4-Discovery/usart.c **** 	// create usart semaphore 
 648:App/STM32F4-Discovery/usart.c **** 	xSmphrUSART = xSemaphoreCreateBinary();	
 2625              		.loc 1 648 0
 2626 0018 0120     		movs	r0, #1
 2627 001a 0021     		movs	r1, #0
 2628 001c 0322     		movs	r2, #3
 2629 001e FFF7FEFF 		bl	xQueueGenericCreate
 2630 0022 0246     		mov	r2, r0
 2631 0024 954B     		ldr	r3, .L93
 2632 0026 1A60     		str	r2, [r3]
 649:App/STM32F4-Discovery/usart.c **** 	
 650:App/STM32F4-Discovery/usart.c **** 	portTickType xDelay = portMAX_DELAY;//3000 / portTICK_RATE_MS;	
 2633              		.loc 1 650 0
 2634 0028 4FF0FF33 		mov	r3, #-1
 2635 002c FB61     		str	r3, [r7, #28]
 651:App/STM32F4-Discovery/usart.c **** 	
 652:App/STM32F4-Discovery/usart.c **** 
 653:App/STM32F4-Discovery/usart.c **** 	static	QueueTelegram telegramR, telegramS; 
 654:App/STM32F4-Discovery/usart.c **** 
 655:App/STM32F4-Discovery/usart.c **** 	telegramR.data[0] = 1000;
 2636              		.loc 1 655 0
 2637 002e 944B     		ldr	r3, .L93+4
 2638 0030 4FF47A72 		mov	r2, #1000
 2639 0034 1A81     		strh	r2, [r3, #8]	@ movhi
 656:App/STM32F4-Discovery/usart.c **** 	telegramR.data[1] = 0;	
 2640              		.loc 1 656 0
 2641 0036 924B     		ldr	r3, .L93+4
 2642 0038 0022     		movs	r2, #0
 2643 003a 5A81     		strh	r2, [r3, #10]	@ movhi
 657:App/STM32F4-Discovery/usart.c **** 	telegramR.data[2] = 2250;
 2644              		.loc 1 657 0
 2645 003c 904B     		ldr	r3, .L93+4
 2646 003e 40F6CA02 		movw	r2, #2250
 2647 0042 9A81     		strh	r2, [r3, #12]	@ movhi
 658:App/STM32F4-Discovery/usart.c **** 	telegramR.data[3] = 10;	
 2648              		.loc 1 658 0
 2649 0044 8E4B     		ldr	r3, .L93+4
 2650 0046 0A22     		movs	r2, #10
 2651 0048 DA81     		strh	r2, [r3, #14]	@ movhi
 659:App/STM32F4-Discovery/usart.c **** 	telegramR.data[4] = 10;	
 2652              		.loc 1 659 0
 2653 004a 8D4B     		ldr	r3, .L93+4
 2654 004c 0A22     		movs	r2, #10
 2655 004e 1A82     		strh	r2, [r3, #16]	@ movhi
 660:App/STM32F4-Discovery/usart.c **** 	telegramR.size = 5;
 2656              		.loc 1 660 0
 2657 0050 8B4B     		ldr	r3, .L93+4
 2658 0052 0522     		movs	r2, #5
 2659 0054 5A60     		str	r2, [r3, #4]
 661:App/STM32F4-Discovery/usart.c **** 	telegramR.Qcmd = SETDATA;	
 2660              		.loc 1 661 0
 2661 0056 8A4B     		ldr	r3, .L93+4
 2662 0058 0022     		movs	r2, #0
 2663 005a 1A70     		strb	r2, [r3]
 662:App/STM32F4-Discovery/usart.c **** 
 663:App/STM32F4-Discovery/usart.c **** 	
 664:App/STM32F4-Discovery/usart.c **** 
 665:App/STM32F4-Discovery/usart.c **** 	int HB_flag = 0;
 2664              		.loc 1 665 0
 2665 005c 0023     		movs	r3, #0
 2666 005e BB61     		str	r3, [r7, #24]
 2667              	.L92:
 666:App/STM32F4-Discovery/usart.c **** 	
 667:App/STM32F4-Discovery/usart.c **** 	while (1)
 668:App/STM32F4-Discovery/usart.c **** 	{
 669:App/STM32F4-Discovery/usart.c **** 
 670:App/STM32F4-Discovery/usart.c **** 		
 671:App/STM32F4-Discovery/usart.c **** 	
 672:App/STM32F4-Discovery/usart.c **** 		if (xQueueReceive(QSpd_handle, (void *)&telegramR, xDelay  ) == pdPASS)
 2668              		.loc 1 672 0
 2669 0060 884B     		ldr	r3, .L93+8
 2670 0062 1B68     		ldr	r3, [r3]
 2671 0064 1846     		mov	r0, r3
 2672 0066 8649     		ldr	r1, .L93+4
 2673 0068 FA69     		ldr	r2, [r7, #28]
 2674 006a 0023     		movs	r3, #0
 2675 006c FFF7FEFF 		bl	xQueueGenericReceive
 2676 0070 0346     		mov	r3, r0
 2677 0072 012B     		cmp	r3, #1
 2678 0074 40F00081 		bne	.L79
 673:App/STM32F4-Discovery/usart.c **** 		{
 674:App/STM32F4-Discovery/usart.c **** 			switch ( telegramR.Qcmd )
 2679              		.loc 1 674 0
 2680 0078 814B     		ldr	r3, .L93+4
 2681 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2682 007c 052B     		cmp	r3, #5
 2683 007e 00F2EF80 		bhi	.L80
 2684 0082 01A2     		adr	r2, .L82
 2685 0084 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2686              		.p2align 2
 2687              	.L82:
 2688 0088 A1000000 		.word	.L81+1
 2689 008c 2D010000 		.word	.L83+1
 2690 0090 61020000 		.word	.L80+1
 2691 0094 61020000 		.word	.L80+1
 2692 0098 75010000 		.word	.L84+1
 2693 009c 05020000 		.word	.L85+1
 2694              		.p2align 1
 2695              	.L81:
 675:App/STM32F4-Discovery/usart.c **** 			{
 676:App/STM32F4-Discovery/usart.c **** 				case SETDATA:
 677:App/STM32F4-Discovery/usart.c **** 
 678:App/STM32F4-Discovery/usart.c **** 					src[0]=1; src[1]=1; src[2]=1; src[3]=1;
 2696              		.loc 1 678 0
 2697 00a0 0123     		movs	r3, #1
 2698 00a2 3B75     		strb	r3, [r7, #20]
 2699 00a4 0123     		movs	r3, #1
 2700 00a6 7B75     		strb	r3, [r7, #21]
 2701 00a8 0123     		movs	r3, #1
 2702 00aa BB75     		strb	r3, [r7, #22]
 2703 00ac 0123     		movs	r3, #1
 2704 00ae FB75     		strb	r3, [r7, #23]
 679:App/STM32F4-Discovery/usart.c **** 
 680:App/STM32F4-Discovery/usart.c **** 					if ( !modbus_WIB( 0 , 3, src))
 2705              		.loc 1 680 0
 2706 00b0 07F11403 		add	r3, r7, #20
 2707 00b4 0020     		movs	r0, #0
 2708 00b6 0321     		movs	r1, #3
 2709 00b8 1A46     		mov	r2, r3
 2710 00ba FFF7FEFF 		bl	modbus_WIB
 2711 00be 0346     		mov	r3, r0
 2712 00c0 002B     		cmp	r3, #0
 2713 00c2 0BD1     		bne	.L86
 681:App/STM32F4-Discovery/usart.c **** 					{
 682:App/STM32F4-Discovery/usart.c **** 							// send response to CLI 
 683:App/STM32F4-Discovery/usart.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2714              		.loc 1 683 0
 2715 00c4 704B     		ldr	r3, .L93+12
 2716 00c6 0722     		movs	r2, #7
 2717 00c8 1A70     		strb	r2, [r3]
 684:App/STM32F4-Discovery/usart.c **** 						xQueueSend(QSpd_handle, &telegramS, xDelay);
 2718              		.loc 1 684 0
 2719 00ca 6E4B     		ldr	r3, .L93+8
 2720 00cc 1B68     		ldr	r3, [r3]
 2721 00ce 1846     		mov	r0, r3
 2722 00d0 6D49     		ldr	r1, .L93+12
 2723 00d2 FA69     		ldr	r2, [r7, #28]
 2724 00d4 0023     		movs	r3, #0
 2725 00d6 FFF7FEFF 		bl	xQueueGenericSend
 685:App/STM32F4-Discovery/usart.c **** 						break;
 2726              		.loc 1 685 0
 2727 00da CDE0     		b	.L79
 2728              	.L86:
 686:App/STM32F4-Discovery/usart.c **** 					}
 687:App/STM32F4-Discovery/usart.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2729              		.loc 1 687 0
 2730 00dc 4FF47A70 		mov	r0, #1000
 2731 00e0 FFF7FEFF 		bl	vTaskDelay
 688:App/STM32F4-Discovery/usart.c **** 					
 689:App/STM32F4-Discovery/usart.c **** 					if (!modbus_WR(0, 5, telegramR.data))
 2732              		.loc 1 689 0
 2733 00e4 0020     		movs	r0, #0
 2734 00e6 0521     		movs	r1, #5
 2735 00e8 684A     		ldr	r2, .L93+16
 2736 00ea FFF7FEFF 		bl	modbus_WR
 2737 00ee 0346     		mov	r3, r0
 2738 00f0 002B     		cmp	r3, #0
 2739 00f2 0BD1     		bne	.L87
 690:App/STM32F4-Discovery/usart.c **** 					{
 691:App/STM32F4-Discovery/usart.c **** 							// send response to CLI 
 692:App/STM32F4-Discovery/usart.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2740              		.loc 1 692 0
 2741 00f4 644B     		ldr	r3, .L93+12
 2742 00f6 0722     		movs	r2, #7
 2743 00f8 1A70     		strb	r2, [r3]
 693:App/STM32F4-Discovery/usart.c **** 						xQueueSend(QSpd_handle, &telegramS, xDelay);
 2744              		.loc 1 693 0
 2745 00fa 624B     		ldr	r3, .L93+8
 2746 00fc 1B68     		ldr	r3, [r3]
 2747 00fe 1846     		mov	r0, r3
 2748 0100 6149     		ldr	r1, .L93+12
 2749 0102 FA69     		ldr	r2, [r7, #28]
 2750 0104 0023     		movs	r3, #0
 2751 0106 FFF7FEFF 		bl	xQueueGenericSend
 694:App/STM32F4-Discovery/usart.c **** 						break;
 2752              		.loc 1 694 0
 2753 010a B5E0     		b	.L79
 2754              	.L87:
 695:App/STM32F4-Discovery/usart.c **** 					}
 696:App/STM32F4-Discovery/usart.c **** 
 697:App/STM32F4-Discovery/usart.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2755              		.loc 1 697 0
 2756 010c 4FF47A70 		mov	r0, #1000
 2757 0110 FFF7FEFF 		bl	vTaskDelay
 698:App/STM32F4-Discovery/usart.c **** 
 699:App/STM32F4-Discovery/usart.c **** 				// send response to CLI 
 700:App/STM32F4-Discovery/usart.c **** 					telegramS.Qcmd = SUCCSESS;
 2758              		.loc 1 700 0
 2759 0114 5C4B     		ldr	r3, .L93+12
 2760 0116 0622     		movs	r2, #6
 2761 0118 1A70     		strb	r2, [r3]
 701:App/STM32F4-Discovery/usart.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2762              		.loc 1 701 0
 2763 011a 5A4B     		ldr	r3, .L93+8
 2764 011c 1B68     		ldr	r3, [r3]
 2765 011e 1846     		mov	r0, r3
 2766 0120 5949     		ldr	r1, .L93+12
 2767 0122 FA69     		ldr	r2, [r7, #28]
 2768 0124 0023     		movs	r3, #0
 2769 0126 FFF7FEFF 		bl	xQueueGenericSend
 702:App/STM32F4-Discovery/usart.c **** 
 703:App/STM32F4-Discovery/usart.c **** 					break;
 2770              		.loc 1 703 0
 2771 012a A5E0     		b	.L79
 2772              	.L83:
 704:App/STM32F4-Discovery/usart.c **** 				       	
 705:App/STM32F4-Discovery/usart.c **** 				
 706:App/STM32F4-Discovery/usart.c **** 				case GETDATA:
 707:App/STM32F4-Discovery/usart.c **** 				
 708:App/STM32F4-Discovery/usart.c **** 					if ( !modbus_RR(0, 10, telegramS.data))
 2773              		.loc 1 708 0
 2774 012c 0020     		movs	r0, #0
 2775 012e 0A21     		movs	r1, #10
 2776 0130 574A     		ldr	r2, .L93+20
 2777 0132 FFF7FEFF 		bl	modbus_RR
 2778 0136 0346     		mov	r3, r0
 2779 0138 002B     		cmp	r3, #0
 2780 013a 0BD1     		bne	.L88
 709:App/STM32F4-Discovery/usart.c **** 					{
 710:App/STM32F4-Discovery/usart.c **** 							// send response to CLI 
 711:App/STM32F4-Discovery/usart.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2781              		.loc 1 711 0
 2782 013c 524B     		ldr	r3, .L93+12
 2783 013e 0722     		movs	r2, #7
 2784 0140 1A70     		strb	r2, [r3]
 712:App/STM32F4-Discovery/usart.c **** 						xQueueSend(QSpd_handle, &telegramS, xDelay);
 2785              		.loc 1 712 0
 2786 0142 504B     		ldr	r3, .L93+8
 2787 0144 1B68     		ldr	r3, [r3]
 2788 0146 1846     		mov	r0, r3
 2789 0148 4F49     		ldr	r1, .L93+12
 2790 014a FA69     		ldr	r2, [r7, #28]
 2791 014c 0023     		movs	r3, #0
 2792 014e FFF7FEFF 		bl	xQueueGenericSend
 713:App/STM32F4-Discovery/usart.c **** 						break;
 2793              		.loc 1 713 0
 2794 0152 91E0     		b	.L79
 2795              	.L88:
 714:App/STM32F4-Discovery/usart.c **** 					}
 715:App/STM32F4-Discovery/usart.c **** 
 716:App/STM32F4-Discovery/usart.c **** 				
 717:App/STM32F4-Discovery/usart.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2796              		.loc 1 717 0
 2797 0154 4FF47A70 		mov	r0, #1000
 2798 0158 FFF7FEFF 		bl	vTaskDelay
 718:App/STM32F4-Discovery/usart.c **** 
 719:App/STM32F4-Discovery/usart.c **** 					// send response to CLI 
 720:App/STM32F4-Discovery/usart.c **** 					telegramS.Qcmd = SUCCSESS;
 2799              		.loc 1 720 0
 2800 015c 4A4B     		ldr	r3, .L93+12
 2801 015e 0622     		movs	r2, #6
 2802 0160 1A70     		strb	r2, [r3]
 721:App/STM32F4-Discovery/usart.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2803              		.loc 1 721 0
 2804 0162 484B     		ldr	r3, .L93+8
 2805 0164 1B68     		ldr	r3, [r3]
 2806 0166 1846     		mov	r0, r3
 2807 0168 4749     		ldr	r1, .L93+12
 2808 016a FA69     		ldr	r2, [r7, #28]
 2809 016c 0023     		movs	r3, #0
 2810 016e FFF7FEFF 		bl	xQueueGenericSend
 722:App/STM32F4-Discovery/usart.c **** 
 723:App/STM32F4-Discovery/usart.c **** 					break;
 2811              		.loc 1 723 0
 2812 0172 81E0     		b	.L79
 2813              	.L84:
 724:App/STM32F4-Discovery/usart.c **** 
 725:App/STM32F4-Discovery/usart.c **** 				
 726:App/STM32F4-Discovery/usart.c **** 				case START: 
 727:App/STM32F4-Discovery/usart.c **** 					HB_flag = 1; 
 2814              		.loc 1 727 0
 2815 0174 0123     		movs	r3, #1
 2816 0176 BB61     		str	r3, [r7, #24]
 728:App/STM32F4-Discovery/usart.c **** 				//	vTaskResume(motorHeartBeatHandle);
 729:App/STM32F4-Discovery/usart.c **** 
 730:App/STM32F4-Discovery/usart.c **** 					// set motor speed to 10% 
 731:App/STM32F4-Discovery/usart.c **** 				         src[0]=1; src[1]=1; src[2]=1; src[3]=1;
 2817              		.loc 1 731 0
 2818 0178 0123     		movs	r3, #1
 2819 017a 3B75     		strb	r3, [r7, #20]
 2820 017c 0123     		movs	r3, #1
 2821 017e 7B75     		strb	r3, [r7, #21]
 2822 0180 0123     		movs	r3, #1
 2823 0182 BB75     		strb	r3, [r7, #22]
 2824 0184 0123     		movs	r3, #1
 2825 0186 FB75     		strb	r3, [r7, #23]
 732:App/STM32F4-Discovery/usart.c **** 
 733:App/STM32F4-Discovery/usart.c **** 					if( !modbus_WIB( 0 , 3, src) )
 2826              		.loc 1 733 0
 2827 0188 07F11403 		add	r3, r7, #20
 2828 018c 0020     		movs	r0, #0
 2829 018e 0321     		movs	r1, #3
 2830 0190 1A46     		mov	r2, r3
 2831 0192 FFF7FEFF 		bl	modbus_WIB
 2832 0196 0346     		mov	r3, r0
 2833 0198 002B     		cmp	r3, #0
 2834 019a 0BD1     		bne	.L89
 734:App/STM32F4-Discovery/usart.c **** 					{
 735:App/STM32F4-Discovery/usart.c **** 							// send response to CLI 
 736:App/STM32F4-Discovery/usart.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2835              		.loc 1 736 0
 2836 019c 3A4B     		ldr	r3, .L93+12
 2837 019e 0722     		movs	r2, #7
 2838 01a0 1A70     		strb	r2, [r3]
 737:App/STM32F4-Discovery/usart.c **** 						xQueueSend(QSpd_handle, &telegramS, xDelay);
 2839              		.loc 1 737 0
 2840 01a2 384B     		ldr	r3, .L93+8
 2841 01a4 1B68     		ldr	r3, [r3]
 2842 01a6 1846     		mov	r0, r3
 2843 01a8 3749     		ldr	r1, .L93+12
 2844 01aa FA69     		ldr	r2, [r7, #28]
 2845 01ac 0023     		movs	r3, #0
 2846 01ae FFF7FEFF 		bl	xQueueGenericSend
 738:App/STM32F4-Discovery/usart.c **** 						break;
 2847              		.loc 1 738 0
 2848 01b2 61E0     		b	.L79
 2849              	.L89:
 739:App/STM32F4-Discovery/usart.c **** 					}
 740:App/STM32F4-Discovery/usart.c **** 
 741:App/STM32F4-Discovery/usart.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2850              		.loc 1 741 0
 2851 01b4 4FF47A70 		mov	r0, #1000
 2852 01b8 FFF7FEFF 		bl	vTaskDelay
 742:App/STM32F4-Discovery/usart.c **** 					if (!modbus_WR( 0, 5, telegramR.data))
 2853              		.loc 1 742 0
 2854 01bc 0020     		movs	r0, #0
 2855 01be 0521     		movs	r1, #5
 2856 01c0 324A     		ldr	r2, .L93+16
 2857 01c2 FFF7FEFF 		bl	modbus_WR
 2858 01c6 0346     		mov	r3, r0
 2859 01c8 002B     		cmp	r3, #0
 2860 01ca 0BD1     		bne	.L90
 743:App/STM32F4-Discovery/usart.c **** 					{
 744:App/STM32F4-Discovery/usart.c **** 							// send response to CLI 
 745:App/STM32F4-Discovery/usart.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2861              		.loc 1 745 0
 2862 01cc 2E4B     		ldr	r3, .L93+12
 2863 01ce 0722     		movs	r2, #7
 2864 01d0 1A70     		strb	r2, [r3]
 746:App/STM32F4-Discovery/usart.c **** 						xQueueSend(QSpd_handle, &telegramS, xDelay);
 2865              		.loc 1 746 0
 2866 01d2 2C4B     		ldr	r3, .L93+8
 2867 01d4 1B68     		ldr	r3, [r3]
 2868 01d6 1846     		mov	r0, r3
 2869 01d8 2B49     		ldr	r1, .L93+12
 2870 01da FA69     		ldr	r2, [r7, #28]
 2871 01dc 0023     		movs	r3, #0
 2872 01de FFF7FEFF 		bl	xQueueGenericSend
 747:App/STM32F4-Discovery/usart.c **** 						break;
 2873              		.loc 1 747 0
 2874 01e2 49E0     		b	.L79
 2875              	.L90:
 748:App/STM32F4-Discovery/usart.c **** 					}
 749:App/STM32F4-Discovery/usart.c **** 
 750:App/STM32F4-Discovery/usart.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2876              		.loc 1 750 0
 2877 01e4 4FF47A70 		mov	r0, #1000
 2878 01e8 FFF7FEFF 		bl	vTaskDelay
 751:App/STM32F4-Discovery/usart.c **** 			
 752:App/STM32F4-Discovery/usart.c **** 					// send response to CLI 
 753:App/STM32F4-Discovery/usart.c **** 					telegramS.Qcmd = SUCCSESS;
 2879              		.loc 1 753 0
 2880 01ec 264B     		ldr	r3, .L93+12
 2881 01ee 0622     		movs	r2, #6
 2882 01f0 1A70     		strb	r2, [r3]
 754:App/STM32F4-Discovery/usart.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2883              		.loc 1 754 0
 2884 01f2 244B     		ldr	r3, .L93+8
 2885 01f4 1B68     		ldr	r3, [r3]
 2886 01f6 1846     		mov	r0, r3
 2887 01f8 2349     		ldr	r1, .L93+12
 2888 01fa FA69     		ldr	r2, [r7, #28]
 2889 01fc 0023     		movs	r3, #0
 2890 01fe FFF7FEFF 		bl	xQueueGenericSend
 755:App/STM32F4-Discovery/usart.c **** 
 756:App/STM32F4-Discovery/usart.c **** 					break;
 2891              		.loc 1 756 0
 2892 0202 39E0     		b	.L79
 2893              	.L85:
 757:App/STM32F4-Discovery/usart.c **** 				
 758:App/STM32F4-Discovery/usart.c **** 				case STOP:
 759:App/STM32F4-Discovery/usart.c **** 					
 760:App/STM32F4-Discovery/usart.c **** 				//	vTaskSuspend (motorHeartBeatHandle);	
 761:App/STM32F4-Discovery/usart.c **** 					// send stop bits to motor 
 762:App/STM32F4-Discovery/usart.c **** 					src[0]=0; src[1]=1; src[2]=1; src[3]=1;
 2894              		.loc 1 762 0
 2895 0204 0023     		movs	r3, #0
 2896 0206 3B75     		strb	r3, [r7, #20]
 2897 0208 0123     		movs	r3, #1
 2898 020a 7B75     		strb	r3, [r7, #21]
 2899 020c 0123     		movs	r3, #1
 2900 020e BB75     		strb	r3, [r7, #22]
 2901 0210 0123     		movs	r3, #1
 2902 0212 FB75     		strb	r3, [r7, #23]
 763:App/STM32F4-Discovery/usart.c **** 
 764:App/STM32F4-Discovery/usart.c **** 					if (!modbus_WIB( 0 , 3, src)) 
 2903              		.loc 1 764 0
 2904 0214 07F11403 		add	r3, r7, #20
 2905 0218 0020     		movs	r0, #0
 2906 021a 0321     		movs	r1, #3
 2907 021c 1A46     		mov	r2, r3
 2908 021e FFF7FEFF 		bl	modbus_WIB
 2909 0222 0346     		mov	r3, r0
 2910 0224 002B     		cmp	r3, #0
 2911 0226 0BD1     		bne	.L91
 765:App/STM32F4-Discovery/usart.c **** 					{
 766:App/STM32F4-Discovery/usart.c **** 							// send response to CLI 
 767:App/STM32F4-Discovery/usart.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2912              		.loc 1 767 0
 2913 0228 174B     		ldr	r3, .L93+12
 2914 022a 0722     		movs	r2, #7
 2915 022c 1A70     		strb	r2, [r3]
 768:App/STM32F4-Discovery/usart.c **** 						xQueueSend(QSpd_handle, &telegramS, xDelay);
 2916              		.loc 1 768 0
 2917 022e 154B     		ldr	r3, .L93+8
 2918 0230 1B68     		ldr	r3, [r3]
 2919 0232 1846     		mov	r0, r3
 2920 0234 1449     		ldr	r1, .L93+12
 2921 0236 FA69     		ldr	r2, [r7, #28]
 2922 0238 0023     		movs	r3, #0
 2923 023a FFF7FEFF 		bl	xQueueGenericSend
 769:App/STM32F4-Discovery/usart.c **** 						break;
 2924              		.loc 1 769 0
 2925 023e 1BE0     		b	.L79
 2926              	.L91:
 770:App/STM32F4-Discovery/usart.c **** 					}
 771:App/STM32F4-Discovery/usart.c **** 
 772:App/STM32F4-Discovery/usart.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2927              		.loc 1 772 0
 2928 0240 4FF47A70 		mov	r0, #1000
 2929 0244 FFF7FEFF 		bl	vTaskDelay
 773:App/STM32F4-Discovery/usart.c **** 
 774:App/STM32F4-Discovery/usart.c **** 
 775:App/STM32F4-Discovery/usart.c **** 								// send response to CLI 
 776:App/STM32F4-Discovery/usart.c **** 					telegramS.Qcmd = SUCCSESS;
 2930              		.loc 1 776 0
 2931 0248 0F4B     		ldr	r3, .L93+12
 2932 024a 0622     		movs	r2, #6
 2933 024c 1A70     		strb	r2, [r3]
 777:App/STM32F4-Discovery/usart.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2934              		.loc 1 777 0
 2935 024e 0D4B     		ldr	r3, .L93+8
 2936 0250 1B68     		ldr	r3, [r3]
 2937 0252 1846     		mov	r0, r3
 2938 0254 0C49     		ldr	r1, .L93+12
 2939 0256 FA69     		ldr	r2, [r7, #28]
 2940 0258 0023     		movs	r3, #0
 2941 025a FFF7FEFF 		bl	xQueueGenericSend
 778:App/STM32F4-Discovery/usart.c **** 
 779:App/STM32F4-Discovery/usart.c **** 					break; 
 2942              		.loc 1 779 0
 2943 025e 0BE0     		b	.L79
 2944              	.L80:
 780:App/STM32F4-Discovery/usart.c **** 
 781:App/STM32F4-Discovery/usart.c **** 				default:
 782:App/STM32F4-Discovery/usart.c **** 
 783:App/STM32F4-Discovery/usart.c **** 					telegramS.Qcmd = ERROR_MODBUS;
 2945              		.loc 1 783 0
 2946 0260 094B     		ldr	r3, .L93+12
 2947 0262 0722     		movs	r2, #7
 2948 0264 1A70     		strb	r2, [r3]
 784:App/STM32F4-Discovery/usart.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2949              		.loc 1 784 0
 2950 0266 074B     		ldr	r3, .L93+8
 2951 0268 1B68     		ldr	r3, [r3]
 2952 026a 1846     		mov	r0, r3
 2953 026c 0649     		ldr	r1, .L93+12
 2954 026e FA69     		ldr	r2, [r7, #28]
 2955 0270 0023     		movs	r3, #0
 2956 0272 FFF7FEFF 		bl	xQueueGenericSend
 785:App/STM32F4-Discovery/usart.c **** 					break;
 2957              		.loc 1 785 0
 2958 0276 00BF     		nop
 2959              	.L79:
 786:App/STM32F4-Discovery/usart.c **** 
 787:App/STM32F4-Discovery/usart.c **** 					
 788:App/STM32F4-Discovery/usart.c **** 
 789:App/STM32F4-Discovery/usart.c **** 
 790:App/STM32F4-Discovery/usart.c **** 					
 791:App/STM32F4-Discovery/usart.c **** 			}
 792:App/STM32F4-Discovery/usart.c **** 		}
 793:App/STM32F4-Discovery/usart.c **** 	
 794:App/STM32F4-Discovery/usart.c **** 		
 795:App/STM32F4-Discovery/usart.c **** 	
 796:App/STM32F4-Discovery/usart.c **** 	}
 2960              		.loc 1 796 0
 2961 0278 F2E6     		b	.L92
 2962              	.L94:
 2963 027a 00BF     		.align	2
 2964              	.L93:
 2965 027c 00000000 		.word	xSmphrUSART
 2966 0280 00000000 		.word	telegramR.9371
 2967 0284 00000000 		.word	QSpd_handle
 2968 0288 00000000 		.word	telegramS.9372
 2969 028c 08000000 		.word	telegramR.9371+8
 2970 0290 08000000 		.word	telegramS.9372+8
 2971              		.cfi_endproc
 2972              	.LFE125:
 2974              		.section	.bss.cnt.9251,"aw",%nobits
 2977              	cnt.9251:
 2978 0000 00       		.space	1
 2979              		.section	.bss.telegramR.9371,"aw",%nobits
 2980              		.align	2
 2983              	telegramR.9371:
 2984 0000 00000000 		.space	28
 2984      00000000 
 2984      00000000 
 2984      00000000 
 2984      00000000 
 2985              		.section	.bss.telegramS.9372,"aw",%nobits
 2986              		.align	2
 2989              	telegramS.9372:
 2990 0000 00000000 		.space	28
 2990      00000000 
 2990      00000000 
 2990      00000000 
 2990      00000000 
 2991              		.text
 2992              	.Letext0:
 2993              		.file 2 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/lib/gcc/arm-none-eabi/4.8.4/include/std
 2994              		.file 3 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/machine/_default_
 2995              		.file 4 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/stdint.h"
 2996              		.file 5 "App/STM32F4-Discovery/Libraries/CMSIS/ST/STM32F4xx/Include/stm32f4xx.h"
 2997              		.file 6 "App/STM32F4-Discovery/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h"
 2998              		.file 7 "App/STM32F4-Discovery/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_gpio.h"
 2999              		.file 8 "App/STM32F4-Discovery/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
 3000              		.file 9 "App/STM32F4-Discovery/Libraries/STM32F4xx_StdPeriph_Driver/inc/misc.h"
 3001              		.file 10 "Source/portable/GCC/ARM_CM4F/portmacro.h"
 3002              		.file 11 "Source/include/task.h"
 3003              		.file 12 "Source/include/queue.h"
 3004              		.file 13 "Source/include/semphr.h"
 3005              		.file 14 "App/STM32F4-Discovery/main.h"
 3006              		.file 15 "App/STM32F4-Discovery/usart.h"
 3007              		.file 16 "App/STM32F4-Discovery/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
                            *COM*:0000000000000004 xSemaphoreDMASPI
                            *COM*:0000000000000004 xSmphrUSART
                            *COM*:0000000000000004 motorHeartBeatHandle
                            *COM*:0000000000000004 motorHBHandle
                            *COM*:0000000000000004 QSpd_handle
                            *COM*:0000000000000004 QTCP_handle
                            *COM*:0000000000000004 socket_0
                            *COM*:00000000000007d0 bufferTX
                            *COM*:00000000000007d0 bufferRX
                            *COM*:0000000000000004 bufferRXidx
                            *COM*:0000000000000004 bufferTXidx
                            *COM*:0000000000000004 dat_lengthRX
                            *COM*:0000000000000004 dat_lengthTX
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:33     .rodata.table_crc_hi:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:36     .rodata.table_crc_hi:0000000000000000 table_crc_hi
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:294    .rodata.table_crc_lo:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:297    .rodata.table_crc_lo:0000000000000000 table_crc_lo
                            *COM*:0000000000000004 fd
                            *COM*:0000000000000201 received_string
                            *COM*:0000000000000004 rx_length
                            *COM*:0000000000000014 input_Register
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:559    .text.init_USARTx:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:564    .text.init_USARTx:0000000000000000 init_USARTx
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:862    .text.init_USARTx:0000000000000220 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:874    .text.DMA2_Stream1_IRQHandler:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:879    .text.DMA2_Stream1_IRQHandler:0000000000000000 DMA2_Stream1_IRQHandler
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:953    .text.DMA2_Stream1_IRQHandler:0000000000000068 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:962    .text.DMA2_Stream6_IRQHandler:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:967    .text.DMA2_Stream6_IRQHandler:0000000000000000 DMA2_Stream6_IRQHandler
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:1041   .text.DMA2_Stream6_IRQHandler:0000000000000068 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:1050   .text.usart_dma_send:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:1055   .text.usart_dma_send:0000000000000000 usart_dma_send
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:1116   .text.usart_dma_send:0000000000000054 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:1124   .text.USART_puts:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:1129   .text.USART_puts:0000000000000000 USART_puts
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:1196   .text.USART_puts:000000000000004c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:1201   .text.USART6_IRQHandler:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:1206   .text.USART6_IRQHandler:0000000000000000 USART6_IRQHandler
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:1310   .text.USART6_IRQHandler:0000000000000090 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:2977   .bss.cnt.9251:0000000000000000 cnt.9251
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:1320   .text.crc16:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:1325   .text.crc16:0000000000000000 crc16
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:1403   .text.crc16:0000000000000064 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:1409   .rodata:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:1413   .text.modbus_confirmation:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:1418   .text.modbus_confirmation:0000000000000000 modbus_confirmation
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:1491   .text.modbus_confirmation:0000000000000060 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:1503   .text.write_read_modbus:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:1508   .text.write_read_modbus:0000000000000000 write_read_modbus
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:1637   .text.write_read_modbus:00000000000000c0 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:1647   .text.modbus_RIB:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:1652   .text.modbus_RIB:0000000000000000 modbus_RIB
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:1771   .text.modbus_WIB:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:1776   .text.modbus_WIB:0000000000000000 modbus_WIB
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:2025   .text.modbus_WR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:2030   .text.modbus_WR:0000000000000000 modbus_WR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:2204   .text.modbus_WSR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:2209   .text.modbus_WSR:0000000000000000 modbus_WSR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:2347   .text.modbus_RR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:2352   .text.modbus_RR:0000000000000000 modbus_RR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:2539   .text.motorHeartBeat_task:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:2544   .text.motorHeartBeat_task:0000000000000000 motorHeartBeat_task
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:2588   .text.motorHeartBeat_task:0000000000000034 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:2593   .text.motorControl_task:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:2598   .text.motorControl_task:0000000000000000 motorControl_task
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:2688   .text.motorControl_task:0000000000000088 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:2694   .text.motorControl_task:00000000000000a0 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:2965   .text.motorControl_task:000000000000027c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:2983   .bss.telegramR.9371:0000000000000000 telegramR.9371
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:2989   .bss.telegramS.9372:0000000000000000 telegramS.9372
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:2978   .bss.cnt.9251:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:2980   .bss.telegramR.9371:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfwXIdR.s:2986   .bss.telegramS.9372:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphClockCmd
RCC_AHB1PeriphClockCmd
GPIO_Init
GPIO_PinAFConfig
USART_Init
USART_ITConfig
NVIC_Init
USART_Cmd
DMA_DeInit
DMA_GetCmdStatus
DMA_StructInit
DMA_Init
DMA_ITConfig
USART_ClearFlag
USART_DMACmd
DMA_GetITStatus
DMA_ClearITPendingBit
DMA_Cmd
vPortEnterCritical
xQueueGenericSendFromISR
vPortExitCritical
xQueueGenericReceive
DMA_SetCurrDataCounter
USART_GetITStatus
USART_ClearITPendingBit
t_printf
vTaskDelay
xQueueGenericCreate
xQueueGenericSend
