   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"tcpCLI.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	xSemaphoreDMASPI,4,4
  20              		.comm	xSmphrUSART,4,4
  21              		.comm	motorHeartBeatHandle,4,4
  22              		.comm	motorHBHandle,4,4
  23              		.comm	QSpd_handle,4,4
  24              		.comm	QTCP_handle,4,4
  25              		.comm	socket_0,4,4
  26              		.comm	bufferTX,2000,4
  27              		.comm	bufferRX,2000,4
  28              		.comm	bufferRXidx,4,4
  29              		.comm	bufferTXidx,4,4
  30              		.comm	dat_lengthRX,4,4
  31              		.comm	dat_lengthTX,4,4
  32              		.comm	set_macTaskHandle,4,4
  33              		.section	.rodata.table_crc_hi,"a",%progbits
  34              		.align	2
  37              	table_crc_hi:
  38 0000 00       		.byte	0
  39 0001 C1       		.byte	-63
  40 0002 81       		.byte	-127
  41 0003 40       		.byte	64
  42 0004 01       		.byte	1
  43 0005 C0       		.byte	-64
  44 0006 80       		.byte	-128
  45 0007 41       		.byte	65
  46 0008 01       		.byte	1
  47 0009 C0       		.byte	-64
  48 000a 80       		.byte	-128
  49 000b 41       		.byte	65
  50 000c 00       		.byte	0
  51 000d C1       		.byte	-63
  52 000e 81       		.byte	-127
  53 000f 40       		.byte	64
  54 0010 01       		.byte	1
  55 0011 C0       		.byte	-64
  56 0012 80       		.byte	-128
  57 0013 41       		.byte	65
  58 0014 00       		.byte	0
  59 0015 C1       		.byte	-63
  60 0016 81       		.byte	-127
  61 0017 40       		.byte	64
  62 0018 00       		.byte	0
  63 0019 C1       		.byte	-63
  64 001a 81       		.byte	-127
  65 001b 40       		.byte	64
  66 001c 01       		.byte	1
  67 001d C0       		.byte	-64
  68 001e 80       		.byte	-128
  69 001f 41       		.byte	65
  70 0020 01       		.byte	1
  71 0021 C0       		.byte	-64
  72 0022 80       		.byte	-128
  73 0023 41       		.byte	65
  74 0024 00       		.byte	0
  75 0025 C1       		.byte	-63
  76 0026 81       		.byte	-127
  77 0027 40       		.byte	64
  78 0028 00       		.byte	0
  79 0029 C1       		.byte	-63
  80 002a 81       		.byte	-127
  81 002b 40       		.byte	64
  82 002c 01       		.byte	1
  83 002d C0       		.byte	-64
  84 002e 80       		.byte	-128
  85 002f 41       		.byte	65
  86 0030 00       		.byte	0
  87 0031 C1       		.byte	-63
  88 0032 81       		.byte	-127
  89 0033 40       		.byte	64
  90 0034 01       		.byte	1
  91 0035 C0       		.byte	-64
  92 0036 80       		.byte	-128
  93 0037 41       		.byte	65
  94 0038 01       		.byte	1
  95 0039 C0       		.byte	-64
  96 003a 80       		.byte	-128
  97 003b 41       		.byte	65
  98 003c 00       		.byte	0
  99 003d C1       		.byte	-63
 100 003e 81       		.byte	-127
 101 003f 40       		.byte	64
 102 0040 01       		.byte	1
 103 0041 C0       		.byte	-64
 104 0042 80       		.byte	-128
 105 0043 41       		.byte	65
 106 0044 00       		.byte	0
 107 0045 C1       		.byte	-63
 108 0046 81       		.byte	-127
 109 0047 40       		.byte	64
 110 0048 00       		.byte	0
 111 0049 C1       		.byte	-63
 112 004a 81       		.byte	-127
 113 004b 40       		.byte	64
 114 004c 01       		.byte	1
 115 004d C0       		.byte	-64
 116 004e 80       		.byte	-128
 117 004f 41       		.byte	65
 118 0050 00       		.byte	0
 119 0051 C1       		.byte	-63
 120 0052 81       		.byte	-127
 121 0053 40       		.byte	64
 122 0054 01       		.byte	1
 123 0055 C0       		.byte	-64
 124 0056 80       		.byte	-128
 125 0057 41       		.byte	65
 126 0058 01       		.byte	1
 127 0059 C0       		.byte	-64
 128 005a 80       		.byte	-128
 129 005b 41       		.byte	65
 130 005c 00       		.byte	0
 131 005d C1       		.byte	-63
 132 005e 81       		.byte	-127
 133 005f 40       		.byte	64
 134 0060 00       		.byte	0
 135 0061 C1       		.byte	-63
 136 0062 81       		.byte	-127
 137 0063 40       		.byte	64
 138 0064 01       		.byte	1
 139 0065 C0       		.byte	-64
 140 0066 80       		.byte	-128
 141 0067 41       		.byte	65
 142 0068 01       		.byte	1
 143 0069 C0       		.byte	-64
 144 006a 80       		.byte	-128
 145 006b 41       		.byte	65
 146 006c 00       		.byte	0
 147 006d C1       		.byte	-63
 148 006e 81       		.byte	-127
 149 006f 40       		.byte	64
 150 0070 01       		.byte	1
 151 0071 C0       		.byte	-64
 152 0072 80       		.byte	-128
 153 0073 41       		.byte	65
 154 0074 00       		.byte	0
 155 0075 C1       		.byte	-63
 156 0076 81       		.byte	-127
 157 0077 40       		.byte	64
 158 0078 00       		.byte	0
 159 0079 C1       		.byte	-63
 160 007a 81       		.byte	-127
 161 007b 40       		.byte	64
 162 007c 01       		.byte	1
 163 007d C0       		.byte	-64
 164 007e 80       		.byte	-128
 165 007f 41       		.byte	65
 166 0080 01       		.byte	1
 167 0081 C0       		.byte	-64
 168 0082 80       		.byte	-128
 169 0083 41       		.byte	65
 170 0084 00       		.byte	0
 171 0085 C1       		.byte	-63
 172 0086 81       		.byte	-127
 173 0087 40       		.byte	64
 174 0088 00       		.byte	0
 175 0089 C1       		.byte	-63
 176 008a 81       		.byte	-127
 177 008b 40       		.byte	64
 178 008c 01       		.byte	1
 179 008d C0       		.byte	-64
 180 008e 80       		.byte	-128
 181 008f 41       		.byte	65
 182 0090 00       		.byte	0
 183 0091 C1       		.byte	-63
 184 0092 81       		.byte	-127
 185 0093 40       		.byte	64
 186 0094 01       		.byte	1
 187 0095 C0       		.byte	-64
 188 0096 80       		.byte	-128
 189 0097 41       		.byte	65
 190 0098 01       		.byte	1
 191 0099 C0       		.byte	-64
 192 009a 80       		.byte	-128
 193 009b 41       		.byte	65
 194 009c 00       		.byte	0
 195 009d C1       		.byte	-63
 196 009e 81       		.byte	-127
 197 009f 40       		.byte	64
 198 00a0 00       		.byte	0
 199 00a1 C1       		.byte	-63
 200 00a2 81       		.byte	-127
 201 00a3 40       		.byte	64
 202 00a4 01       		.byte	1
 203 00a5 C0       		.byte	-64
 204 00a6 80       		.byte	-128
 205 00a7 41       		.byte	65
 206 00a8 01       		.byte	1
 207 00a9 C0       		.byte	-64
 208 00aa 80       		.byte	-128
 209 00ab 41       		.byte	65
 210 00ac 00       		.byte	0
 211 00ad C1       		.byte	-63
 212 00ae 81       		.byte	-127
 213 00af 40       		.byte	64
 214 00b0 01       		.byte	1
 215 00b1 C0       		.byte	-64
 216 00b2 80       		.byte	-128
 217 00b3 41       		.byte	65
 218 00b4 00       		.byte	0
 219 00b5 C1       		.byte	-63
 220 00b6 81       		.byte	-127
 221 00b7 40       		.byte	64
 222 00b8 00       		.byte	0
 223 00b9 C1       		.byte	-63
 224 00ba 81       		.byte	-127
 225 00bb 40       		.byte	64
 226 00bc 01       		.byte	1
 227 00bd C0       		.byte	-64
 228 00be 80       		.byte	-128
 229 00bf 41       		.byte	65
 230 00c0 00       		.byte	0
 231 00c1 C1       		.byte	-63
 232 00c2 81       		.byte	-127
 233 00c3 40       		.byte	64
 234 00c4 01       		.byte	1
 235 00c5 C0       		.byte	-64
 236 00c6 80       		.byte	-128
 237 00c7 41       		.byte	65
 238 00c8 01       		.byte	1
 239 00c9 C0       		.byte	-64
 240 00ca 80       		.byte	-128
 241 00cb 41       		.byte	65
 242 00cc 00       		.byte	0
 243 00cd C1       		.byte	-63
 244 00ce 81       		.byte	-127
 245 00cf 40       		.byte	64
 246 00d0 01       		.byte	1
 247 00d1 C0       		.byte	-64
 248 00d2 80       		.byte	-128
 249 00d3 41       		.byte	65
 250 00d4 00       		.byte	0
 251 00d5 C1       		.byte	-63
 252 00d6 81       		.byte	-127
 253 00d7 40       		.byte	64
 254 00d8 00       		.byte	0
 255 00d9 C1       		.byte	-63
 256 00da 81       		.byte	-127
 257 00db 40       		.byte	64
 258 00dc 01       		.byte	1
 259 00dd C0       		.byte	-64
 260 00de 80       		.byte	-128
 261 00df 41       		.byte	65
 262 00e0 01       		.byte	1
 263 00e1 C0       		.byte	-64
 264 00e2 80       		.byte	-128
 265 00e3 41       		.byte	65
 266 00e4 00       		.byte	0
 267 00e5 C1       		.byte	-63
 268 00e6 81       		.byte	-127
 269 00e7 40       		.byte	64
 270 00e8 00       		.byte	0
 271 00e9 C1       		.byte	-63
 272 00ea 81       		.byte	-127
 273 00eb 40       		.byte	64
 274 00ec 01       		.byte	1
 275 00ed C0       		.byte	-64
 276 00ee 80       		.byte	-128
 277 00ef 41       		.byte	65
 278 00f0 00       		.byte	0
 279 00f1 C1       		.byte	-63
 280 00f2 81       		.byte	-127
 281 00f3 40       		.byte	64
 282 00f4 01       		.byte	1
 283 00f5 C0       		.byte	-64
 284 00f6 80       		.byte	-128
 285 00f7 41       		.byte	65
 286 00f8 01       		.byte	1
 287 00f9 C0       		.byte	-64
 288 00fa 80       		.byte	-128
 289 00fb 41       		.byte	65
 290 00fc 00       		.byte	0
 291 00fd C1       		.byte	-63
 292 00fe 81       		.byte	-127
 293 00ff 40       		.byte	64
 294              		.section	.rodata.table_crc_lo,"a",%progbits
 295              		.align	2
 298              	table_crc_lo:
 299 0000 00       		.byte	0
 300 0001 C0       		.byte	-64
 301 0002 C1       		.byte	-63
 302 0003 01       		.byte	1
 303 0004 C3       		.byte	-61
 304 0005 03       		.byte	3
 305 0006 02       		.byte	2
 306 0007 C2       		.byte	-62
 307 0008 C6       		.byte	-58
 308 0009 06       		.byte	6
 309 000a 07       		.byte	7
 310 000b C7       		.byte	-57
 311 000c 05       		.byte	5
 312 000d C5       		.byte	-59
 313 000e C4       		.byte	-60
 314 000f 04       		.byte	4
 315 0010 CC       		.byte	-52
 316 0011 0C       		.byte	12
 317 0012 0D       		.byte	13
 318 0013 CD       		.byte	-51
 319 0014 0F       		.byte	15
 320 0015 CF       		.byte	-49
 321 0016 CE       		.byte	-50
 322 0017 0E       		.byte	14
 323 0018 0A       		.byte	10
 324 0019 CA       		.byte	-54
 325 001a CB       		.byte	-53
 326 001b 0B       		.byte	11
 327 001c C9       		.byte	-55
 328 001d 09       		.byte	9
 329 001e 08       		.byte	8
 330 001f C8       		.byte	-56
 331 0020 D8       		.byte	-40
 332 0021 18       		.byte	24
 333 0022 19       		.byte	25
 334 0023 D9       		.byte	-39
 335 0024 1B       		.byte	27
 336 0025 DB       		.byte	-37
 337 0026 DA       		.byte	-38
 338 0027 1A       		.byte	26
 339 0028 1E       		.byte	30
 340 0029 DE       		.byte	-34
 341 002a DF       		.byte	-33
 342 002b 1F       		.byte	31
 343 002c DD       		.byte	-35
 344 002d 1D       		.byte	29
 345 002e 1C       		.byte	28
 346 002f DC       		.byte	-36
 347 0030 14       		.byte	20
 348 0031 D4       		.byte	-44
 349 0032 D5       		.byte	-43
 350 0033 15       		.byte	21
 351 0034 D7       		.byte	-41
 352 0035 17       		.byte	23
 353 0036 16       		.byte	22
 354 0037 D6       		.byte	-42
 355 0038 D2       		.byte	-46
 356 0039 12       		.byte	18
 357 003a 13       		.byte	19
 358 003b D3       		.byte	-45
 359 003c 11       		.byte	17
 360 003d D1       		.byte	-47
 361 003e D0       		.byte	-48
 362 003f 10       		.byte	16
 363 0040 F0       		.byte	-16
 364 0041 30       		.byte	48
 365 0042 31       		.byte	49
 366 0043 F1       		.byte	-15
 367 0044 33       		.byte	51
 368 0045 F3       		.byte	-13
 369 0046 F2       		.byte	-14
 370 0047 32       		.byte	50
 371 0048 36       		.byte	54
 372 0049 F6       		.byte	-10
 373 004a F7       		.byte	-9
 374 004b 37       		.byte	55
 375 004c F5       		.byte	-11
 376 004d 35       		.byte	53
 377 004e 34       		.byte	52
 378 004f F4       		.byte	-12
 379 0050 3C       		.byte	60
 380 0051 FC       		.byte	-4
 381 0052 FD       		.byte	-3
 382 0053 3D       		.byte	61
 383 0054 FF       		.byte	-1
 384 0055 3F       		.byte	63
 385 0056 3E       		.byte	62
 386 0057 FE       		.byte	-2
 387 0058 FA       		.byte	-6
 388 0059 3A       		.byte	58
 389 005a 3B       		.byte	59
 390 005b FB       		.byte	-5
 391 005c 39       		.byte	57
 392 005d F9       		.byte	-7
 393 005e F8       		.byte	-8
 394 005f 38       		.byte	56
 395 0060 28       		.byte	40
 396 0061 E8       		.byte	-24
 397 0062 E9       		.byte	-23
 398 0063 29       		.byte	41
 399 0064 EB       		.byte	-21
 400 0065 2B       		.byte	43
 401 0066 2A       		.byte	42
 402 0067 EA       		.byte	-22
 403 0068 EE       		.byte	-18
 404 0069 2E       		.byte	46
 405 006a 2F       		.byte	47
 406 006b EF       		.byte	-17
 407 006c 2D       		.byte	45
 408 006d ED       		.byte	-19
 409 006e EC       		.byte	-20
 410 006f 2C       		.byte	44
 411 0070 E4       		.byte	-28
 412 0071 24       		.byte	36
 413 0072 25       		.byte	37
 414 0073 E5       		.byte	-27
 415 0074 27       		.byte	39
 416 0075 E7       		.byte	-25
 417 0076 E6       		.byte	-26
 418 0077 26       		.byte	38
 419 0078 22       		.byte	34
 420 0079 E2       		.byte	-30
 421 007a E3       		.byte	-29
 422 007b 23       		.byte	35
 423 007c E1       		.byte	-31
 424 007d 21       		.byte	33
 425 007e 20       		.byte	32
 426 007f E0       		.byte	-32
 427 0080 A0       		.byte	-96
 428 0081 60       		.byte	96
 429 0082 61       		.byte	97
 430 0083 A1       		.byte	-95
 431 0084 63       		.byte	99
 432 0085 A3       		.byte	-93
 433 0086 A2       		.byte	-94
 434 0087 62       		.byte	98
 435 0088 66       		.byte	102
 436 0089 A6       		.byte	-90
 437 008a A7       		.byte	-89
 438 008b 67       		.byte	103
 439 008c A5       		.byte	-91
 440 008d 65       		.byte	101
 441 008e 64       		.byte	100
 442 008f A4       		.byte	-92
 443 0090 6C       		.byte	108
 444 0091 AC       		.byte	-84
 445 0092 AD       		.byte	-83
 446 0093 6D       		.byte	109
 447 0094 AF       		.byte	-81
 448 0095 6F       		.byte	111
 449 0096 6E       		.byte	110
 450 0097 AE       		.byte	-82
 451 0098 AA       		.byte	-86
 452 0099 6A       		.byte	106
 453 009a 6B       		.byte	107
 454 009b AB       		.byte	-85
 455 009c 69       		.byte	105
 456 009d A9       		.byte	-87
 457 009e A8       		.byte	-88
 458 009f 68       		.byte	104
 459 00a0 78       		.byte	120
 460 00a1 B8       		.byte	-72
 461 00a2 B9       		.byte	-71
 462 00a3 79       		.byte	121
 463 00a4 BB       		.byte	-69
 464 00a5 7B       		.byte	123
 465 00a6 7A       		.byte	122
 466 00a7 BA       		.byte	-70
 467 00a8 BE       		.byte	-66
 468 00a9 7E       		.byte	126
 469 00aa 7F       		.byte	127
 470 00ab BF       		.byte	-65
 471 00ac 7D       		.byte	125
 472 00ad BD       		.byte	-67
 473 00ae BC       		.byte	-68
 474 00af 7C       		.byte	124
 475 00b0 B4       		.byte	-76
 476 00b1 74       		.byte	116
 477 00b2 75       		.byte	117
 478 00b3 B5       		.byte	-75
 479 00b4 77       		.byte	119
 480 00b5 B7       		.byte	-73
 481 00b6 B6       		.byte	-74
 482 00b7 76       		.byte	118
 483 00b8 72       		.byte	114
 484 00b9 B2       		.byte	-78
 485 00ba B3       		.byte	-77
 486 00bb 73       		.byte	115
 487 00bc B1       		.byte	-79
 488 00bd 71       		.byte	113
 489 00be 70       		.byte	112
 490 00bf B0       		.byte	-80
 491 00c0 50       		.byte	80
 492 00c1 90       		.byte	-112
 493 00c2 91       		.byte	-111
 494 00c3 51       		.byte	81
 495 00c4 93       		.byte	-109
 496 00c5 53       		.byte	83
 497 00c6 52       		.byte	82
 498 00c7 92       		.byte	-110
 499 00c8 96       		.byte	-106
 500 00c9 56       		.byte	86
 501 00ca 57       		.byte	87
 502 00cb 97       		.byte	-105
 503 00cc 55       		.byte	85
 504 00cd 95       		.byte	-107
 505 00ce 94       		.byte	-108
 506 00cf 54       		.byte	84
 507 00d0 9C       		.byte	-100
 508 00d1 5C       		.byte	92
 509 00d2 5D       		.byte	93
 510 00d3 9D       		.byte	-99
 511 00d4 5F       		.byte	95
 512 00d5 9F       		.byte	-97
 513 00d6 9E       		.byte	-98
 514 00d7 5E       		.byte	94
 515 00d8 5A       		.byte	90
 516 00d9 9A       		.byte	-102
 517 00da 9B       		.byte	-101
 518 00db 5B       		.byte	91
 519 00dc 99       		.byte	-103
 520 00dd 59       		.byte	89
 521 00de 58       		.byte	88
 522 00df 98       		.byte	-104
 523 00e0 88       		.byte	-120
 524 00e1 48       		.byte	72
 525 00e2 49       		.byte	73
 526 00e3 89       		.byte	-119
 527 00e4 4B       		.byte	75
 528 00e5 8B       		.byte	-117
 529 00e6 8A       		.byte	-118
 530 00e7 4A       		.byte	74
 531 00e8 4E       		.byte	78
 532 00e9 8E       		.byte	-114
 533 00ea 8F       		.byte	-113
 534 00eb 4F       		.byte	79
 535 00ec 8D       		.byte	-115
 536 00ed 4D       		.byte	77
 537 00ee 4C       		.byte	76
 538 00ef 8C       		.byte	-116
 539 00f0 44       		.byte	68
 540 00f1 84       		.byte	-124
 541 00f2 85       		.byte	-123
 542 00f3 45       		.byte	69
 543 00f4 87       		.byte	-121
 544 00f5 47       		.byte	71
 545 00f6 46       		.byte	70
 546 00f7 86       		.byte	-122
 547 00f8 82       		.byte	-126
 548 00f9 42       		.byte	66
 549 00fa 43       		.byte	67
 550 00fb 83       		.byte	-125
 551 00fc 41       		.byte	65
 552 00fd 81       		.byte	-127
 553 00fe 80       		.byte	-128
 554 00ff 40       		.byte	64
 555              		.comm	fd,4,4
 556              		.comm	received_string,513,4
 557              		.comm	rx_length,4,4
 558              		.comm	input_Register,20,4
 559              		.section	.rodata
 560              		.align	2
 561              	.LC0:
 562 0000 6D6F746F 		.ascii	"motor\000"
 562      7200
 563 0006 0000     		.align	2
 564              	.LC1:
 565 0008 6D6F746F 		.ascii	"motor  [options]\302\240[parameters]\302\240- Type "
 565      7220205B 
 565      6F707469 
 565      6F6E735D 
 565      C2A05B70 
 566 002f 6D6F746F 		.ascii	"motor help for more help\015\012\012\000\000"
 566      72206865 
 566      6C702066 
 566      6F72206D 
 566      6F726520 
 567              		.section	.rodata.xMotorCommand,"a",%progbits
 568              		.align	2
 571              	xMotorCommand:
 572 0000 00000000 		.word	.LC0
 573 0004 08000000 		.word	.LC1
 574 0008 00000000 		.word	prvMotorCommand
 575 000c FF       		.byte	-1
 576 000d 000000   		.space	3
 577              		.section	.rodata
 578              		.align	2
 579              	.LC2:
 580 004c 7461736B 		.ascii	"task\000"
 580      00
 581 0051 000000   		.align	2
 582              	.LC3:
 583 0054 7461736B 		.ascii	"task - return tasks list\015\012\012\000\000"
 583      202D2072 
 583      65747572 
 583      6E207461 
 583      736B7320 
 584              		.section	.rodata.xTaskStatsCommand,"a",%progbits
 585              		.align	2
 588              	xTaskStatsCommand:
 589 0000 4C000000 		.word	.LC2
 590 0004 54000000 		.word	.LC3
 591 0008 00000000 		.word	prvTaskStatsCommand
 592 000c FF       		.byte	-1
 593 000d 000000   		.space	3
 594              		.section	.data.xDelay,"aw",%progbits
 595              		.align	2
 598              	xDelay:
 599 0000 FFFFFFFF 		.word	-1
 600              		.comm	telegramS,28,4
 601              		.comm	telegramR,28,4
 602              		.section	.text.telegram_init,"ax",%progbits
 603              		.align	2
 604              		.global	telegram_init
 605              		.thumb
 606              		.thumb_func
 608              	telegram_init:
 609              	.LFB110:
 610              		.file 1 "App/STM32F4-Discovery/tcpCLI.c"
   1:App/STM32F4-Discovery/tcpCLI.c **** #include "tcpCLI.h"
   2:App/STM32F4-Discovery/tcpCLI.c **** 
   3:App/STM32F4-Discovery/tcpCLI.c **** 
   4:App/STM32F4-Discovery/tcpCLI.c **** static 	portTickType xDelay = portMAX_DELAY;//3000 / portTICK_RATE_MS;
   5:App/STM32F4-Discovery/tcpCLI.c **** 
   6:App/STM32F4-Discovery/tcpCLI.c **** QueueTelegram telegramS, telegramR; 
   7:App/STM32F4-Discovery/tcpCLI.c **** 
   8:App/STM32F4-Discovery/tcpCLI.c **** /* default telegram */
   9:App/STM32F4-Discovery/tcpCLI.c **** void telegram_init()
  10:App/STM32F4-Discovery/tcpCLI.c **** {
 611              		.loc 1 10 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 1, uses_anonymous_args = 0
 615              		@ link register save eliminated.
 616 0000 80B4     		push	{r7}
 617              	.LCFI0:
 618              		.cfi_def_cfa_offset 4
 619              		.cfi_offset 7, -4
 620 0002 00AF     		add	r7, sp, #0
 621              	.LCFI1:
 622              		.cfi_def_cfa_register 7
  11:App/STM32F4-Discovery/tcpCLI.c **** 	telegramS.data[0] = 1000;
 623              		.loc 1 11 0
 624 0004 0D4B     		ldr	r3, .L2
 625 0006 4FF47A72 		mov	r2, #1000
 626 000a 1A81     		strh	r2, [r3, #8]	@ movhi
  12:App/STM32F4-Discovery/tcpCLI.c **** 	telegramS.data[1] = 0;	
 627              		.loc 1 12 0
 628 000c 0B4B     		ldr	r3, .L2
 629 000e 0022     		movs	r2, #0
 630 0010 5A81     		strh	r2, [r3, #10]	@ movhi
  13:App/STM32F4-Discovery/tcpCLI.c **** 	telegramS.data[2] = 2250;
 631              		.loc 1 13 0
 632 0012 0A4B     		ldr	r3, .L2
 633 0014 40F6CA02 		movw	r2, #2250
 634 0018 9A81     		strh	r2, [r3, #12]	@ movhi
  14:App/STM32F4-Discovery/tcpCLI.c **** 	telegramS.data[3] = 10;	
 635              		.loc 1 14 0
 636 001a 084B     		ldr	r3, .L2
 637 001c 0A22     		movs	r2, #10
 638 001e DA81     		strh	r2, [r3, #14]	@ movhi
  15:App/STM32F4-Discovery/tcpCLI.c **** 	telegramS.data[4] = 10;	
 639              		.loc 1 15 0
 640 0020 064B     		ldr	r3, .L2
 641 0022 0A22     		movs	r2, #10
 642 0024 1A82     		strh	r2, [r3, #16]	@ movhi
  16:App/STM32F4-Discovery/tcpCLI.c **** 	telegramS.size = 5;
 643              		.loc 1 16 0
 644 0026 054B     		ldr	r3, .L2
 645 0028 0522     		movs	r2, #5
 646 002a 5A60     		str	r2, [r3, #4]
  17:App/STM32F4-Discovery/tcpCLI.c **** 	telegramS.Qcmd = SETDATA;
 647              		.loc 1 17 0
 648 002c 034B     		ldr	r3, .L2
 649 002e 0022     		movs	r2, #0
 650 0030 1A70     		strb	r2, [r3]
  18:App/STM32F4-Discovery/tcpCLI.c **** }
 651              		.loc 1 18 0
 652 0032 BD46     		mov	sp, r7
 653              		@ sp needed
 654 0034 5DF8047B 		ldr	r7, [sp], #4
 655 0038 7047     		bx	lr
 656              	.L3:
 657 003a 00BF     		.align	2
 658              	.L2:
 659 003c 00000000 		.word	telegramS
 660              		.cfi_endproc
 661              	.LFE110:
 663              		.section	.rodata
 664 0071 000000   		.align	2
 665              	.LC4:
 666 0074 73706565 		.ascii	"speed\000"
 666      6400
 667 007a 0000     		.align	2
 668              	.LC5:
 669 007c 4572726F 		.ascii	"Error: speed is out of range [1,100]p : %d\012\012\000"
 669      723A2073 
 669      70656564 
 669      20697320 
 669      6F757420 
 670 00a9 00       		.ascii	"\000"
 671 00aa 0000     		.align	2
 672              	.LC6:
 673 00ac 53706565 		.ascii	"Speed succsesfully set.\012\012\000"
 673      64207375 
 673      63637365 
 673      7366756C 
 673      6C792073 
 674 00c6 0000     		.align	2
 675              	.LC7:
 676 00c8 4D4F4442 		.ascii	"MODBUS ERROR !!!.\012\012\000"
 676      55532045 
 676      52524F52 
 676      20212121 
 676      2E0A0A00 
 677              		.align	2
 678              	.LC8:
 679 00dc 4572726F 		.ascii	"Error recieving response!\012\012\000"
 679      72207265 
 679      63696576 
 679      696E6720 
 679      72657370 
 680              		.align	2
 681              	.LC9:
 682 00f8 4572726F 		.ascii	"Error sending Queue!\012\012\000"
 682      72207365 
 682      6E64696E 
 682      67205175 
 682      65756521 
 683 010f 00       		.align	2
 684              	.LC10:
 685 0110 75707261 		.ascii	"upramp\000"
 685      6D7000
 686 0117 00       		.align	2
 687              	.LC11:
 688 0118 4572726F 		.ascii	"Error: Ramp time is out of range [15,300]s : %d\012"
 688      723A2052 
 688      616D7020 
 688      74696D65 
 688      20697320 
 689 0148 0A0000   		.ascii	"\012\000\000"
 690 014b 00       		.align	2
 691              	.LC12:
 692 014c 55702072 		.ascii	"Up ramp succsesfully set.\012\012\000"
 692      616D7020 
 692      73756363 
 692      73657366 
 692      756C6C79 
 693              		.align	2
 694              	.LC13:
 695 0168 646F776E 		.ascii	"downramp\000"
 695      72616D70 
 695      00
 696 0171 000000   		.align	2
 697              	.LC14:
 698 0174 446F776E 		.ascii	"Down ramp succsesfully set.\012\012\000"
 698      2072616D 
 698      70207375 
 698      63637365 
 698      7366756C 
 699              		.section	.text.handleVariable_set,"ax",%progbits
 700              		.align	2
 701              		.global	handleVariable_set
 702              		.thumb
 703              		.thumb_func
 705              	handleVariable_set:
 706              	.LFB111:
  19:App/STM32F4-Discovery/tcpCLI.c **** 
  20:App/STM32F4-Discovery/tcpCLI.c **** 
  21:App/STM32F4-Discovery/tcpCLI.c **** 
  22:App/STM32F4-Discovery/tcpCLI.c **** int handleVariable_set (	
  23:App/STM32F4-Discovery/tcpCLI.c **** 				int8_t *pcWriteBuffer, 
  24:App/STM32F4-Discovery/tcpCLI.c **** 				size_t xWriteBufferLen,
  25:App/STM32F4-Discovery/tcpCLI.c **** 				uint8_t * Param, 
  26:App/STM32F4-Discovery/tcpCLI.c **** 				int xParamLength,
  27:App/STM32F4-Discovery/tcpCLI.c **** 				xQueueHandle Qhandle,
  28:App/STM32F4-Discovery/tcpCLI.c **** 				uint8_t * Value,
  29:App/STM32F4-Discovery/tcpCLI.c **** 				int xValueLength,
  30:App/STM32F4-Discovery/tcpCLI.c **** 				int socket )
  31:App/STM32F4-Discovery/tcpCLI.c **** {
 707              		.loc 1 31 0
 708              		.cfi_startproc
 709              		@ args = 16, pretend = 0, frame = 32
 710              		@ frame_needed = 1, uses_anonymous_args = 0
 711 0000 B0B5     		push	{r4, r5, r7, lr}
 712              	.LCFI2:
 713              		.cfi_def_cfa_offset 16
 714              		.cfi_offset 4, -16
 715              		.cfi_offset 5, -12
 716              		.cfi_offset 7, -8
 717              		.cfi_offset 14, -4
 718 0002 88B0     		sub	sp, sp, #32
 719              	.LCFI3:
 720              		.cfi_def_cfa_offset 48
 721 0004 00AF     		add	r7, sp, #0
 722              	.LCFI4:
 723              		.cfi_def_cfa_register 7
 724 0006 F860     		str	r0, [r7, #12]
 725 0008 B960     		str	r1, [r7, #8]
 726 000a 7A60     		str	r2, [r7, #4]
 727 000c 3B60     		str	r3, [r7]
  32:App/STM32F4-Discovery/tcpCLI.c **** 
  33:App/STM32F4-Discovery/tcpCLI.c **** 
  34:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
  35:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER speed [value]
  36:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
  37:App/STM32F4-Discovery/tcpCLI.c **** 
  38:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "speed", 5))
 728              		.loc 1 38 0
 729 000e 7868     		ldr	r0, [r7, #4]
 730 0010 9B49     		ldr	r1, .L22
 731 0012 0522     		movs	r2, #5
 732 0014 FFF7FEFF 		bl	strncmp
 733 0018 0346     		mov	r3, r0
 734 001a 002B     		cmp	r3, #0
 735 001c 40F08F80 		bne	.L5
 736              	.LBB2:
  39:App/STM32F4-Discovery/tcpCLI.c **** 	{	
  40:App/STM32F4-Discovery/tcpCLI.c **** 	
  41:App/STM32F4-Discovery/tcpCLI.c **** 	
  42:App/STM32F4-Discovery/tcpCLI.c **** 		
  43:App/STM32F4-Discovery/tcpCLI.c **** 		// now convert parameter to proper value and check if it is in range 
  44:App/STM32F4-Discovery/tcpCLI.c ****         	Value[xValueLength] = '\0'; 	
 737              		.loc 1 44 0
 738 0020 BB6B     		ldr	r3, [r7, #56]
 739 0022 7A6B     		ldr	r2, [r7, #52]
 740 0024 1344     		add	r3, r3, r2
 741 0026 0022     		movs	r2, #0
 742 0028 1A70     		strb	r2, [r3]
  45:App/STM32F4-Discovery/tcpCLI.c **** 		uint16_t s1 = atoi ( Value ); 
 743              		.loc 1 45 0
 744 002a 786B     		ldr	r0, [r7, #52]
 745 002c FFF7FEFF 		bl	atoi
 746 0030 0346     		mov	r3, r0
 747 0032 FB83     		strh	r3, [r7, #30]	@ movhi
  46:App/STM32F4-Discovery/tcpCLI.c **** 		// if speed is in range
  47:App/STM32F4-Discovery/tcpCLI.c **** 		if(s1 < 1 ||  s1 > 100 )
 748              		.loc 1 47 0
 749 0034 FB8B     		ldrh	r3, [r7, #30]
 750 0036 002B     		cmp	r3, #0
 751 0038 02D0     		beq	.L6
 752              		.loc 1 47 0 is_stmt 0 discriminator 1
 753 003a FB8B     		ldrh	r3, [r7, #30]
 754 003c 642B     		cmp	r3, #100
 755 003e 07D9     		bls	.L7
 756              	.L6:
  48:App/STM32F4-Discovery/tcpCLI.c **** 		{
  49:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP
  50:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error: speed is out of range [1,100]p : %d\n\n\0", s1);
 757              		.loc 1 50 0 is_stmt 1
 758 0040 FB8B     		ldrh	r3, [r7, #30]
 759 0042 F868     		ldr	r0, [r7, #12]
 760 0044 8F49     		ldr	r1, .L22+4
 761 0046 1A46     		mov	r2, r3
 762 0048 FFF7FEFF 		bl	sprintf
  51:App/STM32F4-Discovery/tcpCLI.c **** 		//	pcWriteBuffer[11+ 3] = "\0"; 
  52:App/STM32F4-Discovery/tcpCLI.c **** 			
  53:App/STM32F4-Discovery/tcpCLI.c **** 			////send( socket_0, buf, 11+3, 0);
  54:App/STM32F4-Discovery/tcpCLI.c **** 
  55:App/STM32F4-Discovery/tcpCLI.c **** 	       		return pdFALSE; 	
 763              		.loc 1 55 0
 764 004c 0023     		movs	r3, #0
 765 004e 8FE1     		b	.L4
 766              	.L7:
  56:App/STM32F4-Discovery/tcpCLI.c **** 		}	
  57:App/STM32F4-Discovery/tcpCLI.c **** 	
  58:App/STM32F4-Discovery/tcpCLI.c **** 		// convert to correct value ( * 100 ) 
  59:App/STM32F4-Discovery/tcpCLI.c **** 		s1 *= 100; 
 767              		.loc 1 59 0
 768 0050 FB8B     		ldrh	r3, [r7, #30]	@ movhi
 769 0052 1A46     		mov	r2, r3	@ movhi
 770 0054 9200     		lsls	r2, r2, #2
 771 0056 1344     		add	r3, r3, r2
 772 0058 1A46     		mov	r2, r3	@ movhi
 773 005a 9100     		lsls	r1, r2, #2
 774 005c 1A46     		mov	r2, r3	@ movhi
 775 005e 0B46     		mov	r3, r1	@ movhi
 776 0060 1344     		add	r3, r3, r2
 777 0062 9B00     		lsls	r3, r3, #2
 778 0064 FB83     		strh	r3, [r7, #30]	@ movhi
  60:App/STM32F4-Discovery/tcpCLI.c **** 		
  61:App/STM32F4-Discovery/tcpCLI.c **** 		// setup telegram 
  62:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = SETDATA;
 779              		.loc 1 62 0
 780 0066 884B     		ldr	r3, .L22+8
 781 0068 0022     		movs	r2, #0
 782 006a 1A70     		strb	r2, [r3]
  63:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5;
 783              		.loc 1 63 0
 784 006c 864B     		ldr	r3, .L22+8
 785 006e 0522     		movs	r2, #5
 786 0070 5A60     		str	r2, [r3, #4]
  64:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[0] = s1;
 787              		.loc 1 64 0
 788 0072 854B     		ldr	r3, .L22+8
 789 0074 FA8B     		ldrh	r2, [r7, #30]	@ movhi
 790 0076 1A81     		strh	r2, [r3, #8]	@ movhi
  65:App/STM32F4-Discovery/tcpCLI.c **** 		
  66:App/STM32F4-Discovery/tcpCLI.c **** 	
  67:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
  68:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 791              		.loc 1 68 0
 792 0078 844B     		ldr	r3, .L22+12
 793 007a 1A68     		ldr	r2, [r3]
 794 007c 844B     		ldr	r3, .L22+16
 795 007e 1B68     		ldr	r3, [r3]
 796 0080 1046     		mov	r0, r2
 797 0082 8149     		ldr	r1, .L22+8
 798 0084 1A46     		mov	r2, r3
 799 0086 0023     		movs	r3, #0
 800 0088 FFF7FEFF 		bl	xQueueGenericSend
 801 008c 0346     		mov	r3, r0
 802 008e 012B     		cmp	r3, #1
 803 0090 42D1     		bne	.L9
  69:App/STM32F4-Discovery/tcpCLI.c **** 		{	
  70:App/STM32F4-Discovery/tcpCLI.c **** 					
  71:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay)== pdPASS)
 804              		.loc 1 71 0
 805 0092 7E4B     		ldr	r3, .L22+12
 806 0094 1A68     		ldr	r2, [r3]
 807 0096 7E4B     		ldr	r3, .L22+16
 808 0098 1B68     		ldr	r3, [r3]
 809 009a 1046     		mov	r0, r2
 810 009c 7D49     		ldr	r1, .L22+20
 811 009e 1A46     		mov	r2, r3
 812 00a0 0023     		movs	r3, #0
 813 00a2 FFF7FEFF 		bl	xQueueGenericReceive
 814 00a6 0346     		mov	r3, r0
 815 00a8 012B     		cmp	r3, #1
 816 00aa 24D1     		bne	.L10
  72:App/STM32F4-Discovery/tcpCLI.c **** 			{
  73:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 817              		.loc 1 73 0
 818 00ac 794B     		ldr	r3, .L22+20
 819 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 820 00b0 062B     		cmp	r3, #6
 821 00b2 11D1     		bne	.L11
  74:App/STM32F4-Discovery/tcpCLI.c **** 				{	
  75:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed succsesfully set.\n\n");
 822              		.loc 1 75 0
 823 00b4 FA68     		ldr	r2, [r7, #12]
 824 00b6 784B     		ldr	r3, .L22+24
 825 00b8 1546     		mov	r5, r2
 826 00ba 1C46     		mov	r4, r3
 827 00bc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 828 00be 2860     		str	r0, [r5]	@ unaligned
 829 00c0 6960     		str	r1, [r5, #4]	@ unaligned
 830 00c2 AA60     		str	r2, [r5, #8]	@ unaligned
 831 00c4 EB60     		str	r3, [r5, #12]	@ unaligned
 832 00c6 03CC     		ldmia	r4!, {r0, r1}
 833 00c8 2861     		str	r0, [r5, #16]	@ unaligned
 834 00ca 6961     		str	r1, [r5, #20]	@ unaligned
 835 00cc 2388     		ldrh	r3, [r4]	@ unaligned
 836 00ce 2B83     		strh	r3, [r5, #24]	@ unaligned
  76:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 25; 	
 837              		.loc 1 76 0
 838 00d0 1923     		movs	r3, #25
 839 00d2 BB61     		str	r3, [r7, #24]
  77:App/STM32F4-Discovery/tcpCLI.c **** 				//	//send( socket, buf, len, 0);
  78:App/STM32F4-Discovery/tcpCLI.c **** 
  79:App/STM32F4-Discovery/tcpCLI.c **** 
  80:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 840              		.loc 1 80 0
 841 00d4 0123     		movs	r3, #1
 842 00d6 4BE1     		b	.L4
 843              	.L11:
  81:App/STM32F4-Discovery/tcpCLI.c **** 
  82:App/STM32F4-Discovery/tcpCLI.c **** 				}
  83:App/STM32F4-Discovery/tcpCLI.c **** 				else
  84:App/STM32F4-Discovery/tcpCLI.c **** 				{
  85:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 844              		.loc 1 85 0
 845 00d8 FA68     		ldr	r2, [r7, #12]
 846 00da 704B     		ldr	r3, .L22+28
 847 00dc 1546     		mov	r5, r2
 848 00de 1C46     		mov	r4, r3
 849 00e0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 850 00e2 2860     		str	r0, [r5]	@ unaligned
 851 00e4 6960     		str	r1, [r5, #4]	@ unaligned
 852 00e6 AA60     		str	r2, [r5, #8]	@ unaligned
 853 00e8 EB60     		str	r3, [r5, #12]	@ unaligned
 854 00ea 2068     		ldr	r0, [r4]	@ unaligned
 855 00ec 2861     		str	r0, [r5, #16]	@ unaligned
  86:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 856              		.loc 1 86 0
 857 00ee 1323     		movs	r3, #19
 858 00f0 BB61     		str	r3, [r7, #24]
  87:App/STM32F4-Discovery/tcpCLI.c **** //					//send( socket, buf, len, 0);
  88:App/STM32F4-Discovery/tcpCLI.c **** 
  89:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 859              		.loc 1 89 0
 860 00f2 0023     		movs	r3, #0
 861 00f4 3CE1     		b	.L4
 862              	.L10:
  90:App/STM32F4-Discovery/tcpCLI.c **** 
  91:App/STM32F4-Discovery/tcpCLI.c **** 
  92:App/STM32F4-Discovery/tcpCLI.c **** 				}
  93:App/STM32F4-Discovery/tcpCLI.c **** 						
  94:App/STM32F4-Discovery/tcpCLI.c **** 			}
  95:App/STM32F4-Discovery/tcpCLI.c **** 			else
  96:App/STM32F4-Discovery/tcpCLI.c **** 			{
  97:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
  98:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
  99:App/STM32F4-Discovery/tcpCLI.c **** 		
 100:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 863              		.loc 1 100 0
 864 00f6 FA68     		ldr	r2, [r7, #12]
 865 00f8 694B     		ldr	r3, .L22+32
 866 00fa 1546     		mov	r5, r2
 867 00fc 1C46     		mov	r4, r3
 868 00fe 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 869 0100 2860     		str	r0, [r5]	@ unaligned
 870 0102 6960     		str	r1, [r5, #4]	@ unaligned
 871 0104 AA60     		str	r2, [r5, #8]	@ unaligned
 872 0106 EB60     		str	r3, [r5, #12]	@ unaligned
 873 0108 07CC     		ldmia	r4!, {r0, r1, r2}
 874 010a 2861     		str	r0, [r5, #16]	@ unaligned
 875 010c 6961     		str	r1, [r5, #20]	@ unaligned
 876 010e AA61     		str	r2, [r5, #24]	@ unaligned
 101:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 877              		.loc 1 101 0
 878 0110 1B23     		movs	r3, #27
 879 0112 BB61     		str	r3, [r7, #24]
 102:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 103:App/STM32F4-Discovery/tcpCLI.c **** 
 104:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 880              		.loc 1 104 0
 881 0114 0023     		movs	r3, #0
 882 0116 2BE1     		b	.L4
 883              	.L9:
 105:App/STM32F4-Discovery/tcpCLI.c **** 			}
 106:App/STM32F4-Discovery/tcpCLI.c **** 
 107:App/STM32F4-Discovery/tcpCLI.c **** 
 108:App/STM32F4-Discovery/tcpCLI.c **** 		}
 109:App/STM32F4-Discovery/tcpCLI.c **** 		else
 110:App/STM32F4-Discovery/tcpCLI.c **** 		{
 111:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 112:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 113:App/STM32F4-Discovery/tcpCLI.c **** 		
 114:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 884              		.loc 1 114 0
 885 0118 FA68     		ldr	r2, [r7, #12]
 886 011a 624B     		ldr	r3, .L22+36
 887 011c 1446     		mov	r4, r2
 888 011e 1D46     		mov	r5, r3
 889 0120 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 890 0122 2060     		str	r0, [r4]	@ unaligned
 891 0124 6160     		str	r1, [r4, #4]	@ unaligned
 892 0126 A260     		str	r2, [r4, #8]	@ unaligned
 893 0128 E360     		str	r3, [r4, #12]	@ unaligned
 894 012a 2868     		ldr	r0, [r5]	@ unaligned
 895 012c 2061     		str	r0, [r4, #16]	@ unaligned
 896 012e AA88     		ldrh	r2, [r5, #4]	@ unaligned
 897 0130 AB79     		ldrb	r3, [r5, #6]
 898 0132 A282     		strh	r2, [r4, #20]	@ unaligned
 899 0134 A375     		strb	r3, [r4, #22]
 115:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 900              		.loc 1 115 0
 901 0136 1623     		movs	r3, #22
 902 0138 BB61     		str	r3, [r7, #24]
 116:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 117:App/STM32F4-Discovery/tcpCLI.c **** 
 118:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 903              		.loc 1 118 0
 904 013a 0023     		movs	r3, #0
 905 013c 18E1     		b	.L4
 906              	.L5:
 907              	.LBE2:
 119:App/STM32F4-Discovery/tcpCLI.c **** 		}
 120:App/STM32F4-Discovery/tcpCLI.c **** 	}
 121:App/STM32F4-Discovery/tcpCLI.c **** 	
 122:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 123:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER upramp [value]
 124:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 125:App/STM32F4-Discovery/tcpCLI.c **** 
 126:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "upramp", 6))
 908              		.loc 1 126 0
 909 013e 7868     		ldr	r0, [r7, #4]
 910 0140 5949     		ldr	r1, .L22+40
 911 0142 0622     		movs	r2, #6
 912 0144 FFF7FEFF 		bl	strncmp
 913 0148 0346     		mov	r3, r0
 914 014a 002B     		cmp	r3, #0
 915 014c 74D1     		bne	.L12
 916              	.LBB3:
 127:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 128:App/STM32F4-Discovery/tcpCLI.c **** 	
 129:App/STM32F4-Discovery/tcpCLI.c **** 	
 130:App/STM32F4-Discovery/tcpCLI.c **** 		
 131:App/STM32F4-Discovery/tcpCLI.c **** 		// now convert parameter to proper value and check if it is in range 
 132:App/STM32F4-Discovery/tcpCLI.c ****         	Value[xValueLength] = '\0'; 	
 917              		.loc 1 132 0
 918 014e BB6B     		ldr	r3, [r7, #56]
 919 0150 7A6B     		ldr	r2, [r7, #52]
 920 0152 1344     		add	r3, r3, r2
 921 0154 0022     		movs	r2, #0
 922 0156 1A70     		strb	r2, [r3]
 133:App/STM32F4-Discovery/tcpCLI.c **** 		uint16_t s1 = atoi ( Value ); 
 923              		.loc 1 133 0
 924 0158 786B     		ldr	r0, [r7, #52]
 925 015a FFF7FEFF 		bl	atoi
 926 015e 0346     		mov	r3, r0
 927 0160 FB82     		strh	r3, [r7, #22]	@ movhi
 134:App/STM32F4-Discovery/tcpCLI.c **** 		// if speed is in range
 135:App/STM32F4-Discovery/tcpCLI.c **** 		if(s1 < 15 ||  s1 > 300 )
 928              		.loc 1 135 0
 929 0162 FB8A     		ldrh	r3, [r7, #22]
 930 0164 0E2B     		cmp	r3, #14
 931 0166 03D9     		bls	.L13
 932              		.loc 1 135 0 is_stmt 0 discriminator 1
 933 0168 FB8A     		ldrh	r3, [r7, #22]
 934 016a B3F5967F 		cmp	r3, #300
 935 016e 09D9     		bls	.L14
 936              	.L13:
 136:App/STM32F4-Discovery/tcpCLI.c **** 		{
 137:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP
 138:App/STM32F4-Discovery/tcpCLI.c **** 			
 139:App/STM32F4-Discovery/tcpCLI.c **** 			xWriteBufferLen = 100; 
 937              		.loc 1 139 0 is_stmt 1
 938 0170 6423     		movs	r3, #100
 939 0172 BB61     		str	r3, [r7, #24]
 140:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error: Ramp time is out of range [15,300]s : %d\n\n\0", s1);
 940              		.loc 1 140 0
 941 0174 FB8A     		ldrh	r3, [r7, #22]
 942 0176 F868     		ldr	r0, [r7, #12]
 943 0178 4C49     		ldr	r1, .L22+44
 944 017a 1A46     		mov	r2, r3
 945 017c FFF7FEFF 		bl	sprintf
 141:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket_0, buf, len, 0);
 142:App/STM32F4-Discovery/tcpCLI.c **** 
 143:App/STM32F4-Discovery/tcpCLI.c **** 	       		return pdFALSE; 	
 946              		.loc 1 143 0
 947 0180 0023     		movs	r3, #0
 948 0182 F5E0     		b	.L4
 949              	.L14:
 144:App/STM32F4-Discovery/tcpCLI.c **** 		}	
 145:App/STM32F4-Discovery/tcpCLI.c **** 	
 146:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[3] = s1; 
 950              		.loc 1 146 0
 951 0184 404B     		ldr	r3, .L22+8
 952 0186 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 953 0188 DA81     		strh	r2, [r3, #14]	@ movhi
 147:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5; 
 954              		.loc 1 147 0
 955 018a 3F4B     		ldr	r3, .L22+8
 956 018c 0522     		movs	r2, #5
 957 018e 5A60     		str	r2, [r3, #4]
 148:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = SETDATA;
 958              		.loc 1 148 0
 959 0190 3D4B     		ldr	r3, .L22+8
 960 0192 0022     		movs	r2, #0
 961 0194 1A70     		strb	r2, [r3]
 149:App/STM32F4-Discovery/tcpCLI.c **** 		
 150:App/STM32F4-Discovery/tcpCLI.c **** 	
 151:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 152:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 962              		.loc 1 152 0
 963 0196 3D4B     		ldr	r3, .L22+12
 964 0198 1A68     		ldr	r2, [r3]
 965 019a 3D4B     		ldr	r3, .L22+16
 966 019c 1B68     		ldr	r3, [r3]
 967 019e 1046     		mov	r0, r2
 968 01a0 3949     		ldr	r1, .L22+8
 969 01a2 1A46     		mov	r2, r3
 970 01a4 0023     		movs	r3, #0
 971 01a6 FFF7FEFF 		bl	xQueueGenericSend
 972 01aa 0346     		mov	r3, r0
 973 01ac 012B     		cmp	r3, #1
 974 01ae 30D1     		bne	.L15
 153:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 154:App/STM32F4-Discovery/tcpCLI.c **** 					
 155:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay))
 975              		.loc 1 155 0
 976 01b0 364B     		ldr	r3, .L22+12
 977 01b2 1A68     		ldr	r2, [r3]
 978 01b4 364B     		ldr	r3, .L22+16
 979 01b6 1B68     		ldr	r3, [r3]
 980 01b8 1046     		mov	r0, r2
 981 01ba 3649     		ldr	r1, .L22+20
 982 01bc 1A46     		mov	r2, r3
 983 01be 0023     		movs	r3, #0
 984 01c0 FFF7FEFF 		bl	xQueueGenericReceive
 985 01c4 0346     		mov	r3, r0
 986 01c6 002B     		cmp	r3, #0
 987 01c8 36D0     		beq	.L12
 156:App/STM32F4-Discovery/tcpCLI.c **** 			{
 157:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 988              		.loc 1 157 0
 989 01ca 324B     		ldr	r3, .L22+20
 990 01cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 991 01ce 062B     		cmp	r3, #6
 992 01d0 10D1     		bne	.L16
 158:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 159:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Up ramp succsesfully set.\n\n");
 993              		.loc 1 159 0
 994 01d2 FA68     		ldr	r2, [r7, #12]
 995 01d4 364B     		ldr	r3, .L22+48
 996 01d6 1546     		mov	r5, r2
 997 01d8 1C46     		mov	r4, r3
 998 01da 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 999 01dc 2860     		str	r0, [r5]	@ unaligned
 1000 01de 6960     		str	r1, [r5, #4]	@ unaligned
 1001 01e0 AA60     		str	r2, [r5, #8]	@ unaligned
 1002 01e2 EB60     		str	r3, [r5, #12]	@ unaligned
 1003 01e4 07CC     		ldmia	r4!, {r0, r1, r2}
 1004 01e6 2861     		str	r0, [r5, #16]	@ unaligned
 1005 01e8 6961     		str	r1, [r5, #20]	@ unaligned
 1006 01ea AA61     		str	r2, [r5, #24]	@ unaligned
 160:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 27; 	
 1007              		.loc 1 160 0
 1008 01ec 1B23     		movs	r3, #27
 1009 01ee BB61     		str	r3, [r7, #24]
 161:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 162:App/STM32F4-Discovery/tcpCLI.c **** 
 163:App/STM32F4-Discovery/tcpCLI.c **** 
 164:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 1010              		.loc 1 164 0
 1011 01f0 0123     		movs	r3, #1
 1012 01f2 BDE0     		b	.L4
 1013              	.L16:
 165:App/STM32F4-Discovery/tcpCLI.c **** 
 166:App/STM32F4-Discovery/tcpCLI.c **** 				}
 167:App/STM32F4-Discovery/tcpCLI.c **** 				else
 168:App/STM32F4-Discovery/tcpCLI.c **** 				{
 169:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1014              		.loc 1 169 0
 1015 01f4 FA68     		ldr	r2, [r7, #12]
 1016 01f6 294B     		ldr	r3, .L22+28
 1017 01f8 1546     		mov	r5, r2
 1018 01fa 1C46     		mov	r4, r3
 1019 01fc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1020 01fe 2860     		str	r0, [r5]	@ unaligned
 1021 0200 6960     		str	r1, [r5, #4]	@ unaligned
 1022 0202 AA60     		str	r2, [r5, #8]	@ unaligned
 1023 0204 EB60     		str	r3, [r5, #12]	@ unaligned
 1024 0206 2068     		ldr	r0, [r4]	@ unaligned
 1025 0208 2861     		str	r0, [r5, #16]	@ unaligned
 170:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 1026              		.loc 1 170 0
 1027 020a 1323     		movs	r3, #19
 1028 020c BB61     		str	r3, [r7, #24]
 171:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 172:App/STM32F4-Discovery/tcpCLI.c **** 
 173:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 1029              		.loc 1 173 0
 1030 020e 0023     		movs	r3, #0
 1031 0210 AEE0     		b	.L4
 1032              	.L15:
 174:App/STM32F4-Discovery/tcpCLI.c **** 
 175:App/STM32F4-Discovery/tcpCLI.c **** 
 176:App/STM32F4-Discovery/tcpCLI.c **** 				}
 177:App/STM32F4-Discovery/tcpCLI.c **** 						
 178:App/STM32F4-Discovery/tcpCLI.c **** 			}
 179:App/STM32F4-Discovery/tcpCLI.c **** 
 180:App/STM32F4-Discovery/tcpCLI.c **** 		}
 181:App/STM32F4-Discovery/tcpCLI.c **** 		else
 182:App/STM32F4-Discovery/tcpCLI.c **** 		{
 183:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 184:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 185:App/STM32F4-Discovery/tcpCLI.c **** 		
 186:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 1033              		.loc 1 186 0
 1034 0212 FA68     		ldr	r2, [r7, #12]
 1035 0214 234B     		ldr	r3, .L22+36
 1036 0216 1446     		mov	r4, r2
 1037 0218 1D46     		mov	r5, r3
 1038 021a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1039 021c 2060     		str	r0, [r4]	@ unaligned
 1040 021e 6160     		str	r1, [r4, #4]	@ unaligned
 1041 0220 A260     		str	r2, [r4, #8]	@ unaligned
 1042 0222 E360     		str	r3, [r4, #12]	@ unaligned
 1043 0224 2868     		ldr	r0, [r5]	@ unaligned
 1044 0226 2061     		str	r0, [r4, #16]	@ unaligned
 1045 0228 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1046 022a AB79     		ldrb	r3, [r5, #6]
 1047 022c A282     		strh	r2, [r4, #20]	@ unaligned
 1048 022e A375     		strb	r3, [r4, #22]
 187:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1049              		.loc 1 187 0
 1050 0230 1623     		movs	r3, #22
 1051 0232 BB61     		str	r3, [r7, #24]
 188:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 189:App/STM32F4-Discovery/tcpCLI.c **** 
 190:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1052              		.loc 1 190 0
 1053 0234 0023     		movs	r3, #0
 1054 0236 9BE0     		b	.L4
 1055              	.L12:
 1056              	.LBE3:
 191:App/STM32F4-Discovery/tcpCLI.c **** 		}
 192:App/STM32F4-Discovery/tcpCLI.c **** 	}
 193:App/STM32F4-Discovery/tcpCLI.c **** 
 194:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 195:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER downramp [value]
 196:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 197:App/STM32F4-Discovery/tcpCLI.c **** 
 198:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "downramp", 8))
 1057              		.loc 1 198 0
 1058 0238 7868     		ldr	r0, [r7, #4]
 1059 023a 1E49     		ldr	r1, .L22+52
 1060 023c 0822     		movs	r2, #8
 1061 023e FFF7FEFF 		bl	strncmp
 1062 0242 0346     		mov	r3, r0
 1063 0244 002B     		cmp	r3, #0
 1064 0246 40F09380 		bne	.L17
 1065              	.LBB4:
 199:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 200:App/STM32F4-Discovery/tcpCLI.c **** 	
 201:App/STM32F4-Discovery/tcpCLI.c **** 		// now convert parameter to proper value and check if it is in range 
 202:App/STM32F4-Discovery/tcpCLI.c ****         	Value[xValueLength] = '\0'; 	
 1066              		.loc 1 202 0
 1067 024a BB6B     		ldr	r3, [r7, #56]
 1068 024c 7A6B     		ldr	r2, [r7, #52]
 1069 024e 1344     		add	r3, r3, r2
 1070 0250 0022     		movs	r2, #0
 1071 0252 1A70     		strb	r2, [r3]
 203:App/STM32F4-Discovery/tcpCLI.c **** 		uint16_t s1 = atoi ( Value ); 
 1072              		.loc 1 203 0
 1073 0254 786B     		ldr	r0, [r7, #52]
 1074 0256 FFF7FEFF 		bl	atoi
 1075 025a 0346     		mov	r3, r0
 1076 025c BB82     		strh	r3, [r7, #20]	@ movhi
 204:App/STM32F4-Discovery/tcpCLI.c **** 		// if speed is in range
 205:App/STM32F4-Discovery/tcpCLI.c **** 		if(s1 < 15 ||  s1 > 300 )
 1077              		.loc 1 205 0
 1078 025e BB8A     		ldrh	r3, [r7, #20]
 1079 0260 0E2B     		cmp	r3, #14
 1080 0262 03D9     		bls	.L18
 1081              		.loc 1 205 0 is_stmt 0 discriminator 1
 1082 0264 BB8A     		ldrh	r3, [r7, #20]
 1083 0266 B3F5967F 		cmp	r3, #300
 1084 026a 25D9     		bls	.L19
 1085              	.L18:
 206:App/STM32F4-Discovery/tcpCLI.c **** 		{
 207:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP
 208:App/STM32F4-Discovery/tcpCLI.c **** 			
 209:App/STM32F4-Discovery/tcpCLI.c **** 			xWriteBufferLen = 100; 
 1086              		.loc 1 209 0 is_stmt 1
 1087 026c 6423     		movs	r3, #100
 1088 026e BB61     		str	r3, [r7, #24]
 210:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error: Ramp time is out of range [15,300]s : %d\n\n\0", s1);
 1089              		.loc 1 210 0
 1090 0270 BB8A     		ldrh	r3, [r7, #20]
 1091 0272 F868     		ldr	r0, [r7, #12]
 1092 0274 0D49     		ldr	r1, .L22+44
 1093 0276 1A46     		mov	r2, r3
 1094 0278 FFF7FEFF 		bl	sprintf
 211:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket_0, buf, len, 0);
 212:App/STM32F4-Discovery/tcpCLI.c **** 
 213:App/STM32F4-Discovery/tcpCLI.c **** 	       		return pdFALSE; 	
 1095              		.loc 1 213 0
 1096 027c 0023     		movs	r3, #0
 1097 027e 77E0     		b	.L4
 1098              	.L23:
 1099              		.align	2
 1100              	.L22:
 1101 0280 74000000 		.word	.LC4
 1102 0284 7C000000 		.word	.LC5
 1103 0288 00000000 		.word	telegramS
 1104 028c 00000000 		.word	QSpd_handle
 1105 0290 00000000 		.word	xDelay
 1106 0294 00000000 		.word	telegramR
 1107 0298 AC000000 		.word	.LC6
 1108 029c C8000000 		.word	.LC7
 1109 02a0 DC000000 		.word	.LC8
 1110 02a4 F8000000 		.word	.LC9
 1111 02a8 10010000 		.word	.LC10
 1112 02ac 18010000 		.word	.LC11
 1113 02b0 4C010000 		.word	.LC12
 1114 02b4 68010000 		.word	.LC13
 1115              	.L19:
 214:App/STM32F4-Discovery/tcpCLI.c **** 		}	
 215:App/STM32F4-Discovery/tcpCLI.c **** 	
 216:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[3] = s1; 
 1116              		.loc 1 216 0
 1117 02b8 2F4B     		ldr	r3, .L24
 1118 02ba BA8A     		ldrh	r2, [r7, #20]	@ movhi
 1119 02bc DA81     		strh	r2, [r3, #14]	@ movhi
 217:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5; 
 1120              		.loc 1 217 0
 1121 02be 2E4B     		ldr	r3, .L24
 1122 02c0 0522     		movs	r2, #5
 1123 02c2 5A60     		str	r2, [r3, #4]
 218:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = SETDATA;
 1124              		.loc 1 218 0
 1125 02c4 2C4B     		ldr	r3, .L24
 1126 02c6 0022     		movs	r2, #0
 1127 02c8 1A70     		strb	r2, [r3]
 219:App/STM32F4-Discovery/tcpCLI.c **** 		
 220:App/STM32F4-Discovery/tcpCLI.c **** 	
 221:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 222:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 1128              		.loc 1 222 0
 1129 02ca 2C4B     		ldr	r3, .L24+4
 1130 02cc 1A68     		ldr	r2, [r3]
 1131 02ce 2C4B     		ldr	r3, .L24+8
 1132 02d0 1B68     		ldr	r3, [r3]
 1133 02d2 1046     		mov	r0, r2
 1134 02d4 2849     		ldr	r1, .L24
 1135 02d6 1A46     		mov	r2, r3
 1136 02d8 0023     		movs	r3, #0
 1137 02da FFF7FEFF 		bl	xQueueGenericSend
 1138 02de 0346     		mov	r3, r0
 1139 02e0 012B     		cmp	r3, #1
 1140 02e2 32D1     		bne	.L20
 223:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 224:App/STM32F4-Discovery/tcpCLI.c **** 					
 225:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay))
 1141              		.loc 1 225 0
 1142 02e4 254B     		ldr	r3, .L24+4
 1143 02e6 1A68     		ldr	r2, [r3]
 1144 02e8 254B     		ldr	r3, .L24+8
 1145 02ea 1B68     		ldr	r3, [r3]
 1146 02ec 1046     		mov	r0, r2
 1147 02ee 2549     		ldr	r1, .L24+12
 1148 02f0 1A46     		mov	r2, r3
 1149 02f2 0023     		movs	r3, #0
 1150 02f4 FFF7FEFF 		bl	xQueueGenericReceive
 1151 02f8 0346     		mov	r3, r0
 1152 02fa 002B     		cmp	r3, #0
 1153 02fc 38D0     		beq	.L17
 226:App/STM32F4-Discovery/tcpCLI.c **** 			{
 227:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 1154              		.loc 1 227 0
 1155 02fe 214B     		ldr	r3, .L24+12
 1156 0300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1157 0302 062B     		cmp	r3, #6
 1158 0304 12D1     		bne	.L21
 228:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 229:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Down ramp succsesfully set.\n\n");
 1159              		.loc 1 229 0
 1160 0306 FA68     		ldr	r2, [r7, #12]
 1161 0308 1F4B     		ldr	r3, .L24+16
 1162 030a 1546     		mov	r5, r2
 1163 030c 1C46     		mov	r4, r3
 1164 030e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1165 0310 2860     		str	r0, [r5]	@ unaligned
 1166 0312 6960     		str	r1, [r5, #4]	@ unaligned
 1167 0314 AA60     		str	r2, [r5, #8]	@ unaligned
 1168 0316 EB60     		str	r3, [r5, #12]	@ unaligned
 1169 0318 07CC     		ldmia	r4!, {r0, r1, r2}
 1170 031a 2861     		str	r0, [r5, #16]	@ unaligned
 1171 031c 6961     		str	r1, [r5, #20]	@ unaligned
 1172 031e AA61     		str	r2, [r5, #24]	@ unaligned
 1173 0320 2388     		ldrh	r3, [r4]	@ unaligned
 1174 0322 AB83     		strh	r3, [r5, #28]	@ unaligned
 230:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 29; 	
 1175              		.loc 1 230 0
 1176 0324 1D23     		movs	r3, #29
 1177 0326 BB61     		str	r3, [r7, #24]
 231:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 232:App/STM32F4-Discovery/tcpCLI.c **** 
 233:App/STM32F4-Discovery/tcpCLI.c **** 
 234:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 1178              		.loc 1 234 0
 1179 0328 0123     		movs	r3, #1
 1180 032a 21E0     		b	.L4
 1181              	.L21:
 235:App/STM32F4-Discovery/tcpCLI.c **** 
 236:App/STM32F4-Discovery/tcpCLI.c **** 				}
 237:App/STM32F4-Discovery/tcpCLI.c **** 				else
 238:App/STM32F4-Discovery/tcpCLI.c **** 				{
 239:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1182              		.loc 1 239 0
 1183 032c FA68     		ldr	r2, [r7, #12]
 1184 032e 174B     		ldr	r3, .L24+20
 1185 0330 1546     		mov	r5, r2
 1186 0332 1C46     		mov	r4, r3
 1187 0334 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1188 0336 2860     		str	r0, [r5]	@ unaligned
 1189 0338 6960     		str	r1, [r5, #4]	@ unaligned
 1190 033a AA60     		str	r2, [r5, #8]	@ unaligned
 1191 033c EB60     		str	r3, [r5, #12]	@ unaligned
 1192 033e 2068     		ldr	r0, [r4]	@ unaligned
 1193 0340 2861     		str	r0, [r5, #16]	@ unaligned
 240:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 1194              		.loc 1 240 0
 1195 0342 1323     		movs	r3, #19
 1196 0344 BB61     		str	r3, [r7, #24]
 241:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 242:App/STM32F4-Discovery/tcpCLI.c **** 
 243:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 1197              		.loc 1 243 0
 1198 0346 0023     		movs	r3, #0
 1199 0348 12E0     		b	.L4
 1200              	.L20:
 244:App/STM32F4-Discovery/tcpCLI.c **** 
 245:App/STM32F4-Discovery/tcpCLI.c **** 
 246:App/STM32F4-Discovery/tcpCLI.c **** 				}
 247:App/STM32F4-Discovery/tcpCLI.c **** 						
 248:App/STM32F4-Discovery/tcpCLI.c **** 			}
 249:App/STM32F4-Discovery/tcpCLI.c **** 
 250:App/STM32F4-Discovery/tcpCLI.c **** 		}
 251:App/STM32F4-Discovery/tcpCLI.c **** 		else
 252:App/STM32F4-Discovery/tcpCLI.c **** 		{
 253:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 254:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 255:App/STM32F4-Discovery/tcpCLI.c **** 		
 256:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 1201              		.loc 1 256 0
 1202 034a FA68     		ldr	r2, [r7, #12]
 1203 034c 104B     		ldr	r3, .L24+24
 1204 034e 1446     		mov	r4, r2
 1205 0350 1D46     		mov	r5, r3
 1206 0352 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1207 0354 2060     		str	r0, [r4]	@ unaligned
 1208 0356 6160     		str	r1, [r4, #4]	@ unaligned
 1209 0358 A260     		str	r2, [r4, #8]	@ unaligned
 1210 035a E360     		str	r3, [r4, #12]	@ unaligned
 1211 035c 2868     		ldr	r0, [r5]	@ unaligned
 1212 035e 2061     		str	r0, [r4, #16]	@ unaligned
 1213 0360 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1214 0362 AB79     		ldrb	r3, [r5, #6]
 1215 0364 A282     		strh	r2, [r4, #20]	@ unaligned
 1216 0366 A375     		strb	r3, [r4, #22]
 257:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1217              		.loc 1 257 0
 1218 0368 1623     		movs	r3, #22
 1219 036a BB61     		str	r3, [r7, #24]
 258:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 259:App/STM32F4-Discovery/tcpCLI.c **** 
 260:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1220              		.loc 1 260 0
 1221 036c 0023     		movs	r3, #0
 1222 036e FFE7     		b	.L4
 1223              	.L17:
 1224              	.L4:
 1225              	.LBE4:
 261:App/STM32F4-Discovery/tcpCLI.c **** 		}
 262:App/STM32F4-Discovery/tcpCLI.c **** 	
 263:App/STM32F4-Discovery/tcpCLI.c **** 		
 264:App/STM32F4-Discovery/tcpCLI.c **** 		
 265:App/STM32F4-Discovery/tcpCLI.c **** 
 266:App/STM32F4-Discovery/tcpCLI.c **** 	}
 267:App/STM32F4-Discovery/tcpCLI.c **** 			
 268:App/STM32F4-Discovery/tcpCLI.c **** }
 1226              		.loc 1 268 0
 1227 0370 1846     		mov	r0, r3
 1228 0372 2037     		adds	r7, r7, #32
 1229 0374 BD46     		mov	sp, r7
 1230              		@ sp needed
 1231 0376 B0BD     		pop	{r4, r5, r7, pc}
 1232              	.L25:
 1233              		.align	2
 1234              	.L24:
 1235 0378 00000000 		.word	telegramS
 1236 037c 00000000 		.word	QSpd_handle
 1237 0380 00000000 		.word	xDelay
 1238 0384 00000000 		.word	telegramR
 1239 0388 74010000 		.word	.LC14
 1240 038c C8000000 		.word	.LC7
 1241 0390 F8000000 		.word	.LC9
 1242              		.cfi_endproc
 1243              	.LFE111:
 1245              		.section	.rodata
 1246 0192 0000     		.align	2
 1247              	.LC15:
 1248 0194 53706565 		.ascii	"Speed is  %2d.%2dp \012\012\000\000"
 1248      64206973 
 1248      20202532 
 1248      642E2532 
 1248      6470200A 
 1249              		.section	.text.handleVariable_get,"ax",%progbits
 1250              		.align	2
 1251              		.global	handleVariable_get
 1252              		.thumb
 1253              		.thumb_func
 1255              	handleVariable_get:
 1256              	.LFB112:
 269:App/STM32F4-Discovery/tcpCLI.c **** //=======================================================================================//
 270:App/STM32F4-Discovery/tcpCLI.c **** //=======================================================================================//
 271:App/STM32F4-Discovery/tcpCLI.c **** //		GET PARAMETETERS 
 272:App/STM32F4-Discovery/tcpCLI.c **** //=======================================================================================//
 273:App/STM32F4-Discovery/tcpCLI.c **** //=======================================================================================//
 274:App/STM32F4-Discovery/tcpCLI.c **** int handleVariable_get (	
 275:App/STM32F4-Discovery/tcpCLI.c **** 				int8_t *pcWriteBuffer, 
 276:App/STM32F4-Discovery/tcpCLI.c **** 				size_t xWriteBufferLen,
 277:App/STM32F4-Discovery/tcpCLI.c **** 				uint8_t * Param, 
 278:App/STM32F4-Discovery/tcpCLI.c **** 				int xParamLength,
 279:App/STM32F4-Discovery/tcpCLI.c **** 				xQueueHandle Qhandle,
 280:App/STM32F4-Discovery/tcpCLI.c **** 				int socket )
 281:App/STM32F4-Discovery/tcpCLI.c **** {
 1257              		.loc 1 281 0
 1258              		.cfi_startproc
 1259              		@ args = 8, pretend = 0, frame = 24
 1260              		@ frame_needed = 1, uses_anonymous_args = 0
 1261 0000 B0B5     		push	{r4, r5, r7, lr}
 1262              	.LCFI5:
 1263              		.cfi_def_cfa_offset 16
 1264              		.cfi_offset 4, -16
 1265              		.cfi_offset 5, -12
 1266              		.cfi_offset 7, -8
 1267              		.cfi_offset 14, -4
 1268 0002 86B0     		sub	sp, sp, #24
 1269              	.LCFI6:
 1270              		.cfi_def_cfa_offset 40
 1271 0004 00AF     		add	r7, sp, #0
 1272              	.LCFI7:
 1273              		.cfi_def_cfa_register 7
 1274 0006 F860     		str	r0, [r7, #12]
 1275 0008 B960     		str	r1, [r7, #8]
 1276 000a 7A60     		str	r2, [r7, #4]
 1277 000c 3B60     		str	r3, [r7]
 282:App/STM32F4-Discovery/tcpCLI.c **** 
 283:App/STM32F4-Discovery/tcpCLI.c **** 
 284:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 285:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER speed [value]
 286:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 287:App/STM32F4-Discovery/tcpCLI.c **** 
 288:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "speed", 5))
 1278              		.loc 1 288 0
 1279 000e 7868     		ldr	r0, [r7, #4]
 1280 0010 3B49     		ldr	r1, .L32
 1281 0012 0522     		movs	r2, #5
 1282 0014 FFF7FEFF 		bl	strncmp
 1283 0018 0346     		mov	r3, r0
 1284 001a 002B     		cmp	r3, #0
 1285 001c 6CD1     		bne	.L27
 289:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 290:App/STM32F4-Discovery/tcpCLI.c **** 	
 291:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = GETDATA; 
 1286              		.loc 1 291 0
 1287 001e 394B     		ldr	r3, .L32+4
 1288 0020 0122     		movs	r2, #1
 1289 0022 1A70     		strb	r2, [r3]
 292:App/STM32F4-Discovery/tcpCLI.c **** 		
 293:App/STM32F4-Discovery/tcpCLI.c **** 	
 294:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 295:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 1290              		.loc 1 295 0
 1291 0024 384B     		ldr	r3, .L32+8
 1292 0026 1A68     		ldr	r2, [r3]
 1293 0028 384B     		ldr	r3, .L32+12
 1294 002a 1B68     		ldr	r3, [r3]
 1295 002c 1046     		mov	r0, r2
 1296 002e 3549     		ldr	r1, .L32+4
 1297 0030 1A46     		mov	r2, r3
 1298 0032 0023     		movs	r3, #0
 1299 0034 FFF7FEFF 		bl	xQueueGenericSend
 1300 0038 0346     		mov	r3, r0
 1301 003a 012B     		cmp	r3, #1
 1302 003c 49D1     		bne	.L28
 296:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 297:App/STM32F4-Discovery/tcpCLI.c **** 					
 298:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay)== pdPASS)
 1303              		.loc 1 298 0
 1304 003e 324B     		ldr	r3, .L32+8
 1305 0040 1A68     		ldr	r2, [r3]
 1306 0042 324B     		ldr	r3, .L32+12
 1307 0044 1B68     		ldr	r3, [r3]
 1308 0046 1046     		mov	r0, r2
 1309 0048 3149     		ldr	r1, .L32+16
 1310 004a 1A46     		mov	r2, r3
 1311 004c 0023     		movs	r3, #0
 1312 004e FFF7FEFF 		bl	xQueueGenericReceive
 1313 0052 0346     		mov	r3, r0
 1314 0054 012B     		cmp	r3, #1
 1315 0056 2BD1     		bne	.L29
 299:App/STM32F4-Discovery/tcpCLI.c **** 			{
 300:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 1316              		.loc 1 300 0
 1317 0058 2D4B     		ldr	r3, .L32+16
 1318 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1319 005c 062B     		cmp	r3, #6
 1320 005e 18D1     		bne	.L30
 301:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 302:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 303:App/STM32F4-Discovery/tcpCLI.c **** 					telegramR.data[3]/100,
 1321              		.loc 1 303 0
 1322 0060 2B4B     		ldr	r3, .L32+16
 1323 0062 DA89     		ldrh	r2, [r3, #14]
 302:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 1324              		.loc 1 302 0
 1325 0064 2B4B     		ldr	r3, .L32+20
 1326 0066 A3FB0203 		umull	r0, r3, r3, r2
 1327 006a 5B09     		lsrs	r3, r3, #5
 1328 006c 9BB2     		uxth	r3, r3
 1329 006e 1A46     		mov	r2, r3
 304:App/STM32F4-Discovery/tcpCLI.c **** 					telegramR.data[3] % 100);
 1330              		.loc 1 304 0
 1331 0070 274B     		ldr	r3, .L32+16
 1332 0072 DB89     		ldrh	r3, [r3, #14]
 302:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 1333              		.loc 1 302 0
 1334 0074 2749     		ldr	r1, .L32+20
 1335 0076 A1FB0301 		umull	r0, r1, r1, r3
 1336 007a 4909     		lsrs	r1, r1, #5
 1337 007c 6420     		movs	r0, #100
 1338 007e 00FB01F1 		mul	r1, r0, r1
 1339 0082 5B1A     		subs	r3, r3, r1
 1340 0084 9BB2     		uxth	r3, r3
 1341 0086 F868     		ldr	r0, [r7, #12]
 1342 0088 2349     		ldr	r1, .L32+24
 1343 008a FFF7FEFF 		bl	sprintf
 305:App/STM32F4-Discovery/tcpCLI.c **** 				
 306:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 307:App/STM32F4-Discovery/tcpCLI.c **** 
 308:App/STM32F4-Discovery/tcpCLI.c **** 
 309:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 1344              		.loc 1 309 0
 1345 008e 0123     		movs	r3, #1
 1346 0090 32E0     		b	.L26
 1347              	.L30:
 310:App/STM32F4-Discovery/tcpCLI.c **** 
 311:App/STM32F4-Discovery/tcpCLI.c **** 				}
 312:App/STM32F4-Discovery/tcpCLI.c **** 				else
 313:App/STM32F4-Discovery/tcpCLI.c **** 				{
 314:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1348              		.loc 1 314 0
 1349 0092 FA68     		ldr	r2, [r7, #12]
 1350 0094 214B     		ldr	r3, .L32+28
 1351 0096 1546     		mov	r5, r2
 1352 0098 1C46     		mov	r4, r3
 1353 009a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1354 009c 2860     		str	r0, [r5]	@ unaligned
 1355 009e 6960     		str	r1, [r5, #4]	@ unaligned
 1356 00a0 AA60     		str	r2, [r5, #8]	@ unaligned
 1357 00a2 EB60     		str	r3, [r5, #12]	@ unaligned
 1358 00a4 2068     		ldr	r0, [r4]	@ unaligned
 1359 00a6 2861     		str	r0, [r5, #16]	@ unaligned
 315:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 1360              		.loc 1 315 0
 1361 00a8 1323     		movs	r3, #19
 1362 00aa 7B61     		str	r3, [r7, #20]
 316:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 317:App/STM32F4-Discovery/tcpCLI.c **** 
 318:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 1363              		.loc 1 318 0
 1364 00ac 0023     		movs	r3, #0
 1365 00ae 23E0     		b	.L26
 1366              	.L29:
 319:App/STM32F4-Discovery/tcpCLI.c **** 
 320:App/STM32F4-Discovery/tcpCLI.c **** 
 321:App/STM32F4-Discovery/tcpCLI.c **** 				}
 322:App/STM32F4-Discovery/tcpCLI.c **** 						
 323:App/STM32F4-Discovery/tcpCLI.c **** 			}
 324:App/STM32F4-Discovery/tcpCLI.c **** 			else
 325:App/STM32F4-Discovery/tcpCLI.c **** 			{
 326:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 327:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 328:App/STM32F4-Discovery/tcpCLI.c **** 		
 329:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 1367              		.loc 1 329 0
 1368 00b0 FA68     		ldr	r2, [r7, #12]
 1369 00b2 1B4B     		ldr	r3, .L32+32
 1370 00b4 1546     		mov	r5, r2
 1371 00b6 1C46     		mov	r4, r3
 1372 00b8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1373 00ba 2860     		str	r0, [r5]	@ unaligned
 1374 00bc 6960     		str	r1, [r5, #4]	@ unaligned
 1375 00be AA60     		str	r2, [r5, #8]	@ unaligned
 1376 00c0 EB60     		str	r3, [r5, #12]	@ unaligned
 1377 00c2 07CC     		ldmia	r4!, {r0, r1, r2}
 1378 00c4 2861     		str	r0, [r5, #16]	@ unaligned
 1379 00c6 6961     		str	r1, [r5, #20]	@ unaligned
 1380 00c8 AA61     		str	r2, [r5, #24]	@ unaligned
 330:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 1381              		.loc 1 330 0
 1382 00ca 1B23     		movs	r3, #27
 1383 00cc 7B61     		str	r3, [r7, #20]
 331:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 332:App/STM32F4-Discovery/tcpCLI.c **** 
 333:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 1384              		.loc 1 333 0
 1385 00ce 0023     		movs	r3, #0
 1386 00d0 12E0     		b	.L26
 1387              	.L28:
 334:App/STM32F4-Discovery/tcpCLI.c **** 			}
 335:App/STM32F4-Discovery/tcpCLI.c **** 
 336:App/STM32F4-Discovery/tcpCLI.c **** 
 337:App/STM32F4-Discovery/tcpCLI.c **** 		}
 338:App/STM32F4-Discovery/tcpCLI.c **** 		else
 339:App/STM32F4-Discovery/tcpCLI.c **** 		{
 340:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 341:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 342:App/STM32F4-Discovery/tcpCLI.c **** 		
 343:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 1388              		.loc 1 343 0
 1389 00d2 FA68     		ldr	r2, [r7, #12]
 1390 00d4 134B     		ldr	r3, .L32+36
 1391 00d6 1446     		mov	r4, r2
 1392 00d8 1D46     		mov	r5, r3
 1393 00da 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1394 00dc 2060     		str	r0, [r4]	@ unaligned
 1395 00de 6160     		str	r1, [r4, #4]	@ unaligned
 1396 00e0 A260     		str	r2, [r4, #8]	@ unaligned
 1397 00e2 E360     		str	r3, [r4, #12]	@ unaligned
 1398 00e4 2868     		ldr	r0, [r5]	@ unaligned
 1399 00e6 2061     		str	r0, [r4, #16]	@ unaligned
 1400 00e8 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1401 00ea AB79     		ldrb	r3, [r5, #6]
 1402 00ec A282     		strh	r2, [r4, #20]	@ unaligned
 1403 00ee A375     		strb	r3, [r4, #22]
 344:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1404              		.loc 1 344 0
 1405 00f0 1623     		movs	r3, #22
 1406 00f2 7B61     		str	r3, [r7, #20]
 345:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 346:App/STM32F4-Discovery/tcpCLI.c **** 
 347:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1407              		.loc 1 347 0
 1408 00f4 0023     		movs	r3, #0
 1409 00f6 FFE7     		b	.L26
 1410              	.L27:
 1411              	.L26:
 348:App/STM32F4-Discovery/tcpCLI.c **** 		}
 349:App/STM32F4-Discovery/tcpCLI.c **** 	}
 350:App/STM32F4-Discovery/tcpCLI.c **** 	
 351:App/STM32F4-Discovery/tcpCLI.c **** 
 352:App/STM32F4-Discovery/tcpCLI.c **** 
 353:App/STM32F4-Discovery/tcpCLI.c **** }
 1412              		.loc 1 353 0
 1413 00f8 1846     		mov	r0, r3
 1414 00fa 1837     		adds	r7, r7, #24
 1415 00fc BD46     		mov	sp, r7
 1416              		@ sp needed
 1417 00fe B0BD     		pop	{r4, r5, r7, pc}
 1418              	.L33:
 1419              		.align	2
 1420              	.L32:
 1421 0100 74000000 		.word	.LC4
 1422 0104 00000000 		.word	telegramS
 1423 0108 00000000 		.word	QSpd_handle
 1424 010c 00000000 		.word	xDelay
 1425 0110 00000000 		.word	telegramR
 1426 0114 1F85EB51 		.word	1374389535
 1427 0118 94010000 		.word	.LC15
 1428 011c C8000000 		.word	.LC7
 1429 0120 DC000000 		.word	.LC8
 1430 0124 F8000000 		.word	.LC9
 1431              		.cfi_endproc
 1432              	.LFE112:
 1434              		.section	.rodata
 1435 01ab 00       		.align	2
 1436              	.LC16:
 1437 01ac 546F2066 		.ascii	"To few arguments. \012\012\000\000"
 1437      65772061 
 1437      7267756D 
 1437      656E7473 
 1437      2E200A0A 
 1438 01c2 0000     		.align	2
 1439              	.LC17:
 1440 01c4 68656C70 		.ascii	"help\000"
 1440      00
 1441 01c9 000000   		.align	2
 1442              	.LC18:
 1443 01cc 55736167 		.ascii	"Usage and parameters\012options:\012\011get - get m"
 1443      6520616E 
 1443      64207061 
 1443      72616D65 
 1443      74657273 
 1444 01f6 6F746F72 		.ascii	"otor parameter value\012\011set - set motor paramet"
 1444      20706172 
 1444      616D6574 
 1444      65722076 
 1444      616C7565 
 1445 0223 65722076 		.ascii	"er value\012\011start - starts motor\012\011stop - "
 1445      616C7565 
 1445      0A097374 
 1445      61727420 
 1445      2D207374 
 1446 024a 73746F70 		.ascii	"stops motor\012parametrs:\012\011speed - sets speed"
 1446      73206D6F 
 1446      746F720A 
 1446      70617261 
 1446      6D657472 
 1447 0274 0A097570 		.ascii	"\012\011upramp\012\011downramp\012\000\000"
 1447      72616D70 
 1447      0A09646F 
 1447      776E7261 
 1447      6D700A00 
 1448 0289 000000   		.align	2
 1449              	.LC19:
 1450 028c 73657400 		.ascii	"set\000"
 1451              		.align	2
 1452              	.LC20:
 1453 0290 67657400 		.ascii	"get\000"
 1454              		.align	2
 1455              	.LC21:
 1456 0294 506F7765 		.ascii	"Power In=%d, Iout=%d, Vin=%d, PrcOut=%d.%d, RPMOut="
 1456      7220496E 
 1456      3D25642C 
 1456      20496F75 
 1456      743D2564 
 1457 02c7 25642C20 		.ascii	"%d, InternalTemp=%d.%d\012\000"
 1457      496E7465 
 1457      726E616C 
 1457      54656D70 
 1457      3D25642E 
 1458 02df 00       		.align	2
 1459              	.LC22:
 1460 02e0 73746F70 		.ascii	"stop\000"
 1460      00
 1461 02e5 000000   		.align	2
 1462              	.LC23:
 1463 02e8 4D6F746F 		.ascii	"Motor succsesfully stopped.\012\012\000"
 1463      72207375 
 1463      63637365 
 1463      7366756C 
 1463      6C792073 
 1464 0306 0000     		.align	2
 1465              	.LC24:
 1466 0308 73746172 		.ascii	"start\000"
 1466      7400
 1467 030e 0000     		.align	2
 1468              	.LC25:
 1469 0310 4D6F746F 		.ascii	"Motor succsesfully started.\012\012\000"
 1469      72207375 
 1469      63637365 
 1469      7366756C 
 1469      6C792073 
 1470              		.section	.text.prvMotorCommand,"ax",%progbits
 1471              		.align	2
 1472              		.global	prvMotorCommand
 1473              		.thumb
 1474              		.thumb_func
 1476              	prvMotorCommand:
 1477              	.LFB113:
 354:App/STM32F4-Discovery/tcpCLI.c **** 
 355:App/STM32F4-Discovery/tcpCLI.c **** 
 356:App/STM32F4-Discovery/tcpCLI.c **** 
 357:App/STM32F4-Discovery/tcpCLI.c **** 
 358:App/STM32F4-Discovery/tcpCLI.c **** 
 359:App/STM32F4-Discovery/tcpCLI.c **** 
 360:App/STM32F4-Discovery/tcpCLI.c **** /* ================================================================================================
 361:App/STM32F4-Discovery/tcpCLI.c ****  * ================================================================================================
 362:App/STM32F4-Discovery/tcpCLI.c ****  * 		prvMotorCommand 
 363:App/STM32F4-Discovery/tcpCLI.c ****  * ================================================================================================
 364:App/STM32F4-Discovery/tcpCLI.c ****  * ==============================================================================================*/
 365:App/STM32F4-Discovery/tcpCLI.c **** 
 366:App/STM32F4-Discovery/tcpCLI.c **** portBASE_TYPE prvMotorCommand ( 	int8_t *pcWriteBuffer, 
 367:App/STM32F4-Discovery/tcpCLI.c **** 						size_t xWriteBufferLen, 
 368:App/STM32F4-Discovery/tcpCLI.c **** 						const int8_t *pcCommandString)
 369:App/STM32F4-Discovery/tcpCLI.c **** {
 1478              		.loc 1 369 0
 1479              		.cfi_startproc
 1480              		@ args = 0, pretend = 0, frame = 40
 1481              		@ frame_needed = 1, uses_anonymous_args = 0
 1482 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1483              	.LCFI8:
 1484              		.cfi_def_cfa_offset 24
 1485              		.cfi_offset 4, -24
 1486              		.cfi_offset 5, -20
 1487              		.cfi_offset 6, -16
 1488              		.cfi_offset 7, -12
 1489              		.cfi_offset 8, -8
 1490              		.cfi_offset 14, -4
 1491 0004 90B0     		sub	sp, sp, #64
 1492              	.LCFI9:
 1493              		.cfi_def_cfa_offset 88
 1494 0006 06AF     		add	r7, sp, #24
 1495              	.LCFI10:
 1496              		.cfi_def_cfa 7, 64
 1497 0008 F860     		str	r0, [r7, #12]
 1498 000a B960     		str	r1, [r7, #8]
 1499 000c 7A60     		str	r2, [r7, #4]
 370:App/STM32F4-Discovery/tcpCLI.c **** 	/* globals: 
 371:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	socket 
 372:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	setSpeedHandle
 373:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	QSpd_Handle
 374:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	QStatus_handle
 375:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	
 376:App/STM32F4-Discovery/tcpCLI.c **** 	 **/
 377:App/STM32F4-Discovery/tcpCLI.c **** 
 378:App/STM32F4-Discovery/tcpCLI.c **** 	int8_t *Option, *Param, *Value;
 379:App/STM32F4-Discovery/tcpCLI.c **** 	int xOptionLength, xParamLength, xValueLength; 
 380:App/STM32F4-Discovery/tcpCLI.c **** 	//QueueTelegram telegram; 
 381:App/STM32F4-Discovery/tcpCLI.c **** 	telegram_init();	
 1500              		.loc 1 381 0
 1501 000e FFF7FEFF 		bl	telegram_init
 382:App/STM32F4-Discovery/tcpCLI.c **** 	// get option from command line 
 383:App/STM32F4-Discovery/tcpCLI.c **** 
 384:App/STM32F4-Discovery/tcpCLI.c **** 	Option = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1502              		.loc 1 384 0
 1503 0012 07F11803 		add	r3, r7, #24
 1504 0016 7868     		ldr	r0, [r7, #4]
 1505 0018 0121     		movs	r1, #1
 1506 001a 1A46     		mov	r2, r3
 1507 001c FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1508 0020 7862     		str	r0, [r7, #36]
 385:App/STM32F4-Discovery/tcpCLI.c **** 					  1,  		   // first parameter
 386:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xOptionLength // parameter string length
 387:App/STM32F4-Discovery/tcpCLI.c **** 					  
 388:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 389:App/STM32F4-Discovery/tcpCLI.c **** 
 390:App/STM32F4-Discovery/tcpCLI.c **** 	if ( Option == NULL)
 1509              		.loc 1 390 0
 1510 0022 7B6A     		ldr	r3, [r7, #36]
 1511 0024 002B     		cmp	r3, #0
 1512 0026 0ED1     		bne	.L35
 391:App/STM32F4-Discovery/tcpCLI.c **** 	{
 392:App/STM32F4-Discovery/tcpCLI.c **** 		sprintf(pcWriteBuffer, "To few arguments. \n\n\0");
 1513              		.loc 1 392 0
 1514 0028 FA68     		ldr	r2, [r7, #12]
 1515 002a 9C4B     		ldr	r3, .L57
 1516 002c 1546     		mov	r5, r2
 1517 002e 1C46     		mov	r4, r3
 1518 0030 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1519 0032 2860     		str	r0, [r5]	@ unaligned
 1520 0034 6960     		str	r1, [r5, #4]	@ unaligned
 1521 0036 AA60     		str	r2, [r5, #8]	@ unaligned
 1522 0038 EB60     		str	r3, [r5, #12]	@ unaligned
 1523 003a 2068     		ldr	r0, [r4]	@ unaligned
 1524 003c 2861     		str	r0, [r5, #16]	@ unaligned
 1525 003e 2379     		ldrb	r3, [r4, #4]
 1526 0040 2B75     		strb	r3, [r5, #20]
 393:App/STM32F4-Discovery/tcpCLI.c **** 		return pdFALSE;
 1527              		.loc 1 393 0
 1528 0042 0023     		movs	r3, #0
 1529 0044 36E2     		b	.L56
 1530              	.L35:
 394:App/STM32F4-Discovery/tcpCLI.c **** 	}
 395:App/STM32F4-Discovery/tcpCLI.c **** 
 396:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp(Option, "help", 4))
 1531              		.loc 1 396 0
 1532 0046 786A     		ldr	r0, [r7, #36]
 1533 0048 9549     		ldr	r1, .L57+4
 1534 004a 0422     		movs	r2, #4
 1535 004c FFF7FEFF 		bl	strncmp
 1536 0050 0346     		mov	r3, r0
 1537 0052 002B     		cmp	r3, #0
 1538 0054 0BD1     		bne	.L37
 397:App/STM32F4-Discovery/tcpCLI.c **** 	{
 398:App/STM32F4-Discovery/tcpCLI.c **** 		strcpy(pcWriteBuffer, 
 1539              		.loc 1 398 0
 1540 0056 FA68     		ldr	r2, [r7, #12]
 1541 0058 924B     		ldr	r3, .L57+8
 1542 005a 1146     		mov	r1, r2
 1543 005c 1A46     		mov	r2, r3
 1544 005e BC23     		movs	r3, #188
 1545 0060 0846     		mov	r0, r1
 1546 0062 1146     		mov	r1, r2
 1547 0064 1A46     		mov	r2, r3
 1548 0066 FFF7FEFF 		bl	memcpy
 399:App/STM32F4-Discovery/tcpCLI.c **** 			"Usage and parameters\n"
 400:App/STM32F4-Discovery/tcpCLI.c **** 			"options:\n"
 401:App/STM32F4-Discovery/tcpCLI.c **** 			"\tget - get motor parameter value\n"
 402:App/STM32F4-Discovery/tcpCLI.c **** 			"\tset - set motor parameter value\n"
 403:App/STM32F4-Discovery/tcpCLI.c **** 			"\tstart - starts motor\n"
 404:App/STM32F4-Discovery/tcpCLI.c **** 			"\tstop - stops motor\n"
 405:App/STM32F4-Discovery/tcpCLI.c **** 			"parametrs:\n"
 406:App/STM32F4-Discovery/tcpCLI.c **** 			"\tspeed - sets speed\n"
 407:App/STM32F4-Discovery/tcpCLI.c **** 			"\tupramp\n"
 408:App/STM32F4-Discovery/tcpCLI.c **** 			"\tdownramp\n"
 409:App/STM32F4-Discovery/tcpCLI.c **** 
 410:App/STM32F4-Discovery/tcpCLI.c **** 			
 411:App/STM32F4-Discovery/tcpCLI.c **** 			"\0"
 412:App/STM32F4-Discovery/tcpCLI.c **** 
 413:App/STM32F4-Discovery/tcpCLI.c **** 		      );
 414:App/STM32F4-Discovery/tcpCLI.c **** 
 415:App/STM32F4-Discovery/tcpCLI.c **** 		return pdPASS;
 1549              		.loc 1 415 0
 1550 006a 0123     		movs	r3, #1
 1551 006c 22E2     		b	.L56
 1552              	.L37:
 416:App/STM32F4-Discovery/tcpCLI.c **** 	}
 417:App/STM32F4-Discovery/tcpCLI.c **** 
 418:App/STM32F4-Discovery/tcpCLI.c **** 
 419:App/STM32F4-Discovery/tcpCLI.c ****     //	vTaskResume(motorHBHandle);
 420:App/STM32F4-Discovery/tcpCLI.c **** 
 421:App/STM32F4-Discovery/tcpCLI.c **** 
 422:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 423:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND SET [parameter name] [value]
 424:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 425:App/STM32F4-Discovery/tcpCLI.c **** 
 426:App/STM32F4-Discovery/tcpCLI.c **** 	if( !strncmp( Option, "set", 3) ) 
 1553              		.loc 1 426 0
 1554 006e 786A     		ldr	r0, [r7, #36]
 1555 0070 8D49     		ldr	r1, .L57+12
 1556 0072 0322     		movs	r2, #3
 1557 0074 FFF7FEFF 		bl	strncmp
 1558 0078 0346     		mov	r3, r0
 1559 007a 002B     		cmp	r3, #0
 1560 007c 33D1     		bne	.L38
 427:App/STM32F4-Discovery/tcpCLI.c **** 	{
 428:App/STM32F4-Discovery/tcpCLI.c **** 
 429:App/STM32F4-Discovery/tcpCLI.c **** 		// get parameter from command line 
 430:App/STM32F4-Discovery/tcpCLI.c **** 	
 431:App/STM32F4-Discovery/tcpCLI.c **** 		Param = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1561              		.loc 1 431 0
 1562 007e 07F11403 		add	r3, r7, #20
 1563 0082 7868     		ldr	r0, [r7, #4]
 1564 0084 0221     		movs	r1, #2
 1565 0086 1A46     		mov	r2, r3
 1566 0088 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1567 008c 3862     		str	r0, [r7, #32]
 432:App/STM32F4-Discovery/tcpCLI.c **** 					  2,  		   // 2nd parameter
 433:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xParamLength // parameter string length
 434:App/STM32F4-Discovery/tcpCLI.c **** 					  
 435:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 436:App/STM32F4-Discovery/tcpCLI.c **** 		Value = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1568              		.loc 1 436 0
 1569 008e 07F11003 		add	r3, r7, #16
 1570 0092 7868     		ldr	r0, [r7, #4]
 1571 0094 0321     		movs	r1, #3
 1572 0096 1A46     		mov	r2, r3
 1573 0098 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1574 009c F861     		str	r0, [r7, #28]
 437:App/STM32F4-Discovery/tcpCLI.c **** 					  3,  		   // 2nd parameter
 438:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xValueLength // parameter string length
 439:App/STM32F4-Discovery/tcpCLI.c **** 					  
 440:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 441:App/STM32F4-Discovery/tcpCLI.c **** 		
 442:App/STM32F4-Discovery/tcpCLI.c **** 		// return pdFALSE if there is no 3rd parameter 
 443:App/STM32F4-Discovery/tcpCLI.c **** 
 444:App/STM32F4-Discovery/tcpCLI.c **** 		if (Value==NULL||Param==NULL)
 1575              		.loc 1 444 0
 1576 009e FB69     		ldr	r3, [r7, #28]
 1577 00a0 002B     		cmp	r3, #0
 1578 00a2 02D0     		beq	.L39
 1579              		.loc 1 444 0 is_stmt 0 discriminator 1
 1580 00a4 3B6A     		ldr	r3, [r7, #32]
 1581 00a6 002B     		cmp	r3, #0
 1582 00a8 06D1     		bne	.L40
 1583              	.L39:
 445:App/STM32F4-Discovery/tcpCLI.c **** 		{
 446:App/STM32F4-Discovery/tcpCLI.c **** 			strcpy(pcWriteBuffer, xMotorCommand.pcHelpString);
 1584              		.loc 1 446 0 is_stmt 1
 1585 00aa 804B     		ldr	r3, .L57+16
 1586 00ac F868     		ldr	r0, [r7, #12]
 1587 00ae 1946     		mov	r1, r3
 1588 00b0 FFF7FEFF 		bl	strcpy
 447:App/STM32F4-Discovery/tcpCLI.c **** 
 448:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 
 1589              		.loc 1 448 0
 1590 00b4 0023     		movs	r3, #0
 1591 00b6 FDE1     		b	.L56
 1592              	.L40:
 449:App/STM32F4-Discovery/tcpCLI.c **** 
 450:App/STM32F4-Discovery/tcpCLI.c **** 		}
 451:App/STM32F4-Discovery/tcpCLI.c **** 
 452:App/STM32F4-Discovery/tcpCLI.c **** 		
 453:App/STM32F4-Discovery/tcpCLI.c **** 		if ( handleVariable_set ( 
 1593              		.loc 1 453 0
 1594 00b8 7B69     		ldr	r3, [r7, #20]
 1595 00ba 7D4A     		ldr	r2, .L57+20
 1596 00bc 1068     		ldr	r0, [r2]
 1597 00be 3969     		ldr	r1, [r7, #16]
 1598 00c0 7C4A     		ldr	r2, .L57+24
 1599 00c2 1268     		ldr	r2, [r2]
 1600 00c4 0090     		str	r0, [sp]
 1601 00c6 F869     		ldr	r0, [r7, #28]
 1602 00c8 0190     		str	r0, [sp, #4]
 1603 00ca 0291     		str	r1, [sp, #8]
 1604 00cc 0392     		str	r2, [sp, #12]
 1605 00ce F868     		ldr	r0, [r7, #12]
 1606 00d0 B968     		ldr	r1, [r7, #8]
 1607 00d2 3A6A     		ldr	r2, [r7, #32]
 1608 00d4 FFF7FEFF 		bl	handleVariable_set
 1609 00d8 0346     		mov	r3, r0
 1610 00da 002B     		cmp	r3, #0
 1611 00dc 01D0     		beq	.L41
 454:App/STM32F4-Discovery/tcpCLI.c **** 				           pcWriteBuffer, 
 455:App/STM32F4-Discovery/tcpCLI.c **** 					   xWriteBufferLen,
 456:App/STM32F4-Discovery/tcpCLI.c **** 					   Param, 
 457:App/STM32F4-Discovery/tcpCLI.c **** 					   xParamLength, 
 458:App/STM32F4-Discovery/tcpCLI.c **** 					   QSpd_handle, 
 459:App/STM32F4-Discovery/tcpCLI.c **** 					   Value,
 460:App/STM32F4-Discovery/tcpCLI.c **** 					   xValueLength,  
 461:App/STM32F4-Discovery/tcpCLI.c **** 					   socket_0)) return pdPASS;
 1612              		.loc 1 461 0
 1613 00de 0123     		movs	r3, #1
 1614 00e0 E8E1     		b	.L56
 1615              	.L41:
 462:App/STM32F4-Discovery/tcpCLI.c **** 
 463:App/STM32F4-Discovery/tcpCLI.c **** 		
 464:App/STM32F4-Discovery/tcpCLI.c **** 			
 465:App/STM32F4-Discovery/tcpCLI.c **** 		return pdFALSE;
 1616              		.loc 1 465 0
 1617 00e2 0023     		movs	r3, #0
 1618 00e4 E6E1     		b	.L56
 1619              	.L38:
 466:App/STM32F4-Discovery/tcpCLI.c **** 
 467:App/STM32F4-Discovery/tcpCLI.c **** 	}
 468:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 469:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND GET [parameter name] [value]
 470:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 471:App/STM32F4-Discovery/tcpCLI.c **** 
 472:App/STM32F4-Discovery/tcpCLI.c **** 
 473:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "get", 3))
 1620              		.loc 1 473 0
 1621 00e6 786A     		ldr	r0, [r7, #36]
 1622 00e8 7349     		ldr	r1, .L57+28
 1623 00ea 0322     		movs	r2, #3
 1624 00ec FFF7FEFF 		bl	strncmp
 1625 00f0 0346     		mov	r3, r0
 1626 00f2 002B     		cmp	r3, #0
 1627 00f4 40F0F480 		bne	.L42
 474:App/STM32F4-Discovery/tcpCLI.c **** 	{
 475:App/STM32F4-Discovery/tcpCLI.c **** 		// get parameter from command line 
 476:App/STM32F4-Discovery/tcpCLI.c **** 	
 477:App/STM32F4-Discovery/tcpCLI.c **** 		Param = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1628              		.loc 1 477 0
 1629 00f8 07F11403 		add	r3, r7, #20
 1630 00fc 7868     		ldr	r0, [r7, #4]
 1631 00fe 0221     		movs	r1, #2
 1632 0100 1A46     		mov	r2, r3
 1633 0102 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1634 0106 3862     		str	r0, [r7, #32]
 478:App/STM32F4-Discovery/tcpCLI.c **** 					  2,  		   // 2nd parameter
 479:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xParamLength // parameter string length
 480:App/STM32F4-Discovery/tcpCLI.c **** 					  
 481:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 482:App/STM32F4-Discovery/tcpCLI.c **** 			
 483:App/STM32F4-Discovery/tcpCLI.c **** 		// return pdFALSE if there is no 3rd parameter 
 484:App/STM32F4-Discovery/tcpCLI.c **** 
 485:App/STM32F4-Discovery/tcpCLI.c **** 		if(Param==NULL)
 1635              		.loc 1 485 0
 1636 0108 3B6A     		ldr	r3, [r7, #32]
 1637 010a 002B     		cmp	r3, #0
 1638 010c 40F0B380 		bne	.L43
 486:App/STM32F4-Discovery/tcpCLI.c **** 		{
 487:App/STM32F4-Discovery/tcpCLI.c **** 			telegramS.Qcmd = GETDATA;
 1639              		.loc 1 487 0
 1640 0110 6A4B     		ldr	r3, .L57+32
 1641 0112 0122     		movs	r2, #1
 1642 0114 1A70     		strb	r2, [r3]
 488:App/STM32F4-Discovery/tcpCLI.c **** 		
 489:App/STM32F4-Discovery/tcpCLI.c **** 			if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) )
 1643              		.loc 1 489 0
 1644 0116 664B     		ldr	r3, .L57+20
 1645 0118 1A68     		ldr	r2, [r3]
 1646 011a 694B     		ldr	r3, .L57+36
 1647 011c 1B68     		ldr	r3, [r3]
 1648 011e 1046     		mov	r0, r2
 1649 0120 6649     		ldr	r1, .L57+32
 1650 0122 1A46     		mov	r2, r3
 1651 0124 0023     		movs	r3, #0
 1652 0126 FFF7FEFF 		bl	xQueueGenericSend
 1653 012a 0346     		mov	r3, r0
 1654 012c 002B     		cmp	r3, #0
 1655 012e 00F08F80 		beq	.L44
 490:App/STM32F4-Discovery/tcpCLI.c **** 			{	
 491:App/STM32F4-Discovery/tcpCLI.c **** 					
 492:App/STM32F4-Discovery/tcpCLI.c **** 				if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay)== pdPASS)
 1656              		.loc 1 492 0
 1657 0132 5F4B     		ldr	r3, .L57+20
 1658 0134 1A68     		ldr	r2, [r3]
 1659 0136 624B     		ldr	r3, .L57+36
 1660 0138 1B68     		ldr	r3, [r3]
 1661 013a 1046     		mov	r0, r2
 1662 013c 6149     		ldr	r1, .L57+40
 1663 013e 1A46     		mov	r2, r3
 1664 0140 0023     		movs	r3, #0
 1665 0142 FFF7FEFF 		bl	xQueueGenericReceive
 1666 0146 0346     		mov	r3, r0
 1667 0148 012B     		cmp	r3, #1
 1668 014a 70D1     		bne	.L45
 493:App/STM32F4-Discovery/tcpCLI.c **** 				{
 494:App/STM32F4-Discovery/tcpCLI.c **** 					if ( telegramR.Qcmd == SUCCSESS) 
 1669              		.loc 1 494 0
 1670 014c 5D4B     		ldr	r3, .L57+40
 1671 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1672 0150 062B     		cmp	r3, #6
 1673 0152 5DD1     		bne	.L46
 495:App/STM32F4-Discovery/tcpCLI.c **** 					{
 496:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 497:App/STM32F4-Discovery/tcpCLI.c **** 					telegramR.data[3]/100,
 1674              		.loc 1 497 0
 1675 0154 5B4B     		ldr	r3, .L57+40
 1676 0156 DA89     		ldrh	r2, [r3, #14]
 496:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 1677              		.loc 1 496 0
 1678 0158 5B4B     		ldr	r3, .L57+44
 1679 015a A3FB0203 		umull	r0, r3, r3, r2
 1680 015e 5B09     		lsrs	r3, r3, #5
 1681 0160 9BB2     		uxth	r3, r3
 1682 0162 1A46     		mov	r2, r3
 498:App/STM32F4-Discovery/tcpCLI.c **** 					telegramR.data[3] % 100);
 1683              		.loc 1 498 0
 1684 0164 574B     		ldr	r3, .L57+40
 1685 0166 DB89     		ldrh	r3, [r3, #14]
 496:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 1686              		.loc 1 496 0
 1687 0168 5749     		ldr	r1, .L57+44
 1688 016a A1FB0381 		umull	r8, r1, r1, r3
 1689 016e 4909     		lsrs	r1, r1, #5
 1690 0170 6420     		movs	r0, #100
 1691 0172 00FB01F1 		mul	r1, r0, r1
 1692 0176 5B1A     		subs	r3, r3, r1
 1693 0178 9BB2     		uxth	r3, r3
 1694 017a F868     		ldr	r0, [r7, #12]
 1695 017c 5349     		ldr	r1, .L57+48
 1696 017e FFF7FEFF 		bl	sprintf
 499:App/STM32F4-Discovery/tcpCLI.c **** 
 500:App/STM32F4-Discovery/tcpCLI.c **** 
 501:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 502:App/STM32F4-Discovery/tcpCLI.c **** 							"Power In=%d, Iout=%d, Vin=%d, "
 503:App/STM32F4-Discovery/tcpCLI.c **** 							"PrcOut=%d.%d, RPMOut=%d, "
 504:App/STM32F4-Discovery/tcpCLI.c **** 							"InternalTemp=%d.%d\n",
 505:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[8],
 1697              		.loc 1 505 0
 1698 0182 504B     		ldr	r3, .L57+40
 1699 0184 1B8B     		ldrh	r3, [r3, #24]
 501:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1700              		.loc 1 501 0
 1701 0186 1A46     		mov	r2, r3
 506:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[7],
 1702              		.loc 1 506 0
 1703 0188 4E4B     		ldr	r3, .L57+40
 1704 018a DB8A     		ldrh	r3, [r3, #22]
 501:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1705              		.loc 1 501 0
 1706 018c 1C46     		mov	r4, r3
 507:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[6],
 1707              		.loc 1 507 0
 1708 018e 4D4B     		ldr	r3, .L57+40
 1709 0190 9B8A     		ldrh	r3, [r3, #20]
 501:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1710              		.loc 1 501 0
 1711 0192 9E46     		mov	lr, r3
 508:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[3]/100,
 1712              		.loc 1 508 0
 1713 0194 4B4B     		ldr	r3, .L57+40
 1714 0196 D989     		ldrh	r1, [r3, #14]
 501:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1715              		.loc 1 501 0
 1716 0198 4B4B     		ldr	r3, .L57+44
 1717 019a A3FB01C3 		umull	ip, r3, r3, r1
 1718 019e 5B09     		lsrs	r3, r3, #5
 1719 01a0 9BB2     		uxth	r3, r3
 1720 01a2 1E46     		mov	r6, r3
 509:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[3] % 100, 
 1721              		.loc 1 509 0
 1722 01a4 474B     		ldr	r3, .L57+40
 1723 01a6 DB89     		ldrh	r3, [r3, #14]
 501:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1724              		.loc 1 501 0
 1725 01a8 4749     		ldr	r1, .L57+44
 1726 01aa A1FB0301 		umull	r0, r1, r1, r3
 1727 01ae 4909     		lsrs	r1, r1, #5
 1728 01b0 6420     		movs	r0, #100
 1729 01b2 00FB01F1 		mul	r1, r0, r1
 1730 01b6 5B1A     		subs	r3, r3, r1
 1731 01b8 9BB2     		uxth	r3, r3
 1732 01ba 1D46     		mov	r5, r3
 510:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[4],
 1733              		.loc 1 510 0
 1734 01bc 414B     		ldr	r3, .L57+40
 1735 01be 1B8A     		ldrh	r3, [r3, #16]
 501:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1736              		.loc 1 501 0
 1737 01c0 1846     		mov	r0, r3
 511:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[5]/100,
 1738              		.loc 1 511 0
 1739 01c2 404B     		ldr	r3, .L57+40
 1740 01c4 598A     		ldrh	r1, [r3, #18]
 501:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1741              		.loc 1 501 0
 1742 01c6 404B     		ldr	r3, .L57+44
 1743 01c8 A3FB0183 		umull	r8, r3, r3, r1
 1744 01cc 5B09     		lsrs	r3, r3, #5
 1745 01ce 9BB2     		uxth	r3, r3
 1746 01d0 1946     		mov	r1, r3
 512:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[5] % 100);
 1747              		.loc 1 512 0
 1748 01d2 3C4B     		ldr	r3, .L57+40
 1749 01d4 5B8A     		ldrh	r3, [r3, #18]
 501:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1750              		.loc 1 501 0
 1751 01d6 DFF8F0C0 		ldr	ip, .L57+44
 1752 01da ACFB038C 		umull	r8, ip, ip, r3
 1753 01de 4FEA5C1C 		lsr	ip, ip, #5
 1754 01e2 4FF06408 		mov	r8, #100
 1755 01e6 08FB0CFC 		mul	ip, r8, ip
 1756 01ea CCEB0303 		rsb	r3, ip, r3
 1757 01ee 9BB2     		uxth	r3, r3
 1758 01f0 CDF800E0 		str	lr, [sp]
 1759 01f4 0196     		str	r6, [sp, #4]
 1760 01f6 0295     		str	r5, [sp, #8]
 1761 01f8 0390     		str	r0, [sp, #12]
 1762 01fa 0491     		str	r1, [sp, #16]
 1763 01fc 0593     		str	r3, [sp, #20]
 1764 01fe F868     		ldr	r0, [r7, #12]
 1765 0200 3349     		ldr	r1, .L57+52
 1766 0202 2346     		mov	r3, r4
 1767 0204 FFF7FEFF 		bl	sprintf
 513:App/STM32F4-Discovery/tcpCLI.c **** 						xWriteBufferLen = 50 ; 	
 1768              		.loc 1 513 0
 1769 0208 3223     		movs	r3, #50
 1770 020a BB60     		str	r3, [r7, #8]
 514:App/STM32F4-Discovery/tcpCLI.c **** 						//send( socket_0, buf, len, 0);
 515:App/STM32F4-Discovery/tcpCLI.c **** 
 516:App/STM32F4-Discovery/tcpCLI.c **** 					
 517:App/STM32F4-Discovery/tcpCLI.c **** 						return pdPASS;
 1771              		.loc 1 517 0
 1772 020c 0123     		movs	r3, #1
 1773 020e 51E1     		b	.L56
 1774              	.L46:
 518:App/STM32F4-Discovery/tcpCLI.c **** 
 519:App/STM32F4-Discovery/tcpCLI.c **** 					}
 520:App/STM32F4-Discovery/tcpCLI.c **** 					else
 521:App/STM32F4-Discovery/tcpCLI.c **** 					{
 522:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1775              		.loc 1 522 0
 1776 0210 FA68     		ldr	r2, [r7, #12]
 1777 0212 304B     		ldr	r3, .L57+56
 1778 0214 1546     		mov	r5, r2
 1779 0216 1C46     		mov	r4, r3
 1780 0218 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1781 021a 2860     		str	r0, [r5]	@ unaligned
 1782 021c 6960     		str	r1, [r5, #4]	@ unaligned
 1783 021e AA60     		str	r2, [r5, #8]	@ unaligned
 1784 0220 EB60     		str	r3, [r5, #12]	@ unaligned
 1785 0222 2068     		ldr	r0, [r4]	@ unaligned
 1786 0224 2861     		str	r0, [r5, #16]	@ unaligned
 523:App/STM32F4-Discovery/tcpCLI.c **** 			       			xWriteBufferLen = 19; 	
 1787              		.loc 1 523 0
 1788 0226 1323     		movs	r3, #19
 1789 0228 BB60     		str	r3, [r7, #8]
 524:App/STM32F4-Discovery/tcpCLI.c **** 						//send( socket_0, buf, len, 0);
 525:App/STM32F4-Discovery/tcpCLI.c **** 
 526:App/STM32F4-Discovery/tcpCLI.c **** 						return pdFALSE;
 1790              		.loc 1 526 0
 1791 022a 0023     		movs	r3, #0
 1792 022c 42E1     		b	.L56
 1793              	.L45:
 527:App/STM32F4-Discovery/tcpCLI.c **** 
 528:App/STM32F4-Discovery/tcpCLI.c **** 
 529:App/STM32F4-Discovery/tcpCLI.c **** 					}
 530:App/STM32F4-Discovery/tcpCLI.c **** 				}
 531:App/STM32F4-Discovery/tcpCLI.c **** 				else
 532:App/STM32F4-Discovery/tcpCLI.c **** 				{
 533:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 534:App/STM32F4-Discovery/tcpCLI.c **** 					// send error via TCP 
 535:App/STM32F4-Discovery/tcpCLI.c **** 		
 536:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 1794              		.loc 1 536 0
 1795 022e FA68     		ldr	r2, [r7, #12]
 1796 0230 294B     		ldr	r3, .L57+60
 1797 0232 1546     		mov	r5, r2
 1798 0234 1C46     		mov	r4, r3
 1799 0236 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1800 0238 2860     		str	r0, [r5]	@ unaligned
 1801 023a 6960     		str	r1, [r5, #4]	@ unaligned
 1802 023c AA60     		str	r2, [r5, #8]	@ unaligned
 1803 023e EB60     		str	r3, [r5, #12]	@ unaligned
 1804 0240 07CC     		ldmia	r4!, {r0, r1, r2}
 1805 0242 2861     		str	r0, [r5, #16]	@ unaligned
 1806 0244 6961     		str	r1, [r5, #20]	@ unaligned
 1807 0246 AA61     		str	r2, [r5, #24]	@ unaligned
 537:App/STM32F4-Discovery/tcpCLI.c **** 	 				xWriteBufferLen = 27; 	
 1808              		.loc 1 537 0
 1809 0248 1B23     		movs	r3, #27
 1810 024a BB60     		str	r3, [r7, #8]
 538:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 539:App/STM32F4-Discovery/tcpCLI.c **** 
 540:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE; 	
 1811              		.loc 1 540 0
 1812 024c 0023     		movs	r3, #0
 1813 024e 31E1     		b	.L56
 1814              	.L44:
 541:App/STM32F4-Discovery/tcpCLI.c **** 				}	
 542:App/STM32F4-Discovery/tcpCLI.c **** 			}
 543:App/STM32F4-Discovery/tcpCLI.c **** 			else
 544:App/STM32F4-Discovery/tcpCLI.c **** 			{
 545:App/STM32F4-Discovery/tcpCLI.c **** 			
 546:App/STM32F4-Discovery/tcpCLI.c **** 				// send to Queue was unsuccsessful
 547:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 548:App/STM32F4-Discovery/tcpCLI.c **** 		
 549:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 1815              		.loc 1 549 0
 1816 0250 FA68     		ldr	r2, [r7, #12]
 1817 0252 224B     		ldr	r3, .L57+64
 1818 0254 1446     		mov	r4, r2
 1819 0256 1D46     		mov	r5, r3
 1820 0258 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1821 025a 2060     		str	r0, [r4]	@ unaligned
 1822 025c 6160     		str	r1, [r4, #4]	@ unaligned
 1823 025e A260     		str	r2, [r4, #8]	@ unaligned
 1824 0260 E360     		str	r3, [r4, #12]	@ unaligned
 1825 0262 2868     		ldr	r0, [r5]	@ unaligned
 1826 0264 2061     		str	r0, [r4, #16]	@ unaligned
 1827 0266 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1828 0268 AB79     		ldrb	r3, [r5, #6]
 1829 026a A282     		strh	r2, [r4, #20]	@ unaligned
 1830 026c A375     		strb	r3, [r4, #22]
 550:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 22; 	
 1831              		.loc 1 550 0
 1832 026e 1623     		movs	r3, #22
 1833 0270 BB60     		str	r3, [r7, #8]
 551:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket, buf, len, 0);
 552:App/STM32F4-Discovery/tcpCLI.c **** 
 553:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 1834              		.loc 1 553 0
 1835 0272 0023     		movs	r3, #0
 1836 0274 1EE1     		b	.L56
 1837              	.L43:
 554:App/STM32F4-Discovery/tcpCLI.c **** 			}
 555:App/STM32F4-Discovery/tcpCLI.c **** 		
 556:App/STM32F4-Discovery/tcpCLI.c **** 		
 557:App/STM32F4-Discovery/tcpCLI.c **** 		}
 558:App/STM32F4-Discovery/tcpCLI.c **** 
 559:App/STM32F4-Discovery/tcpCLI.c **** 		
 560:App/STM32F4-Discovery/tcpCLI.c **** 		if ( handleVariable_get ( 
 1838              		.loc 1 560 0
 1839 0276 7B69     		ldr	r3, [r7, #20]
 1840 0278 0D4A     		ldr	r2, .L57+20
 1841 027a 1168     		ldr	r1, [r2]
 1842 027c 0D4A     		ldr	r2, .L57+24
 1843 027e 1268     		ldr	r2, [r2]
 1844 0280 0091     		str	r1, [sp]
 1845 0282 0192     		str	r2, [sp, #4]
 1846 0284 F868     		ldr	r0, [r7, #12]
 1847 0286 B968     		ldr	r1, [r7, #8]
 1848 0288 3A6A     		ldr	r2, [r7, #32]
 1849 028a FFF7FEFF 		bl	handleVariable_get
 1850 028e 0346     		mov	r3, r0
 1851 0290 002B     		cmp	r3, #0
 1852 0292 01D0     		beq	.L47
 561:App/STM32F4-Discovery/tcpCLI.c **** 				        pcWriteBuffer, 
 562:App/STM32F4-Discovery/tcpCLI.c **** 					   xWriteBufferLen,
 563:App/STM32F4-Discovery/tcpCLI.c **** 	
 564:App/STM32F4-Discovery/tcpCLI.c **** 				           Param, 
 565:App/STM32F4-Discovery/tcpCLI.c **** 					   xParamLength, 
 566:App/STM32F4-Discovery/tcpCLI.c **** 					   QSpd_handle, 
 567:App/STM32F4-Discovery/tcpCLI.c **** 					   socket_0)) return pdPASS;
 1853              		.loc 1 567 0
 1854 0294 0123     		movs	r3, #1
 1855 0296 0DE1     		b	.L56
 1856              	.L47:
 568:App/STM32F4-Discovery/tcpCLI.c **** 		return pdFALSE;
 1857              		.loc 1 568 0
 1858 0298 0023     		movs	r3, #0
 1859 029a 0BE1     		b	.L56
 1860              	.L58:
 1861              		.align	2
 1862              	.L57:
 1863 029c AC010000 		.word	.LC16
 1864 02a0 C4010000 		.word	.LC17
 1865 02a4 CC010000 		.word	.LC18
 1866 02a8 8C020000 		.word	.LC19
 1867 02ac 08000000 		.word	.LC1
 1868 02b0 00000000 		.word	QSpd_handle
 1869 02b4 00000000 		.word	socket_0
 1870 02b8 90020000 		.word	.LC20
 1871 02bc 00000000 		.word	telegramS
 1872 02c0 00000000 		.word	xDelay
 1873 02c4 00000000 		.word	telegramR
 1874 02c8 1F85EB51 		.word	1374389535
 1875 02cc 94010000 		.word	.LC15
 1876 02d0 94020000 		.word	.LC21
 1877 02d4 C8000000 		.word	.LC7
 1878 02d8 DC000000 		.word	.LC8
 1879 02dc F8000000 		.word	.LC9
 1880              	.L42:
 569:App/STM32F4-Discovery/tcpCLI.c **** 
 570:App/STM32F4-Discovery/tcpCLI.c **** 
 571:App/STM32F4-Discovery/tcpCLI.c **** 	}
 572:App/STM32F4-Discovery/tcpCLI.c **** 		
 573:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 574:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND STOP 
 575:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 576:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "stop", 4))
 1881              		.loc 1 576 0
 1882 02e0 786A     		ldr	r0, [r7, #36]
 1883 02e2 7749     		ldr	r1, .L59
 1884 02e4 0422     		movs	r2, #4
 1885 02e6 FFF7FEFF 		bl	strncmp
 1886 02ea 0346     		mov	r3, r0
 1887 02ec 002B     		cmp	r3, #0
 1888 02ee 69D1     		bne	.L48
 577:App/STM32F4-Discovery/tcpCLI.c **** 	{
 578:App/STM32F4-Discovery/tcpCLI.c **** 
 579:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = STOP; 
 1889              		.loc 1 579 0
 1890 02f0 744B     		ldr	r3, .L59+4
 1891 02f2 0522     		movs	r2, #5
 1892 02f4 1A70     		strb	r2, [r3]
 580:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5; 
 1893              		.loc 1 580 0
 1894 02f6 734B     		ldr	r3, .L59+4
 1895 02f8 0522     		movs	r2, #5
 1896 02fa 5A60     		str	r2, [r3, #4]
 581:App/STM32F4-Discovery/tcpCLI.c **** 			// send value to setSpeed_task via Queue 
 582:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) )
 1897              		.loc 1 582 0
 1898 02fc 724B     		ldr	r3, .L59+8
 1899 02fe 1A68     		ldr	r2, [r3]
 1900 0300 724B     		ldr	r3, .L59+12
 1901 0302 1B68     		ldr	r3, [r3]
 1902 0304 1046     		mov	r0, r2
 1903 0306 6F49     		ldr	r1, .L59+4
 1904 0308 1A46     		mov	r2, r3
 1905 030a 0023     		movs	r3, #0
 1906 030c FFF7FEFF 		bl	xQueueGenericSend
 1907 0310 0346     		mov	r3, r0
 1908 0312 002B     		cmp	r3, #0
 1909 0314 43D0     		beq	.L49
 583:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 584:App/STM32F4-Discovery/tcpCLI.c **** 					
 585:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay)== pdPASS)
 1910              		.loc 1 585 0
 1911 0316 6C4B     		ldr	r3, .L59+8
 1912 0318 1A68     		ldr	r2, [r3]
 1913 031a 6C4B     		ldr	r3, .L59+12
 1914 031c 1B68     		ldr	r3, [r3]
 1915 031e 1046     		mov	r0, r2
 1916 0320 6B49     		ldr	r1, .L59+16
 1917 0322 1A46     		mov	r2, r3
 1918 0324 0023     		movs	r3, #0
 1919 0326 FFF7FEFF 		bl	xQueueGenericReceive
 1920 032a 0346     		mov	r3, r0
 1921 032c 012B     		cmp	r3, #1
 1922 032e 25D1     		bne	.L50
 586:App/STM32F4-Discovery/tcpCLI.c **** 			{
 587:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 1923              		.loc 1 587 0
 1924 0330 674B     		ldr	r3, .L59+16
 1925 0332 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1926 0334 062B     		cmp	r3, #6
 1927 0336 12D1     		bne	.L51
 588:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 589:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer ,"Motor succsesfully stopped.\n\n");
 1928              		.loc 1 589 0
 1929 0338 FA68     		ldr	r2, [r7, #12]
 1930 033a 664B     		ldr	r3, .L59+20
 1931 033c 1546     		mov	r5, r2
 1932 033e 1C46     		mov	r4, r3
 1933 0340 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1934 0342 2860     		str	r0, [r5]	@ unaligned
 1935 0344 6960     		str	r1, [r5, #4]	@ unaligned
 1936 0346 AA60     		str	r2, [r5, #8]	@ unaligned
 1937 0348 EB60     		str	r3, [r5, #12]	@ unaligned
 1938 034a 07CC     		ldmia	r4!, {r0, r1, r2}
 1939 034c 2861     		str	r0, [r5, #16]	@ unaligned
 1940 034e 6961     		str	r1, [r5, #20]	@ unaligned
 1941 0350 AA61     		str	r2, [r5, #24]	@ unaligned
 1942 0352 2388     		ldrh	r3, [r4]	@ unaligned
 1943 0354 AB83     		strh	r3, [r5, #28]	@ unaligned
 590:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 29 ; 	
 1944              		.loc 1 590 0
 1945 0356 1D23     		movs	r3, #29
 1946 0358 BB60     		str	r3, [r7, #8]
 591:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 592:App/STM32F4-Discovery/tcpCLI.c **** 
 593:App/STM32F4-Discovery/tcpCLI.c **** 					
 594:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 1947              		.loc 1 594 0
 1948 035a 0123     		movs	r3, #1
 1949 035c AAE0     		b	.L56
 1950              	.L51:
 595:App/STM32F4-Discovery/tcpCLI.c **** 
 596:App/STM32F4-Discovery/tcpCLI.c **** 				}
 597:App/STM32F4-Discovery/tcpCLI.c **** 				else
 598:App/STM32F4-Discovery/tcpCLI.c **** 				{
 599:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1951              		.loc 1 599 0
 1952 035e FA68     		ldr	r2, [r7, #12]
 1953 0360 5D4B     		ldr	r3, .L59+24
 1954 0362 1546     		mov	r5, r2
 1955 0364 1C46     		mov	r4, r3
 1956 0366 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1957 0368 2860     		str	r0, [r5]	@ unaligned
 1958 036a 6960     		str	r1, [r5, #4]	@ unaligned
 1959 036c AA60     		str	r2, [r5, #8]	@ unaligned
 1960 036e EB60     		str	r3, [r5, #12]	@ unaligned
 1961 0370 2068     		ldr	r0, [r4]	@ unaligned
 1962 0372 2861     		str	r0, [r5, #16]	@ unaligned
 600:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 1963              		.loc 1 600 0
 1964 0374 1323     		movs	r3, #19
 1965 0376 BB60     		str	r3, [r7, #8]
 601:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 602:App/STM32F4-Discovery/tcpCLI.c **** 
 603:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 1966              		.loc 1 603 0
 1967 0378 0023     		movs	r3, #0
 1968 037a 9BE0     		b	.L56
 1969              	.L50:
 604:App/STM32F4-Discovery/tcpCLI.c **** 
 605:App/STM32F4-Discovery/tcpCLI.c **** 
 606:App/STM32F4-Discovery/tcpCLI.c **** 				}
 607:App/STM32F4-Discovery/tcpCLI.c **** 			}
 608:App/STM32F4-Discovery/tcpCLI.c **** 			else
 609:App/STM32F4-Discovery/tcpCLI.c **** 			{
 610:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 611:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 612:App/STM32F4-Discovery/tcpCLI.c **** 		
 613:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 1970              		.loc 1 613 0
 1971 037c FA68     		ldr	r2, [r7, #12]
 1972 037e 574B     		ldr	r3, .L59+28
 1973 0380 1546     		mov	r5, r2
 1974 0382 1C46     		mov	r4, r3
 1975 0384 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1976 0386 2860     		str	r0, [r5]	@ unaligned
 1977 0388 6960     		str	r1, [r5, #4]	@ unaligned
 1978 038a AA60     		str	r2, [r5, #8]	@ unaligned
 1979 038c EB60     		str	r3, [r5, #12]	@ unaligned
 1980 038e 07CC     		ldmia	r4!, {r0, r1, r2}
 1981 0390 2861     		str	r0, [r5, #16]	@ unaligned
 1982 0392 6961     		str	r1, [r5, #20]	@ unaligned
 1983 0394 AA61     		str	r2, [r5, #24]	@ unaligned
 614:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 1984              		.loc 1 614 0
 1985 0396 1B23     		movs	r3, #27
 1986 0398 BB60     		str	r3, [r7, #8]
 615:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 616:App/STM32F4-Discovery/tcpCLI.c **** 
 617:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 1987              		.loc 1 617 0
 1988 039a 0023     		movs	r3, #0
 1989 039c 8AE0     		b	.L56
 1990              	.L49:
 618:App/STM32F4-Discovery/tcpCLI.c **** 			}
 619:App/STM32F4-Discovery/tcpCLI.c **** 		}
 620:App/STM32F4-Discovery/tcpCLI.c **** 		else
 621:App/STM32F4-Discovery/tcpCLI.c **** 		{
 622:App/STM32F4-Discovery/tcpCLI.c **** 			
 623:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 624:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 625:App/STM32F4-Discovery/tcpCLI.c **** 		
 626:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 1991              		.loc 1 626 0
 1992 039e FA68     		ldr	r2, [r7, #12]
 1993 03a0 4F4B     		ldr	r3, .L59+32
 1994 03a2 1446     		mov	r4, r2
 1995 03a4 1D46     		mov	r5, r3
 1996 03a6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1997 03a8 2060     		str	r0, [r4]	@ unaligned
 1998 03aa 6160     		str	r1, [r4, #4]	@ unaligned
 1999 03ac A260     		str	r2, [r4, #8]	@ unaligned
 2000 03ae E360     		str	r3, [r4, #12]	@ unaligned
 2001 03b0 2868     		ldr	r0, [r5]	@ unaligned
 2002 03b2 2061     		str	r0, [r4, #16]	@ unaligned
 2003 03b4 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 2004 03b6 AB79     		ldrb	r3, [r5, #6]
 2005 03b8 A282     		strh	r2, [r4, #20]	@ unaligned
 2006 03ba A375     		strb	r3, [r4, #22]
 627:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 2007              		.loc 1 627 0
 2008 03bc 1623     		movs	r3, #22
 2009 03be BB60     		str	r3, [r7, #8]
 628:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 629:App/STM32F4-Discovery/tcpCLI.c **** 
 630:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 2010              		.loc 1 630 0
 2011 03c0 0023     		movs	r3, #0
 2012 03c2 77E0     		b	.L56
 2013              	.L48:
 631:App/STM32F4-Discovery/tcpCLI.c **** 		}
 632:App/STM32F4-Discovery/tcpCLI.c **** 					
 633:App/STM32F4-Discovery/tcpCLI.c **** 	}
 634:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 635:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND START
 636:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 637:App/STM32F4-Discovery/tcpCLI.c **** 
 638:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "start", 5))
 2014              		.loc 1 638 0
 2015 03c4 786A     		ldr	r0, [r7, #36]
 2016 03c6 4749     		ldr	r1, .L59+36
 2017 03c8 0522     		movs	r2, #5
 2018 03ca FFF7FEFF 		bl	strncmp
 2019 03ce 0346     		mov	r3, r0
 2020 03d0 002B     		cmp	r3, #0
 2021 03d2 69D1     		bne	.L52
 639:App/STM32F4-Discovery/tcpCLI.c **** 	{
 640:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = START; 
 2022              		.loc 1 640 0
 2023 03d4 3B4B     		ldr	r3, .L59+4
 2024 03d6 0422     		movs	r2, #4
 2025 03d8 1A70     		strb	r2, [r3]
 641:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5; 
 2026              		.loc 1 641 0
 2027 03da 3A4B     		ldr	r3, .L59+4
 2028 03dc 0522     		movs	r2, #5
 2029 03de 5A60     		str	r2, [r3, #4]
 642:App/STM32F4-Discovery/tcpCLI.c **** 			// send value to setSpeed_task via Queue 
 643:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 2030              		.loc 1 643 0
 2031 03e0 394B     		ldr	r3, .L59+8
 2032 03e2 1A68     		ldr	r2, [r3]
 2033 03e4 394B     		ldr	r3, .L59+12
 2034 03e6 1B68     		ldr	r3, [r3]
 2035 03e8 1046     		mov	r0, r2
 2036 03ea 3649     		ldr	r1, .L59+4
 2037 03ec 1A46     		mov	r2, r3
 2038 03ee 0023     		movs	r3, #0
 2039 03f0 FFF7FEFF 		bl	xQueueGenericSend
 2040 03f4 0346     		mov	r3, r0
 2041 03f6 012B     		cmp	r3, #1
 2042 03f8 43D1     		bne	.L53
 644:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 645:App/STM32F4-Discovery/tcpCLI.c **** 		//	vTaskDelay(500/portTICK_RATE_MS);		
 646:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay) == pdPASS)
 2043              		.loc 1 646 0
 2044 03fa 334B     		ldr	r3, .L59+8
 2045 03fc 1A68     		ldr	r2, [r3]
 2046 03fe 334B     		ldr	r3, .L59+12
 2047 0400 1B68     		ldr	r3, [r3]
 2048 0402 1046     		mov	r0, r2
 2049 0404 3249     		ldr	r1, .L59+16
 2050 0406 1A46     		mov	r2, r3
 2051 0408 0023     		movs	r3, #0
 2052 040a FFF7FEFF 		bl	xQueueGenericReceive
 2053 040e 0346     		mov	r3, r0
 2054 0410 012B     		cmp	r3, #1
 2055 0412 25D1     		bne	.L54
 647:App/STM32F4-Discovery/tcpCLI.c **** 			{
 648:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 2056              		.loc 1 648 0
 2057 0414 2E4B     		ldr	r3, .L59+16
 2058 0416 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2059 0418 062B     		cmp	r3, #6
 2060 041a 12D1     		bne	.L55
 649:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 650:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer , "Motor succsesfully started.\n\n");
 2061              		.loc 1 650 0
 2062 041c FA68     		ldr	r2, [r7, #12]
 2063 041e 324B     		ldr	r3, .L59+40
 2064 0420 1546     		mov	r5, r2
 2065 0422 1C46     		mov	r4, r3
 2066 0424 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2067 0426 2860     		str	r0, [r5]	@ unaligned
 2068 0428 6960     		str	r1, [r5, #4]	@ unaligned
 2069 042a AA60     		str	r2, [r5, #8]	@ unaligned
 2070 042c EB60     		str	r3, [r5, #12]	@ unaligned
 2071 042e 07CC     		ldmia	r4!, {r0, r1, r2}
 2072 0430 2861     		str	r0, [r5, #16]	@ unaligned
 2073 0432 6961     		str	r1, [r5, #20]	@ unaligned
 2074 0434 AA61     		str	r2, [r5, #24]	@ unaligned
 2075 0436 2388     		ldrh	r3, [r4]	@ unaligned
 2076 0438 AB83     		strh	r3, [r5, #28]	@ unaligned
 651:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 29; 	
 2077              		.loc 1 651 0
 2078 043a 1D23     		movs	r3, #29
 2079 043c BB60     		str	r3, [r7, #8]
 652:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 653:App/STM32F4-Discovery/tcpCLI.c **** 
 654:App/STM32F4-Discovery/tcpCLI.c **** 					
 655:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 2080              		.loc 1 655 0
 2081 043e 0123     		movs	r3, #1
 2082 0440 38E0     		b	.L56
 2083              	.L55:
 656:App/STM32F4-Discovery/tcpCLI.c **** 
 657:App/STM32F4-Discovery/tcpCLI.c **** 				}
 658:App/STM32F4-Discovery/tcpCLI.c **** 				else
 659:App/STM32F4-Discovery/tcpCLI.c **** 				{
 660:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 2084              		.loc 1 660 0
 2085 0442 FA68     		ldr	r2, [r7, #12]
 2086 0444 244B     		ldr	r3, .L59+24
 2087 0446 1546     		mov	r5, r2
 2088 0448 1C46     		mov	r4, r3
 2089 044a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2090 044c 2860     		str	r0, [r5]	@ unaligned
 2091 044e 6960     		str	r1, [r5, #4]	@ unaligned
 2092 0450 AA60     		str	r2, [r5, #8]	@ unaligned
 2093 0452 EB60     		str	r3, [r5, #12]	@ unaligned
 2094 0454 2068     		ldr	r0, [r4]	@ unaligned
 2095 0456 2861     		str	r0, [r5, #16]	@ unaligned
 661:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 2096              		.loc 1 661 0
 2097 0458 1323     		movs	r3, #19
 2098 045a BB60     		str	r3, [r7, #8]
 662:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 663:App/STM32F4-Discovery/tcpCLI.c **** 
 664:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 2099              		.loc 1 664 0
 2100 045c 0023     		movs	r3, #0
 2101 045e 29E0     		b	.L56
 2102              	.L54:
 665:App/STM32F4-Discovery/tcpCLI.c **** 
 666:App/STM32F4-Discovery/tcpCLI.c **** 
 667:App/STM32F4-Discovery/tcpCLI.c **** 				}
 668:App/STM32F4-Discovery/tcpCLI.c **** 			}
 669:App/STM32F4-Discovery/tcpCLI.c **** 			else
 670:App/STM32F4-Discovery/tcpCLI.c **** 			{
 671:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 672:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 673:App/STM32F4-Discovery/tcpCLI.c **** 		
 674:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 2103              		.loc 1 674 0
 2104 0460 FA68     		ldr	r2, [r7, #12]
 2105 0462 1E4B     		ldr	r3, .L59+28
 2106 0464 1546     		mov	r5, r2
 2107 0466 1C46     		mov	r4, r3
 2108 0468 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2109 046a 2860     		str	r0, [r5]	@ unaligned
 2110 046c 6960     		str	r1, [r5, #4]	@ unaligned
 2111 046e AA60     		str	r2, [r5, #8]	@ unaligned
 2112 0470 EB60     		str	r3, [r5, #12]	@ unaligned
 2113 0472 07CC     		ldmia	r4!, {r0, r1, r2}
 2114 0474 2861     		str	r0, [r5, #16]	@ unaligned
 2115 0476 6961     		str	r1, [r5, #20]	@ unaligned
 2116 0478 AA61     		str	r2, [r5, #24]	@ unaligned
 675:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 2117              		.loc 1 675 0
 2118 047a 1B23     		movs	r3, #27
 2119 047c BB60     		str	r3, [r7, #8]
 676:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 677:App/STM32F4-Discovery/tcpCLI.c **** 
 678:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 2120              		.loc 1 678 0
 2121 047e 0023     		movs	r3, #0
 2122 0480 18E0     		b	.L56
 2123              	.L53:
 679:App/STM32F4-Discovery/tcpCLI.c **** 			}
 680:App/STM32F4-Discovery/tcpCLI.c **** 		}
 681:App/STM32F4-Discovery/tcpCLI.c **** 		else
 682:App/STM32F4-Discovery/tcpCLI.c **** 		{
 683:App/STM32F4-Discovery/tcpCLI.c **** 			
 684:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 685:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 686:App/STM32F4-Discovery/tcpCLI.c **** 		
 687:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer,"Error sending Queue!\n\n");
 2124              		.loc 1 687 0
 2125 0482 FA68     		ldr	r2, [r7, #12]
 2126 0484 164B     		ldr	r3, .L59+32
 2127 0486 1446     		mov	r4, r2
 2128 0488 1D46     		mov	r5, r3
 2129 048a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2130 048c 2060     		str	r0, [r4]	@ unaligned
 2131 048e 6160     		str	r1, [r4, #4]	@ unaligned
 2132 0490 A260     		str	r2, [r4, #8]	@ unaligned
 2133 0492 E360     		str	r3, [r4, #12]	@ unaligned
 2134 0494 2868     		ldr	r0, [r5]	@ unaligned
 2135 0496 2061     		str	r0, [r4, #16]	@ unaligned
 2136 0498 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 2137 049a AB79     		ldrb	r3, [r5, #6]
 2138 049c A282     		strh	r2, [r4, #20]	@ unaligned
 2139 049e A375     		strb	r3, [r4, #22]
 688:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 2140              		.loc 1 688 0
 2141 04a0 1623     		movs	r3, #22
 2142 04a2 BB60     		str	r3, [r7, #8]
 689:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket_0, buf, len, 0);
 690:App/STM32F4-Discovery/tcpCLI.c **** 
 691:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 2143              		.loc 1 691 0
 2144 04a4 0023     		movs	r3, #0
 2145 04a6 05E0     		b	.L56
 2146              	.L52:
 692:App/STM32F4-Discovery/tcpCLI.c **** 		}
 693:App/STM32F4-Discovery/tcpCLI.c **** 
 694:App/STM32F4-Discovery/tcpCLI.c **** 
 695:App/STM32F4-Discovery/tcpCLI.c **** 	}
 696:App/STM32F4-Discovery/tcpCLI.c **** 
 697:App/STM32F4-Discovery/tcpCLI.c **** 
 698:App/STM32F4-Discovery/tcpCLI.c **** 	strcpy(pcWriteBuffer, xMotorCommand.pcHelpString);
 2147              		.loc 1 698 0
 2148 04a8 104B     		ldr	r3, .L59+44
 2149 04aa F868     		ldr	r0, [r7, #12]
 2150 04ac 1946     		mov	r1, r3
 2151 04ae FFF7FEFF 		bl	strcpy
 699:App/STM32F4-Discovery/tcpCLI.c **** 		
 700:App/STM32F4-Discovery/tcpCLI.c **** 	return pdFALSE;
 2152              		.loc 1 700 0
 2153 04b2 0023     		movs	r3, #0
 2154              	.L56:
 701:App/STM32F4-Discovery/tcpCLI.c **** 
 702:App/STM32F4-Discovery/tcpCLI.c **** 
 703:App/STM32F4-Discovery/tcpCLI.c **** }
 2155              		.loc 1 703 0
 2156 04b4 1846     		mov	r0, r3
 2157 04b6 2837     		adds	r7, r7, #40
 2158 04b8 BD46     		mov	sp, r7
 2159              		@ sp needed
 2160 04ba BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2161              	.L60:
 2162 04be 00BF     		.align	2
 2163              	.L59:
 2164 04c0 E0020000 		.word	.LC22
 2165 04c4 00000000 		.word	telegramS
 2166 04c8 00000000 		.word	QSpd_handle
 2167 04cc 00000000 		.word	xDelay
 2168 04d0 00000000 		.word	telegramR
 2169 04d4 E8020000 		.word	.LC23
 2170 04d8 C8000000 		.word	.LC7
 2171 04dc DC000000 		.word	.LC8
 2172 04e0 F8000000 		.word	.LC9
 2173 04e4 08030000 		.word	.LC24
 2174 04e8 10030000 		.word	.LC25
 2175 04ec 08000000 		.word	.LC1
 2176              		.cfi_endproc
 2177              	.LFE113:
 2179              		.section	.rodata
 2180 032e 0000     		.align	2
 2181              	.LC26:
 2182 0330 6B696C6C 		.ascii	"kill\000"
 2182      00
 2183 0335 000000   		.align	2
 2184              	.LC27:
 2185 0338 5461736B 		.ascii	"Task: motorHB succsessfully killed\012\000\000"
 2185      3A206D6F 
 2185      746F7248 
 2185      42207375 
 2185      63637365 
 2186 035d 000000   		.align	2
 2187              	.LC28:
 2188 0360 6D6F746F 		.ascii	"motorHB\000"
 2188      72484200 
 2189              		.align	2
 2190              	.LC29:
 2191 0368 5461736B 		.ascii	"Task: motorHB succsessfully started\012\000\000"
 2191      3A206D6F 
 2191      746F7248 
 2191      42207375 
 2191      63637365 
 2192 038e 0000     		.section	.text.prvTaskStatsCommand,"ax",%progbits
 2193              		.align	2
 2194              		.global	prvTaskStatsCommand
 2195              		.thumb
 2196              		.thumb_func
 2198              	prvTaskStatsCommand:
 2199              	.LFB114:
 704:App/STM32F4-Discovery/tcpCLI.c **** 
 705:App/STM32F4-Discovery/tcpCLI.c **** portBASE_TYPE prvTaskStatsCommand ( 	int8_t *pcWriteBuffer, 
 706:App/STM32F4-Discovery/tcpCLI.c **** 						size_t xWriteBufferLen, 
 707:App/STM32F4-Discovery/tcpCLI.c **** 						const int8_t *pcCommandString)
 708:App/STM32F4-Discovery/tcpCLI.c **** {
 2200              		.loc 1 708 0
 2201              		.cfi_startproc
 2202              		@ args = 0, pretend = 0, frame = 24
 2203              		@ frame_needed = 1, uses_anonymous_args = 0
 2204 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2205              	.LCFI11:
 2206              		.cfi_def_cfa_offset 24
 2207              		.cfi_offset 4, -24
 2208              		.cfi_offset 5, -20
 2209              		.cfi_offset 6, -16
 2210              		.cfi_offset 7, -12
 2211              		.cfi_offset 8, -8
 2212              		.cfi_offset 14, -4
 2213 0004 8AB0     		sub	sp, sp, #40
 2214              	.LCFI12:
 2215              		.cfi_def_cfa_offset 64
 2216 0006 04AF     		add	r7, sp, #16
 2217              	.LCFI13:
 2218              		.cfi_def_cfa 7, 48
 2219 0008 F860     		str	r0, [r7, #12]
 2220 000a B960     		str	r1, [r7, #8]
 2221 000c 7A60     		str	r2, [r7, #4]
 709:App/STM32F4-Discovery/tcpCLI.c **** 
 710:App/STM32F4-Discovery/tcpCLI.c **** 	int8_t *Option, *Param, *Value;
 711:App/STM32F4-Discovery/tcpCLI.c **** 	int xOptionLength, xParamLength, xValueLength; 
 712:App/STM32F4-Discovery/tcpCLI.c **** 	//QueueTelegram telegram; 
 713:App/STM32F4-Discovery/tcpCLI.c **** 	
 714:App/STM32F4-Discovery/tcpCLI.c **** 	// get option from command line 
 715:App/STM32F4-Discovery/tcpCLI.c **** 
 716:App/STM32F4-Discovery/tcpCLI.c **** 	Option = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 2222              		.loc 1 716 0
 2223 000e 07F11003 		add	r3, r7, #16
 2224 0012 7868     		ldr	r0, [r7, #4]
 2225 0014 0121     		movs	r1, #1
 2226 0016 1A46     		mov	r2, r3
 2227 0018 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 2228 001c 7861     		str	r0, [r7, #20]
 717:App/STM32F4-Discovery/tcpCLI.c **** 					  1,  		   // first parameter
 718:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xOptionLength // parameter string length
 719:App/STM32F4-Discovery/tcpCLI.c **** 					  
 720:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 721:App/STM32F4-Discovery/tcpCLI.c ****     	( void ) xWriteBufferLen;
 722:App/STM32F4-Discovery/tcpCLI.c **** 	if ( Option == NULL)
 2229              		.loc 1 722 0
 2230 001e 7B69     		ldr	r3, [r7, #20]
 2231 0020 002B     		cmp	r3, #0
 2232 0022 02D1     		bne	.L62
 723:App/STM32F4-Discovery/tcpCLI.c **** 	{
 724:App/STM32F4-Discovery/tcpCLI.c **** 		 vTaskList( pcWriteBuffer);
 2233              		.loc 1 724 0
 2234 0024 F868     		ldr	r0, [r7, #12]
 2235 0026 FFF7FEFF 		bl	vTaskList
 2236              	.L62:
 725:App/STM32F4-Discovery/tcpCLI.c **** 	}	
 726:App/STM32F4-Discovery/tcpCLI.c ****     /* For simplicity, this function assumes the output buffer is large enough
 727:App/STM32F4-Discovery/tcpCLI.c ****     to hold all the text generated by executing the vTaskList() API function,
 728:App/STM32F4-Discovery/tcpCLI.c ****     so the xWriteBufferLen parameter is not used. */
 729:App/STM32F4-Discovery/tcpCLI.c **** 
 730:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "kill", 7))
 2237              		.loc 1 730 0
 2238 002a 7869     		ldr	r0, [r7, #20]
 2239 002c 2D49     		ldr	r1, .L69
 2240 002e 0722     		movs	r2, #7
 2241 0030 FFF7FEFF 		bl	strncmp
 2242 0034 0346     		mov	r3, r0
 2243 0036 002B     		cmp	r3, #0
 2244 0038 1CD1     		bne	.L63
 731:App/STM32F4-Discovery/tcpCLI.c **** 	{
 732:App/STM32F4-Discovery/tcpCLI.c **** 	
 733:App/STM32F4-Discovery/tcpCLI.c **** 		vTaskDelete(motorHeartBeatHandle);
 2245              		.loc 1 733 0
 2246 003a 2B4B     		ldr	r3, .L69+4
 2247 003c 1B68     		ldr	r3, [r3]
 2248 003e 1846     		mov	r0, r3
 2249 0040 FFF7FEFF 		bl	vTaskDelete
 734:App/STM32F4-Discovery/tcpCLI.c **** 		strcpy ( pcWriteBuffer, "Task: motorHB succsessfully killed\n\0");
 2250              		.loc 1 734 0
 2251 0044 FB68     		ldr	r3, [r7, #12]
 2252 0046 294A     		ldr	r2, .L69+8
 2253 0048 1446     		mov	r4, r2
 2254 004a 1D46     		mov	r5, r3
 2255 004c 04F12008 		add	r8, r4, #32
 2256              	.L64:
 2257 0050 2E46     		mov	r6, r5
 2258 0052 A446     		mov	ip, r4
 2259 0054 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 2260 0058 3060     		str	r0, [r6]	@ unaligned
 2261 005a 7160     		str	r1, [r6, #4]	@ unaligned
 2262 005c B260     		str	r2, [r6, #8]	@ unaligned
 2263 005e F360     		str	r3, [r6, #12]	@ unaligned
 2264 0060 1034     		adds	r4, r4, #16
 2265 0062 1035     		adds	r5, r5, #16
 2266 0064 4445     		cmp	r4, r8
 2267 0066 F3D1     		bne	.L64
 2268 0068 2B46     		mov	r3, r5
 2269 006a 2246     		mov	r2, r4
 2270 006c 1068     		ldr	r0, [r2]	@ unaligned
 2271 006e 1860     		str	r0, [r3]	@ unaligned
 735:App/STM32F4-Discovery/tcpCLI.c **** 		return pdPASS;
 2272              		.loc 1 735 0
 2273 0070 0123     		movs	r3, #1
 2274 0072 31E0     		b	.L68
 2275              	.L63:
 736:App/STM32F4-Discovery/tcpCLI.c **** 	}
 737:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "start", 5))
 2276              		.loc 1 737 0
 2277 0074 7869     		ldr	r0, [r7, #20]
 2278 0076 1E49     		ldr	r1, .L69+12
 2279 0078 0522     		movs	r2, #5
 2280 007a FFF7FEFF 		bl	strncmp
 2281 007e 0346     		mov	r3, r0
 2282 0080 002B     		cmp	r3, #0
 2283 0082 28D1     		bne	.L66
 738:App/STM32F4-Discovery/tcpCLI.c **** 	{
 739:App/STM32F4-Discovery/tcpCLI.c **** 		// set motor task 
 740:App/STM32F4-Discovery/tcpCLI.c **** 		xTaskCreate(motorHeartBeat_task, "motorHB", configMINIMAL_STACK_SIZE * 8,		       				
 2284              		.loc 1 740 0
 2285 0084 0223     		movs	r3, #2
 2286 0086 0093     		str	r3, [sp]
 2287 0088 174B     		ldr	r3, .L69+4
 2288 008a 0193     		str	r3, [sp, #4]
 2289 008c 0023     		movs	r3, #0
 2290 008e 0293     		str	r3, [sp, #8]
 2291 0090 0023     		movs	r3, #0
 2292 0092 0393     		str	r3, [sp, #12]
 2293 0094 1748     		ldr	r0, .L69+16
 2294 0096 1849     		ldr	r1, .L69+20
 2295 0098 4FF40062 		mov	r2, #2048
 2296 009c 0023     		movs	r3, #0
 2297 009e FFF7FEFF 		bl	xTaskGenericCreate
 741:App/STM32F4-Discovery/tcpCLI.c **** 			NULL,  0x2, &motorHeartBeatHandle);
 742:App/STM32F4-Discovery/tcpCLI.c **** 
 743:App/STM32F4-Discovery/tcpCLI.c **** 		strcpy ( pcWriteBuffer, "Task: motorHB succsessfully started\n\0");
 2298              		.loc 1 743 0
 2299 00a2 FB68     		ldr	r3, [r7, #12]
 2300 00a4 154A     		ldr	r2, .L69+24
 2301 00a6 1446     		mov	r4, r2
 2302 00a8 1D46     		mov	r5, r3
 2303 00aa 04F12008 		add	r8, r4, #32
 2304              	.L67:
 2305 00ae 2E46     		mov	r6, r5
 2306 00b0 A446     		mov	ip, r4
 2307 00b2 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 2308 00b6 3060     		str	r0, [r6]	@ unaligned
 2309 00b8 7160     		str	r1, [r6, #4]	@ unaligned
 2310 00ba B260     		str	r2, [r6, #8]	@ unaligned
 2311 00bc F360     		str	r3, [r6, #12]	@ unaligned
 2312 00be 1034     		adds	r4, r4, #16
 2313 00c0 1035     		adds	r5, r5, #16
 2314 00c2 4445     		cmp	r4, r8
 2315 00c4 F3D1     		bne	.L67
 2316 00c6 2B46     		mov	r3, r5
 2317 00c8 2246     		mov	r2, r4
 2318 00ca 1068     		ldr	r0, [r2]	@ unaligned
 2319 00cc 1860     		str	r0, [r3]	@ unaligned
 2320 00ce 1279     		ldrb	r2, [r2, #4]
 2321 00d0 1A71     		strb	r2, [r3, #4]
 744:App/STM32F4-Discovery/tcpCLI.c **** 
 745:App/STM32F4-Discovery/tcpCLI.c **** 	
 746:App/STM32F4-Discovery/tcpCLI.c **** 		return pdPASS;	
 2322              		.loc 1 746 0
 2323 00d2 0123     		movs	r3, #1
 2324 00d4 00E0     		b	.L68
 2325              	.L66:
 747:App/STM32F4-Discovery/tcpCLI.c **** 	}
 748:App/STM32F4-Discovery/tcpCLI.c **** 
 749:App/STM32F4-Discovery/tcpCLI.c **** 
 750:App/STM32F4-Discovery/tcpCLI.c ****  
 751:App/STM32F4-Discovery/tcpCLI.c **** 
 752:App/STM32F4-Discovery/tcpCLI.c ****     /* The entire table was written directly to the output buffer.  Execution
 753:App/STM32F4-Discovery/tcpCLI.c ****     of this command is complete, so return pdFALSE. */
 754:App/STM32F4-Discovery/tcpCLI.c ****     return pdFALSE;
 2326              		.loc 1 754 0
 2327 00d6 0023     		movs	r3, #0
 2328              	.L68:
 755:App/STM32F4-Discovery/tcpCLI.c **** }
 2329              		.loc 1 755 0
 2330 00d8 1846     		mov	r0, r3
 2331 00da 1837     		adds	r7, r7, #24
 2332 00dc BD46     		mov	sp, r7
 2333              		@ sp needed
 2334 00de BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2335              	.L70:
 2336 00e2 00BF     		.align	2
 2337              	.L69:
 2338 00e4 30030000 		.word	.LC26
 2339 00e8 00000000 		.word	motorHeartBeatHandle
 2340 00ec 38030000 		.word	.LC27
 2341 00f0 08030000 		.word	.LC24
 2342 00f4 00000000 		.word	motorHeartBeat_task
 2343 00f8 60030000 		.word	.LC28
 2344 00fc 68030000 		.word	.LC29
 2345              		.cfi_endproc
 2346              	.LFE114:
 2348              		.text
 2349              	.Letext0:
 2350              		.file 2 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/lib/gcc/arm-none-eabi/4.8.4/include/std
 2351              		.file 3 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/machine/_default_
 2352              		.file 4 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/stdint.h"
 2353              		.file 5 "Source/portable/GCC/ARM_CM4F/portmacro.h"
 2354              		.file 6 "Source/include/task.h"
 2355              		.file 7 "Source/include/queue.h"
 2356              		.file 8 "Source/include/semphr.h"
 2357              		.file 9 "App/STM32F4-Discovery/main.h"
 2358              		.file 10 "Source/FreeRTOS-Plus-CLI/FreeRTOS_CLI.h"
 2359              		.file 11 "App/STM32F4-Discovery/modbus_mk.h"
 2360              		.file 12 "App/STM32F4-Discovery/tcpCLI.h"
 2361              		.file 13 "App/STM32F4-Discovery/Libraries/CMSIS/Include/core_cm4.h"
 2362              		.file 14 "App/STM32F4-Discovery/spi.h"
 2363              		.file 15 "App/STM32F4-Discovery/W5200.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 tcpCLI.c
                            *COM*:0000000000000004 xSemaphoreDMASPI
                            *COM*:0000000000000004 xSmphrUSART
                            *COM*:0000000000000004 motorHeartBeatHandle
                            *COM*:0000000000000004 motorHBHandle
                            *COM*:0000000000000004 QSpd_handle
                            *COM*:0000000000000004 QTCP_handle
                            *COM*:0000000000000004 socket_0
                            *COM*:00000000000007d0 bufferTX
                            *COM*:00000000000007d0 bufferRX
                            *COM*:0000000000000004 bufferRXidx
                            *COM*:0000000000000004 bufferTXidx
                            *COM*:0000000000000004 dat_lengthRX
                            *COM*:0000000000000004 dat_lengthTX
                            *COM*:0000000000000004 set_macTaskHandle
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:34     .rodata.table_crc_hi:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:37     .rodata.table_crc_hi:0000000000000000 table_crc_hi
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:295    .rodata.table_crc_lo:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:298    .rodata.table_crc_lo:0000000000000000 table_crc_lo
                            *COM*:0000000000000004 fd
                            *COM*:0000000000000201 received_string
                            *COM*:0000000000000004 rx_length
                            *COM*:0000000000000014 input_Register
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:560    .rodata:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:568    .rodata.xMotorCommand:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:571    .rodata.xMotorCommand:0000000000000000 xMotorCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:1476   .text.prvMotorCommand:0000000000000000 prvMotorCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:585    .rodata.xTaskStatsCommand:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:588    .rodata.xTaskStatsCommand:0000000000000000 xTaskStatsCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:2198   .text.prvTaskStatsCommand:0000000000000000 prvTaskStatsCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:595    .data.xDelay:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:598    .data.xDelay:0000000000000000 xDelay
                            *COM*:000000000000001c telegramS
                            *COM*:000000000000001c telegramR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:603    .text.telegram_init:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:608    .text.telegram_init:0000000000000000 telegram_init
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:659    .text.telegram_init:000000000000003c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:700    .text.handleVariable_set:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:705    .text.handleVariable_set:0000000000000000 handleVariable_set
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:1101   .text.handleVariable_set:0000000000000280 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:1117   .text.handleVariable_set:00000000000002b8 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:1235   .text.handleVariable_set:0000000000000378 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:1250   .text.handleVariable_get:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:1255   .text.handleVariable_get:0000000000000000 handleVariable_get
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:1421   .text.handleVariable_get:0000000000000100 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:1471   .text.prvMotorCommand:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:1863   .text.prvMotorCommand:000000000000029c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:1882   .text.prvMotorCommand:00000000000002e0 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:2164   .text.prvMotorCommand:00000000000004c0 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:2193   .text.prvTaskStatsCommand:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccmRd74W.s:2338   .text.prvTaskStatsCommand:00000000000000e4 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
strncmp
atoi
sprintf
xQueueGenericSend
xQueueGenericReceive
FreeRTOS_CLIGetParameter
memcpy
strcpy
vTaskList
vTaskDelete
xTaskGenericCreate
motorHeartBeat_task
