   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"spi.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	bufferTXspi,200,4
  20              		.comm	bufferRXspi,200,4
  21              		.comm	bufferRXidx,4,4
  22              		.comm	bufferTXidx,4,4
  23              		.comm	dat_lengthRX,4,4
  24              		.comm	dat_lengthTX,4,4
  25              		.section	.bss.xSemaphoreDMASPIy,"aw",%nobits
  26              		.align	2
  29              	xSemaphoreDMASPIy:
  30 0000 00000000 		.space	4
  31              		.section	.bss.xSemaphoreDMASPIx,"aw",%nobits
  32              		.align	2
  35              	xSemaphoreDMASPIx:
  36 0000 00000000 		.space	4
  37              		.section	.text.init_SPIx,"ax",%progbits
  38              		.align	2
  39              		.global	init_SPIx
  40              		.thumb
  41              		.thumb_func
  43              	init_SPIx:
  44              	.LFB110:
  45              		.file 1 "App/STM32F4-Discovery/spi.c"
   1:App/STM32F4-Discovery/spi.c **** /*! \file spi.c */ 
   2:App/STM32F4-Discovery/spi.c **** 
   3:App/STM32F4-Discovery/spi.c **** #include "spi.h"
   4:App/STM32F4-Discovery/spi.c **** #define pdFalse 0
   5:App/STM32F4-Discovery/spi.c **** #define pdTrue 	1
   6:App/STM32F4-Discovery/spi.c **** 
   7:App/STM32F4-Discovery/spi.c **** //static xSemaphoreHandle xSemaphoreDMASPIxTX;
   8:App/STM32F4-Discovery/spi.c **** //static xSemaphoreHandle xSemaphoreDMASPIxRX;
   9:App/STM32F4-Discovery/spi.c **** //static xSemaphoreHandle xSemaphoreDMASPIyTX;
  10:App/STM32F4-Discovery/spi.c **** //static xSemaphoreHandle xSemaphoreDMASPIyRX;
  11:App/STM32F4-Discovery/spi.c ****   static xSemaphoreHandle xSemaphoreDMASPIy;
  12:App/STM32F4-Discovery/spi.c ****   static xSemaphoreHandle xSemaphoreDMASPIx;
  13:App/STM32F4-Discovery/spi.c **** /*============================================================================
  14:App/STM32F4-Discovery/spi.c ****  * 	func void init_SPIx(void)
  15:App/STM32F4-Discovery/spi.c ****  *===========================================================================*/ 
  16:App/STM32F4-Discovery/spi.c **** void init_SPIx(void){
  46              		.loc 1 16 0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 96
  49              		@ frame_needed = 1, uses_anonymous_args = 0
  50 0000 80B5     		push	{r7, lr}
  51              	.LCFI0:
  52              		.cfi_def_cfa_offset 8
  53              		.cfi_offset 7, -8
  54              		.cfi_offset 14, -4
  55 0002 98B0     		sub	sp, sp, #96
  56              	.LCFI1:
  57              		.cfi_def_cfa_offset 104
  58 0004 00AF     		add	r7, sp, #0
  59              	.LCFI2:
  60              		.cfi_def_cfa_register 7
  17:App/STM32F4-Discovery/spi.c **** 	
  18:App/STM32F4-Discovery/spi.c **** 
  19:App/STM32F4-Discovery/spi.c **** 	/*! Initialize SPI pheriphial with DMA controller \n
  20:App/STM32F4-Discovery/spi.c **** 	 *  - SPI setup
  21:App/STM32F4-Discovery/spi.c **** 	 *  	+ MISO PA6
  22:App/STM32F4-Discovery/spi.c **** 	 *  	+ MOSI PA7
  23:App/STM32F4-Discovery/spi.c **** 	 *  	+ SCK PA5
  24:App/STM32F4-Discovery/spi.c **** 	 *	+ CS PA4
  25:App/STM32F4-Discovery/spi.c **** 	 *	+ HR pin PC5
  26:App/STM32F4-Discovery/spi.c **** 	 *\n
  27:App/STM32F4-Discovery/spi.c **** 	 */
  28:App/STM32F4-Discovery/spi.c **** 	GPIO_InitTypeDef GPIO_InitStruct;
  29:App/STM32F4-Discovery/spi.c **** 	SPI_InitTypeDef SPI_InitStruct;
  30:App/STM32F4-Discovery/spi.c **** 	DMA_InitTypeDef DMA_InitStruct;
  31:App/STM32F4-Discovery/spi.c **** 	NVIC_InitTypeDef NVIC_InitStruct;
  32:App/STM32F4-Discovery/spi.c **** 
  33:App/STM32F4-Discovery/spi.c **** 	
  34:App/STM32F4-Discovery/spi.c **** 	
  35:App/STM32F4-Discovery/spi.c **** 	// enable clock for used IO pins
  36:App/STM32F4-Discovery/spi.c **** 	RCC_AHB1PeriphClockCmd(SPIx_MOSI_GPIO_CLK, ENABLE);
  61              		.loc 1 36 0
  62 0006 0120     		movs	r0, #1
  63 0008 0121     		movs	r1, #1
  64 000a FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  37:App/STM32F4-Discovery/spi.c **** 	RCC_AHB1PeriphClockCmd(SPIx_MISO_GPIO_CLK, ENABLE);
  65              		.loc 1 37 0
  66 000e 0120     		movs	r0, #1
  67 0010 0121     		movs	r1, #1
  68 0012 FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  38:App/STM32F4-Discovery/spi.c **** 	RCC_AHB1PeriphClockCmd(SPIx_SCK_GPIO_CLK, ENABLE);
  69              		.loc 1 38 0
  70 0016 0120     		movs	r0, #1
  71 0018 0121     		movs	r1, #1
  72 001a FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  39:App/STM32F4-Discovery/spi.c **** 	
  40:App/STM32F4-Discovery/spi.c **** 	/* configure pins used by SPIx
  41:App/STM32F4-Discovery/spi.c **** 	 * PA5 = SCK
  42:App/STM32F4-Discovery/spi.c **** 	 * PA6 = MISO
  43:App/STM32F4-Discovery/spi.c **** 	 * PA7 = MOSI
  44:App/STM32F4-Discovery/spi.c **** 	 */
  45:App/STM32F4-Discovery/spi.c **** 	// MOSI PA7
  46:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_Pin = SPIx_MOSI_PIN ;
  73              		.loc 1 46 0
  74 001e 8023     		movs	r3, #128
  75 0020 BB65     		str	r3, [r7, #88]
  47:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF;
  76              		.loc 1 47 0
  77 0022 0223     		movs	r3, #2
  78 0024 87F85C30 		strb	r3, [r7, #92]
  48:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;
  79              		.loc 1 48 0
  80 0028 0023     		movs	r3, #0
  81 002a 87F85E30 		strb	r3, [r7, #94]
  49:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;
  82              		.loc 1 49 0
  83 002e 0323     		movs	r3, #3
  84 0030 87F85D30 		strb	r3, [r7, #93]
  50:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_DOWN;
  85              		.loc 1 50 0
  86 0034 0223     		movs	r3, #2
  87 0036 87F85F30 		strb	r3, [r7, #95]
  51:App/STM32F4-Discovery/spi.c **** 	GPIO_Init(SPIx_MOSI_GPIO_PORT, &GPIO_InitStruct);
  88              		.loc 1 51 0
  89 003a 07F15803 		add	r3, r7, #88
  90 003e 8648     		ldr	r0, .L4
  91 0040 1946     		mov	r1, r3
  92 0042 FFF7FEFF 		bl	GPIO_Init
  52:App/STM32F4-Discovery/spi.c **** 	// SCK PA5
  53:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_Pin = SPIx_SCK_PIN;
  93              		.loc 1 53 0
  94 0046 2023     		movs	r3, #32
  95 0048 BB65     		str	r3, [r7, #88]
  54:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF;
  96              		.loc 1 54 0
  97 004a 0223     		movs	r3, #2
  98 004c 87F85C30 		strb	r3, [r7, #92]
  55:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;
  99              		.loc 1 55 0
 100 0050 0023     		movs	r3, #0
 101 0052 87F85E30 		strb	r3, [r7, #94]
  56:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;
 102              		.loc 1 56 0
 103 0056 0323     		movs	r3, #3
 104 0058 87F85D30 		strb	r3, [r7, #93]
  57:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_DOWN;
 105              		.loc 1 57 0
 106 005c 0223     		movs	r3, #2
 107 005e 87F85F30 		strb	r3, [r7, #95]
  58:App/STM32F4-Discovery/spi.c **** 	GPIO_Init(SPIx_SCK_GPIO_PORT, &GPIO_InitStruct);
 108              		.loc 1 58 0
 109 0062 07F15803 		add	r3, r7, #88
 110 0066 7C48     		ldr	r0, .L4
 111 0068 1946     		mov	r1, r3
 112 006a FFF7FEFF 		bl	GPIO_Init
  59:App/STM32F4-Discovery/spi.c **** 	// MISO PA6
  60:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_Pin = SPIx_MISO_PIN;
 113              		.loc 1 60 0
 114 006e 4023     		movs	r3, #64
 115 0070 BB65     		str	r3, [r7, #88]
  61:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF;
 116              		.loc 1 61 0
 117 0072 0223     		movs	r3, #2
 118 0074 87F85C30 		strb	r3, [r7, #92]
  62:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_OType = GPIO_OType_OD;
 119              		.loc 1 62 0
 120 0078 0123     		movs	r3, #1
 121 007a 87F85E30 		strb	r3, [r7, #94]
  63:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;
 122              		.loc 1 63 0
 123 007e 0323     		movs	r3, #3
 124 0080 87F85D30 		strb	r3, [r7, #93]
  64:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_NOPULL;
 125              		.loc 1 64 0
 126 0084 0023     		movs	r3, #0
 127 0086 87F85F30 		strb	r3, [r7, #95]
  65:App/STM32F4-Discovery/spi.c **** 	GPIO_Init(SPIx_MISO_GPIO_PORT, &GPIO_InitStruct);
 128              		.loc 1 65 0
 129 008a 07F15803 		add	r3, r7, #88
 130 008e 7248     		ldr	r0, .L4
 131 0090 1946     		mov	r1, r3
 132 0092 FFF7FEFF 		bl	GPIO_Init
  66:App/STM32F4-Discovery/spi.c **** 	
  67:App/STM32F4-Discovery/spi.c **** 	// connect SPIx pins to SPI alternate function
  68:App/STM32F4-Discovery/spi.c **** 	GPIO_PinAFConfig(SPIx_MISO_GPIO_PORT, SPIx_MISO_SOURCE, SPIx_MISO_AF);
 133              		.loc 1 68 0
 134 0096 7048     		ldr	r0, .L4
 135 0098 0621     		movs	r1, #6
 136 009a 0522     		movs	r2, #5
 137 009c FFF7FEFF 		bl	GPIO_PinAFConfig
  69:App/STM32F4-Discovery/spi.c **** 	GPIO_PinAFConfig(SPIx_MOSI_GPIO_PORT, SPIx_MOSI_SOURCE, SPIx_MOSI_AF);
 138              		.loc 1 69 0
 139 00a0 6D48     		ldr	r0, .L4
 140 00a2 0721     		movs	r1, #7
 141 00a4 0522     		movs	r2, #5
 142 00a6 FFF7FEFF 		bl	GPIO_PinAFConfig
  70:App/STM32F4-Discovery/spi.c **** 	GPIO_PinAFConfig(SPIx_SCK_GPIO_PORT,  SPIx_SCK_SOURCE,  SPIx_SCK_AF);
 143              		.loc 1 70 0
 144 00aa 6B48     		ldr	r0, .L4
 145 00ac 0521     		movs	r1, #5
 146 00ae 0522     		movs	r2, #5
 147 00b0 FFF7FEFF 		bl	GPIO_PinAFConfig
  71:App/STM32F4-Discovery/spi.c **** 
  72:App/STM32F4-Discovery/spi.c **** 		
  73:App/STM32F4-Discovery/spi.c **** 	/* Configure the chip select pin
  74:App/STM32F4-Discovery/spi.c **** 	   in this case we will use PA4 */
  75:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_Pin = SPIx_CS_PIN;
 148              		.loc 1 75 0
 149 00b4 1023     		movs	r3, #16
 150 00b6 BB65     		str	r3, [r7, #88]
  76:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_OUT;
 151              		.loc 1 76 0
 152 00b8 0123     		movs	r3, #1
 153 00ba 87F85C30 		strb	r3, [r7, #92]
  77:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;
 154              		.loc 1 77 0
 155 00be 0023     		movs	r3, #0
 156 00c0 87F85E30 		strb	r3, [r7, #94]
  78:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;
 157              		.loc 1 78 0
 158 00c4 0323     		movs	r3, #3
 159 00c6 87F85D30 		strb	r3, [r7, #93]
  79:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;
 160              		.loc 1 79 0
 161 00ca 0123     		movs	r3, #1
 162 00cc 87F85F30 		strb	r3, [r7, #95]
  80:App/STM32F4-Discovery/spi.c **** 	GPIO_Init(SPIx_CS_GPIO_PORT, &GPIO_InitStruct);
 163              		.loc 1 80 0
 164 00d0 07F15803 		add	r3, r7, #88
 165 00d4 6048     		ldr	r0, .L4
 166 00d6 1946     		mov	r1, r3
 167 00d8 FFF7FEFF 		bl	GPIO_Init
  81:App/STM32F4-Discovery/spi.c **** 	
  82:App/STM32F4-Discovery/spi.c **** 	CSOFFx(); // set PA4 high
 168              		.loc 1 82 0
 169 00dc 5E4B     		ldr	r3, .L4
 170 00de 5E4A     		ldr	r2, .L4
 171 00e0 128B     		ldrh	r2, [r2, #24]	@ movhi
 172 00e2 92B2     		uxth	r2, r2
 173 00e4 42F01002 		orr	r2, r2, #16
 174 00e8 92B2     		uxth	r2, r2
 175 00ea 1A83     		strh	r2, [r3, #24]	@ movhi
  83:App/STM32F4-Discovery/spi.c **** 
  84:App/STM32F4-Discovery/spi.c **** 
  85:App/STM32F4-Discovery/spi.c **** 	// enable peripheral clock
  86:App/STM32F4-Discovery/spi.c **** 	RCC_APB2PeriphClockCmd(SPIx_CLK, ENABLE);
 176              		.loc 1 86 0
 177 00ec 4FF48050 		mov	r0, #4096
 178 00f0 0121     		movs	r1, #1
 179 00f2 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
  87:App/STM32F4-Discovery/spi.c **** 	
  88:App/STM32F4-Discovery/spi.c **** 	/* configure SPIx in Mode 0 
  89:App/STM32F4-Discovery/spi.c **** 	 * CPOL = 0 --> clock is low when idle
  90:App/STM32F4-Discovery/spi.c **** 	 * CPHA = 0 --> data is sampled at the first edge
  91:App/STM32F4-Discovery/spi.c **** 	 */
  92:App/STM32F4-Discovery/spi.c **** 	SPI_InitStruct.SPI_Direction = SPI_Direction_2Lines_FullDuplex; // set to full duplex mode, sepera
 180              		.loc 1 92 0
 181 00f6 0023     		movs	r3, #0
 182 00f8 A7F84430 		strh	r3, [r7, #68]	@ movhi
  93:App/STM32F4-Discovery/spi.c **** 	SPI_InitStruct.SPI_Mode = SPI_Mode_Master;     // transmit in master mode, NSS pin has to be alway
 183              		.loc 1 93 0
 184 00fc 4FF48273 		mov	r3, #260
 185 0100 A7F84630 		strh	r3, [r7, #70]	@ movhi
  94:App/STM32F4-Discovery/spi.c **** 	SPI_InitStruct.SPI_DataSize = SPI_DataSize_8b; // one packet of data is 8 bits wide
 186              		.loc 1 94 0
 187 0104 0023     		movs	r3, #0
 188 0106 A7F84830 		strh	r3, [r7, #72]	@ movhi
  95:App/STM32F4-Discovery/spi.c **** 	SPI_InitStruct.SPI_CPOL = SPI_CPOL_Low;        // clock is low when idle
 189              		.loc 1 95 0
 190 010a 0023     		movs	r3, #0
 191 010c A7F84A30 		strh	r3, [r7, #74]	@ movhi
  96:App/STM32F4-Discovery/spi.c **** 	SPI_InitStruct.SPI_CPHA = SPI_CPHA_1Edge;      // data sampled at second edge
 192              		.loc 1 96 0
 193 0110 0023     		movs	r3, #0
 194 0112 A7F84C30 		strh	r3, [r7, #76]	@ movhi
  97:App/STM32F4-Discovery/spi.c **** 	SPI_InitStruct.SPI_NSS = SPI_NSS_Soft | SPI_NSSInternalSoft_Set; // set the NSS management to inte
 195              		.loc 1 97 0
 196 0116 4FF44073 		mov	r3, #768
 197 011a A7F84E30 		strh	r3, [r7, #78]	@ movhi
  98:App/STM32F4-Discovery/spi.c **** 	SPI_InitStruct.SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_4; // SPI frequency is APB2 frequency
 198              		.loc 1 98 0
 199 011e 0823     		movs	r3, #8
 200 0120 A7F85030 		strh	r3, [r7, #80]	@ movhi
  99:App/STM32F4-Discovery/spi.c **** 	SPI_InitStruct.SPI_FirstBit = SPI_FirstBit_MSB;// data is transmitted MSB first
 201              		.loc 1 99 0
 202 0124 0023     		movs	r3, #0
 203 0126 A7F85230 		strh	r3, [r7, #82]	@ movhi
 100:App/STM32F4-Discovery/spi.c **** 	SPI_Init(SPIx, &SPI_InitStruct); 
 204              		.loc 1 100 0
 205 012a 07F14403 		add	r3, r7, #68
 206 012e 4B48     		ldr	r0, .L4+4
 207 0130 1946     		mov	r1, r3
 208 0132 FFF7FEFF 		bl	SPI_Init
 101:App/STM32F4-Discovery/spi.c **** 	
 102:App/STM32F4-Discovery/spi.c **** 	SPI_Cmd(SPIx, ENABLE);			
 209              		.loc 1 102 0
 210 0136 4948     		ldr	r0, .L4+4
 211 0138 0121     		movs	r1, #1
 212 013a FFF7FEFF 		bl	SPI_Cmd
 103:App/STM32F4-Discovery/spi.c **** 	
 104:App/STM32F4-Discovery/spi.c **** 
 105:App/STM32F4-Discovery/spi.c **** 	/* setup DMA */
 106:App/STM32F4-Discovery/spi.c **** 
 107:App/STM32F4-Discovery/spi.c **** 	// enable clock 
 108:App/STM32F4-Discovery/spi.c **** 	RCC_AHB1PeriphClockCmd (SPIx_DMA_CLK, ENABLE); 
 213              		.loc 1 108 0
 214 013e 4FF48000 		mov	r0, #4194304
 215 0142 0121     		movs	r1, #1
 216 0144 FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
 109:App/STM32F4-Discovery/spi.c **** 	
 110:App/STM32F4-Discovery/spi.c **** 	// start with blank DMA configuration
 111:App/STM32F4-Discovery/spi.c **** 	DMA_DeInit (SPIx_TX_DMA_STREAM);
 217              		.loc 1 111 0
 218 0148 4548     		ldr	r0, .L4+8
 219 014a FFF7FEFF 		bl	DMA_DeInit
 112:App/STM32F4-Discovery/spi.c **** 	DMA_DeInit (SPIx_RX_DMA_STREAM);
 220              		.loc 1 112 0
 221 014e 4548     		ldr	r0, .L4+12
 222 0150 FFF7FEFF 		bl	DMA_DeInit
 113:App/STM32F4-Discovery/spi.c **** 
 114:App/STM32F4-Discovery/spi.c **** 	// check if DMA stream is disabled before enabling 
 115:App/STM32F4-Discovery/spi.c **** 	// this is useful when stream is enabled and disabled multiple times. 
 116:App/STM32F4-Discovery/spi.c **** 	while (DMA_GetCmdStatus (SPIx_TX_DMA_STREAM) != DISABLE);
 223              		.loc 1 116 0
 224 0154 00BF     		nop
 225              	.L2:
 226              		.loc 1 116 0 is_stmt 0 discriminator 1
 227 0156 4248     		ldr	r0, .L4+8
 228 0158 FFF7FEFF 		bl	DMA_GetCmdStatus
 229 015c 0346     		mov	r3, r0
 230 015e 002B     		cmp	r3, #0
 231 0160 F9D1     		bne	.L2
 117:App/STM32F4-Discovery/spi.c **** 	while (DMA_GetCmdStatus (SPIx_RX_DMA_STREAM) != DISABLE);
 232              		.loc 1 117 0 is_stmt 1
 233 0162 00BF     		nop
 234              	.L3:
 235              		.loc 1 117 0 is_stmt 0 discriminator 1
 236 0164 3F48     		ldr	r0, .L4+12
 237 0166 FFF7FEFF 		bl	DMA_GetCmdStatus
 238 016a 0346     		mov	r3, r0
 239 016c 002B     		cmp	r3, #0
 240 016e F9D1     		bne	.L3
 118:App/STM32F4-Discovery/spi.c **** 	
 119:App/STM32F4-Discovery/spi.c **** 	
 120:App/STM32F4-Discovery/spi.c **** 	DMA_StructInit(&DMA_InitStruct);
 241              		.loc 1 120 0 is_stmt 1
 242 0170 07F10803 		add	r3, r7, #8
 243 0174 1846     		mov	r0, r3
 244 0176 FFF7FEFF 		bl	DMA_StructInit
 121:App/STM32F4-Discovery/spi.c ****   	//Configure DMA Initialization Structure
 122:App/STM32F4-Discovery/spi.c **** 	//DMA_InitStruct.DMA_FIFOMode = DMA_FIFOMode_Disable ;
 123:App/STM32F4-Discovery/spi.c ****  	//DMA_InitStruct.DMA_FIFOThreshold = DMA_FIFOThreshold_HalfFull ;
 124:App/STM32F4-Discovery/spi.c ****   	//DMA_InitStruct.DMA_MemoryBurst = DMA_MemoryBurst_Single ;
 125:App/STM32F4-Discovery/spi.c ****   	DMA_InitStruct.DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;
 245              		.loc 1 125 0
 246 017a 0023     		movs	r3, #0
 247 017c BB62     		str	r3, [r7, #40]
 126:App/STM32F4-Discovery/spi.c ****   	DMA_InitStruct.DMA_MemoryInc = DMA_MemoryInc_Enable;
 248              		.loc 1 126 0
 249 017e 4FF48063 		mov	r3, #1024
 250 0182 3B62     		str	r3, [r7, #32]
 127:App/STM32F4-Discovery/spi.c ****   	DMA_InitStruct.DMA_Mode = DMA_Mode_Normal;
 251              		.loc 1 127 0
 252 0184 0023     		movs	r3, #0
 253 0186 FB62     		str	r3, [r7, #44]
 128:App/STM32F4-Discovery/spi.c ****   	DMA_InitStruct.DMA_PeripheralBaseAddr =(uint32_t) (&(SPIx->DR)) ;
 254              		.loc 1 128 0
 255 0188 374B     		ldr	r3, .L4+16
 256 018a FB60     		str	r3, [r7, #12]
 129:App/STM32F4-Discovery/spi.c ****   	DMA_InitStruct.DMA_PeripheralBurst = DMA_PeripheralBurst_Single;
 257              		.loc 1 129 0
 258 018c 0023     		movs	r3, #0
 259 018e 3B64     		str	r3, [r7, #64]
 130:App/STM32F4-Discovery/spi.c ****   	DMA_InitStruct.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;
 260              		.loc 1 130 0
 261 0190 0023     		movs	r3, #0
 262 0192 7B62     		str	r3, [r7, #36]
 131:App/STM32F4-Discovery/spi.c ****   	DMA_InitStruct.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
 263              		.loc 1 131 0
 264 0194 0023     		movs	r3, #0
 265 0196 FB61     		str	r3, [r7, #28]
 132:App/STM32F4-Discovery/spi.c ****   	DMA_InitStruct.DMA_Priority = DMA_Priority_High;
 266              		.loc 1 132 0
 267 0198 4FF40033 		mov	r3, #131072
 268 019c 3B63     		str	r3, [r7, #48]
 133:App/STM32F4-Discovery/spi.c ****   	// Configure TX DMA 
 134:App/STM32F4-Discovery/spi.c ****   	DMA_InitStruct.DMA_Channel = SPIx_TX_DMA_CHANNEL ;
 269              		.loc 1 134 0
 270 019e 4FF0C063 		mov	r3, #100663296
 271 01a2 BB60     		str	r3, [r7, #8]
 135:App/STM32F4-Discovery/spi.c ****   	DMA_InitStruct.DMA_DIR = DMA_DIR_MemoryToPeripheral ;
 272              		.loc 1 135 0
 273 01a4 4023     		movs	r3, #64
 274 01a6 7B61     		str	r3, [r7, #20]
 136:App/STM32F4-Discovery/spi.c ****   	DMA_InitStruct.DMA_Memory0BaseAddr = (uint32_t) &bufferTXspi ;
 275              		.loc 1 136 0
 276 01a8 304B     		ldr	r3, .L4+20
 277 01aa 3B61     		str	r3, [r7, #16]
 137:App/STM32F4-Discovery/spi.c **** 	DMA_InitStruct.DMA_BufferSize = MAX_BUFFER_LENGTH;
 278              		.loc 1 137 0
 279 01ac C823     		movs	r3, #200
 280 01ae BB61     		str	r3, [r7, #24]
 138:App/STM32F4-Discovery/spi.c ****   	DMA_Init(SPIx_TX_DMA_STREAM, &DMA_InitStruct);
 281              		.loc 1 138 0
 282 01b0 07F10803 		add	r3, r7, #8
 283 01b4 2A48     		ldr	r0, .L4+8
 284 01b6 1946     		mov	r1, r3
 285 01b8 FFF7FEFF 		bl	DMA_Init
 139:App/STM32F4-Discovery/spi.c **** 	// Configure RX DMA 
 140:App/STM32F4-Discovery/spi.c ****   	DMA_InitStruct.DMA_Channel = SPIx_RX_DMA_CHANNEL ;
 286              		.loc 1 140 0
 287 01bc 4FF0C063 		mov	r3, #100663296
 288 01c0 BB60     		str	r3, [r7, #8]
 141:App/STM32F4-Discovery/spi.c **** 	DMA_InitStruct.DMA_DIR = DMA_DIR_PeripheralToMemory ;
 289              		.loc 1 141 0
 290 01c2 0023     		movs	r3, #0
 291 01c4 7B61     		str	r3, [r7, #20]
 142:App/STM32F4-Discovery/spi.c **** 	DMA_InitStruct.DMA_Memory0BaseAddr = (uint32_t)&bufferRXspi; 
 292              		.loc 1 142 0
 293 01c6 2A4B     		ldr	r3, .L4+24
 294 01c8 3B61     		str	r3, [r7, #16]
 143:App/STM32F4-Discovery/spi.c **** 	DMA_InitStruct.DMA_BufferSize = MAX_BUFFER_LENGTH;
 295              		.loc 1 143 0
 296 01ca C823     		movs	r3, #200
 297 01cc BB61     		str	r3, [r7, #24]
 144:App/STM32F4-Discovery/spi.c **** 	DMA_Init(SPIx_RX_DMA_STREAM, &DMA_InitStruct);	
 298              		.loc 1 144 0
 299 01ce 07F10803 		add	r3, r7, #8
 300 01d2 2448     		ldr	r0, .L4+12
 301 01d4 1946     		mov	r1, r3
 302 01d6 FFF7FEFF 		bl	DMA_Init
 145:App/STM32F4-Discovery/spi.c **** 	
 146:App/STM32F4-Discovery/spi.c **** 	DMA_ITConfig(SPIx_TX_DMA_STREAM, DMA_IT_TC, ENABLE); 
 303              		.loc 1 146 0
 304 01da 2148     		ldr	r0, .L4+8
 305 01dc 1021     		movs	r1, #16
 306 01de 0122     		movs	r2, #1
 307 01e0 FFF7FEFF 		bl	DMA_ITConfig
 147:App/STM32F4-Discovery/spi.c **** 	DMA_ITConfig(SPIx_RX_DMA_STREAM, DMA_IT_TC, ENABLE); 
 308              		.loc 1 147 0
 309 01e4 1F48     		ldr	r0, .L4+12
 310 01e6 1021     		movs	r1, #16
 311 01e8 0122     		movs	r2, #1
 312 01ea FFF7FEFF 		bl	DMA_ITConfig
 148:App/STM32F4-Discovery/spi.c ****   
 149:App/STM32F4-Discovery/spi.c **** 	SPI_I2S_ClearFlag(SPIx, SPI_I2S_FLAG_TXE);
 313              		.loc 1 149 0
 314 01ee 1B48     		ldr	r0, .L4+4
 315 01f0 0221     		movs	r1, #2
 316 01f2 FFF7FEFF 		bl	SPI_I2S_ClearFlag
 150:App/STM32F4-Discovery/spi.c **** 	SPI_I2S_ClearFlag(SPIx, SPI_I2S_FLAG_RXNE);
 317              		.loc 1 150 0
 318 01f6 1948     		ldr	r0, .L4+4
 319 01f8 0121     		movs	r1, #1
 320 01fa FFF7FEFF 		bl	SPI_I2S_ClearFlag
 151:App/STM32F4-Discovery/spi.c ****   	
 152:App/STM32F4-Discovery/spi.c **** 	// enable the interrupt in the NVIC
 153:App/STM32F4-Discovery/spi.c ****  	NVIC_InitStruct.NVIC_IRQChannel = SPIx_TX_DMA_IRQn;
 321              		.loc 1 153 0
 322 01fe 3B23     		movs	r3, #59
 323 0200 3B71     		strb	r3, [r7, #4]
 154:App/STM32F4-Discovery/spi.c ****   	NVIC_InitStruct.NVIC_IRQChannelPreemptionPriority = configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY
 324              		.loc 1 154 0
 325 0202 0723     		movs	r3, #7
 326 0204 7B71     		strb	r3, [r7, #5]
 155:App/STM32F4-Discovery/spi.c ****  	NVIC_InitStruct.NVIC_IRQChannelSubPriority = 0x1;
 327              		.loc 1 155 0
 328 0206 0123     		movs	r3, #1
 329 0208 BB71     		strb	r3, [r7, #6]
 156:App/STM32F4-Discovery/spi.c ****   	NVIC_InitStruct.NVIC_IRQChannelCmd = ENABLE;
 330              		.loc 1 156 0
 331 020a 0123     		movs	r3, #1
 332 020c FB71     		strb	r3, [r7, #7]
 157:App/STM32F4-Discovery/spi.c ****   	NVIC_Init (&NVIC_InitStruct);
 333              		.loc 1 157 0
 334 020e 3B1D     		adds	r3, r7, #4
 335 0210 1846     		mov	r0, r3
 336 0212 FFF7FEFF 		bl	NVIC_Init
 158:App/STM32F4-Discovery/spi.c **** 	// enable the interrupt in the NVIC
 159:App/STM32F4-Discovery/spi.c ****  	NVIC_InitStruct.NVIC_IRQChannel = SPIx_RX_DMA_IRQn;
 337              		.loc 1 159 0
 338 0216 3A23     		movs	r3, #58
 339 0218 3B71     		strb	r3, [r7, #4]
 160:App/STM32F4-Discovery/spi.c ****    	NVIC_InitStruct.NVIC_IRQChannelPreemptionPriority = configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORIT
 340              		.loc 1 160 0
 341 021a 0723     		movs	r3, #7
 342 021c 7B71     		strb	r3, [r7, #5]
 161:App/STM32F4-Discovery/spi.c ****  	NVIC_InitStruct.NVIC_IRQChannelSubPriority = 0x1;
 343              		.loc 1 161 0
 344 021e 0123     		movs	r3, #1
 345 0220 BB71     		strb	r3, [r7, #6]
 162:App/STM32F4-Discovery/spi.c ****   	NVIC_InitStruct.NVIC_IRQChannelCmd = ENABLE;
 346              		.loc 1 162 0
 347 0222 0123     		movs	r3, #1
 348 0224 FB71     		strb	r3, [r7, #7]
 163:App/STM32F4-Discovery/spi.c ****   	NVIC_Init (&NVIC_InitStruct);
 349              		.loc 1 163 0
 350 0226 3B1D     		adds	r3, r7, #4
 351 0228 1846     		mov	r0, r3
 352 022a FFF7FEFF 		bl	NVIC_Init
 164:App/STM32F4-Discovery/spi.c ****   	// Enable dma tx and rx request
 165:App/STM32F4-Discovery/spi.c **** 	SPI_I2S_DMACmd (SPIx, SPI_I2S_DMAReq_Tx, ENABLE);	
 353              		.loc 1 165 0
 354 022e 0B48     		ldr	r0, .L4+4
 355 0230 0221     		movs	r1, #2
 356 0232 0122     		movs	r2, #1
 357 0234 FFF7FEFF 		bl	SPI_I2S_DMACmd
 166:App/STM32F4-Discovery/spi.c **** 	SPI_I2S_DMACmd (SPIx, SPI_I2S_DMAReq_Rx, ENABLE);	
 358              		.loc 1 166 0
 359 0238 0848     		ldr	r0, .L4+4
 360 023a 0121     		movs	r1, #1
 361 023c 0122     		movs	r2, #1
 362 023e FFF7FEFF 		bl	SPI_I2S_DMACmd
 167:App/STM32F4-Discovery/spi.c **** 
 168:App/STM32F4-Discovery/spi.c **** //	xSemaphoreDMASPIxTX = xSemaphoreCreateBinary();
 169:App/STM32F4-Discovery/spi.c **** //	xSemaphoreDMASPIxRX = xSemaphoreCreateBinary();
 170:App/STM32F4-Discovery/spi.c ****        	xSemaphoreDMASPIx   = xSemaphoreCreateBinary();	
 363              		.loc 1 170 0
 364 0242 0120     		movs	r0, #1
 365 0244 0021     		movs	r1, #0
 366 0246 0322     		movs	r2, #3
 367 0248 FFF7FEFF 		bl	xQueueGenericCreate
 368 024c 0246     		mov	r2, r0
 369 024e 094B     		ldr	r3, .L4+28
 370 0250 1A60     		str	r2, [r3]
 171:App/STM32F4-Discovery/spi.c **** }
 371              		.loc 1 171 0
 372 0252 6037     		adds	r7, r7, #96
 373 0254 BD46     		mov	sp, r7
 374              		@ sp needed
 375 0256 80BD     		pop	{r7, pc}
 376              	.L5:
 377              		.align	2
 378              	.L4:
 379 0258 00000240 		.word	1073872896
 380 025c 00300140 		.word	1073819648
 381 0260 58640240 		.word	1073898584
 382 0264 40640240 		.word	1073898560
 383 0268 0C300140 		.word	1073819660
 384 026c 00000000 		.word	bufferTXspi
 385 0270 00000000 		.word	bufferRXspi
 386 0274 00000000 		.word	xSemaphoreDMASPIx
 387              		.cfi_endproc
 388              	.LFE110:
 390              		.section	.text.init_SPIy,"ax",%progbits
 391              		.align	2
 392              		.global	init_SPIy
 393              		.thumb
 394              		.thumb_func
 396              	init_SPIy:
 397              	.LFB111:
 172:App/STM32F4-Discovery/spi.c **** 
 173:App/STM32F4-Discovery/spi.c **** void init_SPIy(void){
 398              		.loc 1 173 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 96
 401              		@ frame_needed = 1, uses_anonymous_args = 0
 402 0000 80B5     		push	{r7, lr}
 403              	.LCFI3:
 404              		.cfi_def_cfa_offset 8
 405              		.cfi_offset 7, -8
 406              		.cfi_offset 14, -4
 407 0002 98B0     		sub	sp, sp, #96
 408              	.LCFI4:
 409              		.cfi_def_cfa_offset 104
 410 0004 00AF     		add	r7, sp, #0
 411              	.LCFI5:
 412              		.cfi_def_cfa_register 7
 174:App/STM32F4-Discovery/spi.c **** 	
 175:App/STM32F4-Discovery/spi.c **** 
 176:App/STM32F4-Discovery/spi.c **** 	/*! Initialize SPI pheriphial with DMA controller \n
 177:App/STM32F4-Discovery/spi.c **** 	 *  - SPI setup
 178:App/STM32F4-Discovery/spi.c **** 	 *  	+ MISO PA6
 179:App/STM32F4-Discovery/spi.c **** 	 *  	+ MOSI PA7
 180:App/STM32F4-Discovery/spi.c **** 	 *  	+ SCK PA5
 181:App/STM32F4-Discovery/spi.c **** 	 *	+ CS PA4
 182:App/STM32F4-Discovery/spi.c **** 	 *	+ HR pin PC5
 183:App/STM32F4-Discovery/spi.c **** 	 *\n
 184:App/STM32F4-Discovery/spi.c **** 	 * - WIZNET setup 
 185:App/STM32F4-Discovery/spi.c **** 	 *   	+ IT PC4 
 186:App/STM32F4-Discovery/spi.c **** 	 * */
 187:App/STM32F4-Discovery/spi.c **** 	GPIO_InitTypeDef GPIO_InitStruct;
 188:App/STM32F4-Discovery/spi.c **** 	SPI_InitTypeDef SPI_InitStruct;
 189:App/STM32F4-Discovery/spi.c **** 	DMA_InitTypeDef DMA_InitStruct;
 190:App/STM32F4-Discovery/spi.c **** 	NVIC_InitTypeDef NVIC_InitStruct;
 191:App/STM32F4-Discovery/spi.c **** 
 192:App/STM32F4-Discovery/spi.c **** 	
 193:App/STM32F4-Discovery/spi.c **** 	
 194:App/STM32F4-Discovery/spi.c **** 	// enable clock for used IO pins
 195:App/STM32F4-Discovery/spi.c **** 	RCC_AHB1PeriphClockCmd(SPIy_MOSI_GPIO_CLK, ENABLE);
 413              		.loc 1 195 0
 414 0006 0220     		movs	r0, #2
 415 0008 0121     		movs	r1, #1
 416 000a FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
 196:App/STM32F4-Discovery/spi.c **** 	RCC_AHB1PeriphClockCmd(SPIy_MISO_GPIO_CLK, ENABLE);
 417              		.loc 1 196 0
 418 000e 0220     		movs	r0, #2
 419 0010 0121     		movs	r1, #1
 420 0012 FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
 197:App/STM32F4-Discovery/spi.c **** 	RCC_AHB1PeriphClockCmd(SPIy_SCK_GPIO_CLK, ENABLE);
 421              		.loc 1 197 0
 422 0016 0220     		movs	r0, #2
 423 0018 0121     		movs	r1, #1
 424 001a FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
 198:App/STM32F4-Discovery/spi.c **** 	
 199:App/STM32F4-Discovery/spi.c **** 	/* configure pins used by SPIx
 200:App/STM32F4-Discovery/spi.c **** 	 * PA5 = SCK
 201:App/STM32F4-Discovery/spi.c **** 	 * PA6 = MISO
 202:App/STM32F4-Discovery/spi.c **** 	 * PA7 = MOSI
 203:App/STM32F4-Discovery/spi.c **** 	 */
 204:App/STM32F4-Discovery/spi.c **** 	// MOSI PA7
 205:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_Pin = SPIy_MOSI_PIN ;
 425              		.loc 1 205 0
 426 001e 4FF40043 		mov	r3, #32768
 427 0022 BB65     		str	r3, [r7, #88]
 206:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF;
 428              		.loc 1 206 0
 429 0024 0223     		movs	r3, #2
 430 0026 87F85C30 		strb	r3, [r7, #92]
 207:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;
 431              		.loc 1 207 0
 432 002a 0023     		movs	r3, #0
 433 002c 87F85E30 		strb	r3, [r7, #94]
 208:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;
 434              		.loc 1 208 0
 435 0030 0323     		movs	r3, #3
 436 0032 87F85D30 		strb	r3, [r7, #93]
 209:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_DOWN;
 437              		.loc 1 209 0
 438 0036 0223     		movs	r3, #2
 439 0038 87F85F30 		strb	r3, [r7, #95]
 210:App/STM32F4-Discovery/spi.c **** 	GPIO_Init(SPIy_MOSI_GPIO_PORT, &GPIO_InitStruct);
 440              		.loc 1 210 0
 441 003c 07F15803 		add	r3, r7, #88
 442 0040 8648     		ldr	r0, .L9
 443 0042 1946     		mov	r1, r3
 444 0044 FFF7FEFF 		bl	GPIO_Init
 211:App/STM32F4-Discovery/spi.c **** 	// SCK PA5
 212:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_Pin = SPIy_SCK_PIN;
 445              		.loc 1 212 0
 446 0048 4FF40053 		mov	r3, #8192
 447 004c BB65     		str	r3, [r7, #88]
 213:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF;
 448              		.loc 1 213 0
 449 004e 0223     		movs	r3, #2
 450 0050 87F85C30 		strb	r3, [r7, #92]
 214:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;
 451              		.loc 1 214 0
 452 0054 0023     		movs	r3, #0
 453 0056 87F85E30 		strb	r3, [r7, #94]
 215:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;
 454              		.loc 1 215 0
 455 005a 0323     		movs	r3, #3
 456 005c 87F85D30 		strb	r3, [r7, #93]
 216:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_DOWN;
 457              		.loc 1 216 0
 458 0060 0223     		movs	r3, #2
 459 0062 87F85F30 		strb	r3, [r7, #95]
 217:App/STM32F4-Discovery/spi.c **** 	GPIO_Init(SPIy_SCK_GPIO_PORT, &GPIO_InitStruct);
 460              		.loc 1 217 0
 461 0066 07F15803 		add	r3, r7, #88
 462 006a 7C48     		ldr	r0, .L9
 463 006c 1946     		mov	r1, r3
 464 006e FFF7FEFF 		bl	GPIO_Init
 218:App/STM32F4-Discovery/spi.c **** 	// MISO PA6
 219:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_Pin = SPIy_MISO_PIN;
 465              		.loc 1 219 0
 466 0072 4FF48043 		mov	r3, #16384
 467 0076 BB65     		str	r3, [r7, #88]
 220:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF;
 468              		.loc 1 220 0
 469 0078 0223     		movs	r3, #2
 470 007a 87F85C30 		strb	r3, [r7, #92]
 221:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_OType = GPIO_OType_OD;
 471              		.loc 1 221 0
 472 007e 0123     		movs	r3, #1
 473 0080 87F85E30 		strb	r3, [r7, #94]
 222:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;
 474              		.loc 1 222 0
 475 0084 0323     		movs	r3, #3
 476 0086 87F85D30 		strb	r3, [r7, #93]
 223:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_NOPULL;
 477              		.loc 1 223 0
 478 008a 0023     		movs	r3, #0
 479 008c 87F85F30 		strb	r3, [r7, #95]
 224:App/STM32F4-Discovery/spi.c **** 	GPIO_Init(SPIy_MISO_GPIO_PORT, &GPIO_InitStruct);
 480              		.loc 1 224 0
 481 0090 07F15803 		add	r3, r7, #88
 482 0094 7148     		ldr	r0, .L9
 483 0096 1946     		mov	r1, r3
 484 0098 FFF7FEFF 		bl	GPIO_Init
 225:App/STM32F4-Discovery/spi.c **** 	
 226:App/STM32F4-Discovery/spi.c **** 	// connect SPIx pins to SPI alternate function
 227:App/STM32F4-Discovery/spi.c **** 	GPIO_PinAFConfig(SPIy_MISO_GPIO_PORT, SPIy_MISO_SOURCE, SPIy_MISO_AF);
 485              		.loc 1 227 0
 486 009c 6F48     		ldr	r0, .L9
 487 009e 0E21     		movs	r1, #14
 488 00a0 0522     		movs	r2, #5
 489 00a2 FFF7FEFF 		bl	GPIO_PinAFConfig
 228:App/STM32F4-Discovery/spi.c **** 	GPIO_PinAFConfig(SPIy_MOSI_GPIO_PORT, SPIy_MOSI_SOURCE, SPIy_MOSI_AF);
 490              		.loc 1 228 0
 491 00a6 6D48     		ldr	r0, .L9
 492 00a8 0F21     		movs	r1, #15
 493 00aa 0522     		movs	r2, #5
 494 00ac FFF7FEFF 		bl	GPIO_PinAFConfig
 229:App/STM32F4-Discovery/spi.c **** 	GPIO_PinAFConfig(SPIy_SCK_GPIO_PORT,  SPIy_SCK_SOURCE,  SPIy_SCK_AF);
 495              		.loc 1 229 0
 496 00b0 6A48     		ldr	r0, .L9
 497 00b2 0D21     		movs	r1, #13
 498 00b4 0522     		movs	r2, #5
 499 00b6 FFF7FEFF 		bl	GPIO_PinAFConfig
 230:App/STM32F4-Discovery/spi.c **** 
 231:App/STM32F4-Discovery/spi.c **** 		
 232:App/STM32F4-Discovery/spi.c **** 	/* Configure the chip select pin
 233:App/STM32F4-Discovery/spi.c **** 	   in this case we will use PA4 */
 234:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_Pin = SPIy_CS_PIN;
 500              		.loc 1 234 0
 501 00ba 4FF48053 		mov	r3, #4096
 502 00be BB65     		str	r3, [r7, #88]
 235:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_OUT;
 503              		.loc 1 235 0
 504 00c0 0123     		movs	r3, #1
 505 00c2 87F85C30 		strb	r3, [r7, #92]
 236:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;
 506              		.loc 1 236 0
 507 00c6 0023     		movs	r3, #0
 508 00c8 87F85E30 		strb	r3, [r7, #94]
 237:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;
 509              		.loc 1 237 0
 510 00cc 0323     		movs	r3, #3
 511 00ce 87F85D30 		strb	r3, [r7, #93]
 238:App/STM32F4-Discovery/spi.c **** 	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;
 512              		.loc 1 238 0
 513 00d2 0123     		movs	r3, #1
 514 00d4 87F85F30 		strb	r3, [r7, #95]
 239:App/STM32F4-Discovery/spi.c **** 	GPIO_Init(SPIy_CS_GPIO_PORT, &GPIO_InitStruct);
 515              		.loc 1 239 0
 516 00d8 07F15803 		add	r3, r7, #88
 517 00dc 5F48     		ldr	r0, .L9
 518 00de 1946     		mov	r1, r3
 519 00e0 FFF7FEFF 		bl	GPIO_Init
 240:App/STM32F4-Discovery/spi.c **** 	
 241:App/STM32F4-Discovery/spi.c **** 	CSOFFy(); // set PA4 high
 520              		.loc 1 241 0
 521 00e4 5D4B     		ldr	r3, .L9
 522 00e6 5D4A     		ldr	r2, .L9
 523 00e8 128B     		ldrh	r2, [r2, #24]	@ movhi
 524 00ea 92B2     		uxth	r2, r2
 525 00ec 42F48052 		orr	r2, r2, #4096
 526 00f0 92B2     		uxth	r2, r2
 527 00f2 1A83     		strh	r2, [r3, #24]	@ movhi
 242:App/STM32F4-Discovery/spi.c **** 
 243:App/STM32F4-Discovery/spi.c **** 
 244:App/STM32F4-Discovery/spi.c **** 	// enable peripheral clock
 245:App/STM32F4-Discovery/spi.c **** 	RCC_APB2PeriphClockCmd(SPIy_CLK, ENABLE);
 528              		.loc 1 245 0
 529 00f4 4FF48040 		mov	r0, #16384
 530 00f8 0121     		movs	r1, #1
 531 00fa FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 246:App/STM32F4-Discovery/spi.c **** 	
 247:App/STM32F4-Discovery/spi.c **** 	/* configure SPIx in Mode 0 
 248:App/STM32F4-Discovery/spi.c **** 	 * CPOL = 0 --> clock is low when idle
 249:App/STM32F4-Discovery/spi.c **** 	 * CPHA = 0 --> data is sampled at the first edge
 250:App/STM32F4-Discovery/spi.c **** 	 */
 251:App/STM32F4-Discovery/spi.c **** 	SPI_InitStruct.SPI_Direction = SPI_Direction_2Lines_FullDuplex; // set to full duplex mode, sepera
 532              		.loc 1 251 0
 533 00fe 0023     		movs	r3, #0
 534 0100 A7F84430 		strh	r3, [r7, #68]	@ movhi
 252:App/STM32F4-Discovery/spi.c **** 	SPI_InitStruct.SPI_Mode = SPI_Mode_Master;     // transmit in master mode, NSS pin has to be alway
 535              		.loc 1 252 0
 536 0104 4FF48273 		mov	r3, #260
 537 0108 A7F84630 		strh	r3, [r7, #70]	@ movhi
 253:App/STM32F4-Discovery/spi.c **** 	SPI_InitStruct.SPI_DataSize = SPI_DataSize_8b; // one packet of data is 8 bits wide
 538              		.loc 1 253 0
 539 010c 0023     		movs	r3, #0
 540 010e A7F84830 		strh	r3, [r7, #72]	@ movhi
 254:App/STM32F4-Discovery/spi.c **** 	SPI_InitStruct.SPI_CPOL = SPI_CPOL_Low;        // clock is low when idle
 541              		.loc 1 254 0
 542 0112 0023     		movs	r3, #0
 543 0114 A7F84A30 		strh	r3, [r7, #74]	@ movhi
 255:App/STM32F4-Discovery/spi.c **** 	SPI_InitStruct.SPI_CPHA = SPI_CPHA_1Edge;      // data sampled at second edge
 544              		.loc 1 255 0
 545 0118 0023     		movs	r3, #0
 546 011a A7F84C30 		strh	r3, [r7, #76]	@ movhi
 256:App/STM32F4-Discovery/spi.c **** 	SPI_InitStruct.SPI_NSS = SPI_NSS_Soft | SPI_NSSInternalSoft_Set; // set the NSS management to inte
 547              		.loc 1 256 0
 548 011e 4FF44073 		mov	r3, #768
 549 0122 A7F84E30 		strh	r3, [r7, #78]	@ movhi
 257:App/STM32F4-Discovery/spi.c **** 	SPI_InitStruct.SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_4; // SPI frequency is APB2 frequency
 550              		.loc 1 257 0
 551 0126 0823     		movs	r3, #8
 552 0128 A7F85030 		strh	r3, [r7, #80]	@ movhi
 258:App/STM32F4-Discovery/spi.c **** 	SPI_InitStruct.SPI_FirstBit = SPI_FirstBit_MSB;// data is transmitted MSB first
 553              		.loc 1 258 0
 554 012c 0023     		movs	r3, #0
 555 012e A7F85230 		strh	r3, [r7, #82]	@ movhi
 259:App/STM32F4-Discovery/spi.c **** 	SPI_Init(SPIy, &SPI_InitStruct); 
 556              		.loc 1 259 0
 557 0132 07F14403 		add	r3, r7, #68
 558 0136 4A48     		ldr	r0, .L9+4
 559 0138 1946     		mov	r1, r3
 560 013a FFF7FEFF 		bl	SPI_Init
 260:App/STM32F4-Discovery/spi.c **** 	
 261:App/STM32F4-Discovery/spi.c **** 	SPI_Cmd(SPIy, ENABLE);			
 561              		.loc 1 261 0
 562 013e 4848     		ldr	r0, .L9+4
 563 0140 0121     		movs	r1, #1
 564 0142 FFF7FEFF 		bl	SPI_Cmd
 262:App/STM32F4-Discovery/spi.c **** 	
 263:App/STM32F4-Discovery/spi.c **** 
 264:App/STM32F4-Discovery/spi.c **** 	/* setup DMA */
 265:App/STM32F4-Discovery/spi.c **** 
 266:App/STM32F4-Discovery/spi.c **** 	// enable clock 
 267:App/STM32F4-Discovery/spi.c **** 	RCC_AHB1PeriphClockCmd (SPIy_DMA_CLK, ENABLE); 
 565              		.loc 1 267 0
 566 0146 4FF40010 		mov	r0, #2097152
 567 014a 0121     		movs	r1, #1
 568 014c FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
 268:App/STM32F4-Discovery/spi.c **** 	
 269:App/STM32F4-Discovery/spi.c **** 	// start with blank DMA configuration
 270:App/STM32F4-Discovery/spi.c **** 	DMA_DeInit (SPIy_TX_DMA_STREAM);
 569              		.loc 1 270 0
 570 0150 4448     		ldr	r0, .L9+8
 571 0152 FFF7FEFF 		bl	DMA_DeInit
 271:App/STM32F4-Discovery/spi.c **** 	DMA_DeInit (SPIy_RX_DMA_STREAM);
 572              		.loc 1 271 0
 573 0156 4448     		ldr	r0, .L9+12
 574 0158 FFF7FEFF 		bl	DMA_DeInit
 272:App/STM32F4-Discovery/spi.c **** 
 273:App/STM32F4-Discovery/spi.c **** 	// check if DMA stream is disabled before enabling 
 274:App/STM32F4-Discovery/spi.c **** 	// this is useful when stream is enabled and disabled multiple times. 
 275:App/STM32F4-Discovery/spi.c **** 	while (DMA_GetCmdStatus (SPIy_TX_DMA_STREAM) != DISABLE);
 575              		.loc 1 275 0
 576 015c 00BF     		nop
 577              	.L7:
 578              		.loc 1 275 0 is_stmt 0 discriminator 1
 579 015e 4148     		ldr	r0, .L9+8
 580 0160 FFF7FEFF 		bl	DMA_GetCmdStatus
 581 0164 0346     		mov	r3, r0
 582 0166 002B     		cmp	r3, #0
 583 0168 F9D1     		bne	.L7
 276:App/STM32F4-Discovery/spi.c **** 	while (DMA_GetCmdStatus (SPIy_RX_DMA_STREAM) != DISABLE);
 584              		.loc 1 276 0 is_stmt 1
 585 016a 00BF     		nop
 586              	.L8:
 587              		.loc 1 276 0 is_stmt 0 discriminator 1
 588 016c 3E48     		ldr	r0, .L9+12
 589 016e FFF7FEFF 		bl	DMA_GetCmdStatus
 590 0172 0346     		mov	r3, r0
 591 0174 002B     		cmp	r3, #0
 592 0176 F9D1     		bne	.L8
 277:App/STM32F4-Discovery/spi.c **** 	
 278:App/STM32F4-Discovery/spi.c **** 	
 279:App/STM32F4-Discovery/spi.c **** 	DMA_StructInit(&DMA_InitStruct);
 593              		.loc 1 279 0 is_stmt 1
 594 0178 07F10803 		add	r3, r7, #8
 595 017c 1846     		mov	r0, r3
 596 017e FFF7FEFF 		bl	DMA_StructInit
 280:App/STM32F4-Discovery/spi.c ****   	//Configure DMA Initialization Structure
 281:App/STM32F4-Discovery/spi.c **** 	//DMA_InitStruct.DMA_FIFOMode = DMA_FIFOMode_Disable ;
 282:App/STM32F4-Discovery/spi.c ****  	//DMA_InitStruct.DMA_FIFOThreshold = DMA_FIFOThreshold_HalfFull ;
 283:App/STM32F4-Discovery/spi.c ****   	//DMA_InitStruct.DMA_MemoryBurst = DMA_MemoryBurst_Single ;
 284:App/STM32F4-Discovery/spi.c ****   	DMA_InitStruct.DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;
 597              		.loc 1 284 0
 598 0182 0023     		movs	r3, #0
 599 0184 BB62     		str	r3, [r7, #40]
 285:App/STM32F4-Discovery/spi.c ****   	DMA_InitStruct.DMA_MemoryInc = DMA_MemoryInc_Enable;
 600              		.loc 1 285 0
 601 0186 4FF48063 		mov	r3, #1024
 602 018a 3B62     		str	r3, [r7, #32]
 286:App/STM32F4-Discovery/spi.c ****   	DMA_InitStruct.DMA_Mode = DMA_Mode_Normal;
 603              		.loc 1 286 0
 604 018c 0023     		movs	r3, #0
 605 018e FB62     		str	r3, [r7, #44]
 287:App/STM32F4-Discovery/spi.c ****   	DMA_InitStruct.DMA_PeripheralBaseAddr =(uint32_t) (&(SPIy->DR)) ;
 606              		.loc 1 287 0
 607 0190 364B     		ldr	r3, .L9+16
 608 0192 FB60     		str	r3, [r7, #12]
 288:App/STM32F4-Discovery/spi.c ****   	DMA_InitStruct.DMA_PeripheralBurst = DMA_PeripheralBurst_Single;
 609              		.loc 1 288 0
 610 0194 0023     		movs	r3, #0
 611 0196 3B64     		str	r3, [r7, #64]
 289:App/STM32F4-Discovery/spi.c ****   	DMA_InitStruct.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;
 612              		.loc 1 289 0
 613 0198 0023     		movs	r3, #0
 614 019a 7B62     		str	r3, [r7, #36]
 290:App/STM32F4-Discovery/spi.c ****   	DMA_InitStruct.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
 615              		.loc 1 290 0
 616 019c 0023     		movs	r3, #0
 617 019e FB61     		str	r3, [r7, #28]
 291:App/STM32F4-Discovery/spi.c ****   	DMA_InitStruct.DMA_Priority = DMA_Priority_High;
 618              		.loc 1 291 0
 619 01a0 4FF40033 		mov	r3, #131072
 620 01a4 3B63     		str	r3, [r7, #48]
 292:App/STM32F4-Discovery/spi.c ****   	// Configure TX DMA 
 293:App/STM32F4-Discovery/spi.c ****   	DMA_InitStruct.DMA_Channel = SPIy_TX_DMA_CHANNEL ;
 621              		.loc 1 293 0
 622 01a6 0023     		movs	r3, #0
 623 01a8 BB60     		str	r3, [r7, #8]
 294:App/STM32F4-Discovery/spi.c ****   	DMA_InitStruct.DMA_DIR = DMA_DIR_MemoryToPeripheral ;
 624              		.loc 1 294 0
 625 01aa 4023     		movs	r3, #64
 626 01ac 7B61     		str	r3, [r7, #20]
 295:App/STM32F4-Discovery/spi.c ****   	DMA_InitStruct.DMA_Memory0BaseAddr = (uint32_t) &bufferTXspi ;
 627              		.loc 1 295 0
 628 01ae 304B     		ldr	r3, .L9+20
 629 01b0 3B61     		str	r3, [r7, #16]
 296:App/STM32F4-Discovery/spi.c **** 	DMA_InitStruct.DMA_BufferSize = MAX_BUFFER_LENGTH;
 630              		.loc 1 296 0
 631 01b2 C823     		movs	r3, #200
 632 01b4 BB61     		str	r3, [r7, #24]
 297:App/STM32F4-Discovery/spi.c ****   	DMA_Init(SPIy_TX_DMA_STREAM, &DMA_InitStruct);
 633              		.loc 1 297 0
 634 01b6 07F10803 		add	r3, r7, #8
 635 01ba 2A48     		ldr	r0, .L9+8
 636 01bc 1946     		mov	r1, r3
 637 01be FFF7FEFF 		bl	DMA_Init
 298:App/STM32F4-Discovery/spi.c **** 	// Configure RX DMA 
 299:App/STM32F4-Discovery/spi.c ****   	DMA_InitStruct.DMA_Channel = SPIy_RX_DMA_CHANNEL ;
 638              		.loc 1 299 0
 639 01c2 0023     		movs	r3, #0
 640 01c4 BB60     		str	r3, [r7, #8]
 300:App/STM32F4-Discovery/spi.c **** 	DMA_InitStruct.DMA_DIR = DMA_DIR_PeripheralToMemory ;
 641              		.loc 1 300 0
 642 01c6 0023     		movs	r3, #0
 643 01c8 7B61     		str	r3, [r7, #20]
 301:App/STM32F4-Discovery/spi.c **** 	DMA_InitStruct.DMA_Memory0BaseAddr = (uint32_t)&bufferRXspi; 
 644              		.loc 1 301 0
 645 01ca 2A4B     		ldr	r3, .L9+24
 646 01cc 3B61     		str	r3, [r7, #16]
 302:App/STM32F4-Discovery/spi.c **** 	DMA_InitStruct.DMA_BufferSize = MAX_BUFFER_LENGTH;
 647              		.loc 1 302 0
 648 01ce C823     		movs	r3, #200
 649 01d0 BB61     		str	r3, [r7, #24]
 303:App/STM32F4-Discovery/spi.c **** 	DMA_Init(SPIy_RX_DMA_STREAM, &DMA_InitStruct);	
 650              		.loc 1 303 0
 651 01d2 07F10803 		add	r3, r7, #8
 652 01d6 2448     		ldr	r0, .L9+12
 653 01d8 1946     		mov	r1, r3
 654 01da FFF7FEFF 		bl	DMA_Init
 304:App/STM32F4-Discovery/spi.c **** 	
 305:App/STM32F4-Discovery/spi.c **** 	DMA_ITConfig(SPIy_TX_DMA_STREAM, DMA_IT_TC, ENABLE); 
 655              		.loc 1 305 0
 656 01de 2148     		ldr	r0, .L9+8
 657 01e0 1021     		movs	r1, #16
 658 01e2 0122     		movs	r2, #1
 659 01e4 FFF7FEFF 		bl	DMA_ITConfig
 306:App/STM32F4-Discovery/spi.c **** 	DMA_ITConfig(SPIy_RX_DMA_STREAM, DMA_IT_TC, ENABLE); 
 660              		.loc 1 306 0
 661 01e8 1F48     		ldr	r0, .L9+12
 662 01ea 1021     		movs	r1, #16
 663 01ec 0122     		movs	r2, #1
 664 01ee FFF7FEFF 		bl	DMA_ITConfig
 307:App/STM32F4-Discovery/spi.c ****   
 308:App/STM32F4-Discovery/spi.c **** 	SPI_I2S_ClearFlag(SPIy, SPI_I2S_FLAG_TXE);
 665              		.loc 1 308 0
 666 01f2 1B48     		ldr	r0, .L9+4
 667 01f4 0221     		movs	r1, #2
 668 01f6 FFF7FEFF 		bl	SPI_I2S_ClearFlag
 309:App/STM32F4-Discovery/spi.c **** 	SPI_I2S_ClearFlag(SPIy, SPI_I2S_FLAG_RXNE);
 669              		.loc 1 309 0
 670 01fa 1948     		ldr	r0, .L9+4
 671 01fc 0121     		movs	r1, #1
 672 01fe FFF7FEFF 		bl	SPI_I2S_ClearFlag
 310:App/STM32F4-Discovery/spi.c ****   	
 311:App/STM32F4-Discovery/spi.c **** 	// enable the interrupt in the NVIC
 312:App/STM32F4-Discovery/spi.c ****  	NVIC_InitStruct.NVIC_IRQChannel = SPIy_TX_DMA_IRQn;
 673              		.loc 1 312 0
 674 0202 0F23     		movs	r3, #15
 675 0204 3B71     		strb	r3, [r7, #4]
 313:App/STM32F4-Discovery/spi.c ****   	NVIC_InitStruct.NVIC_IRQChannelPreemptionPriority = configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY
 676              		.loc 1 313 0
 677 0206 0723     		movs	r3, #7
 678 0208 7B71     		strb	r3, [r7, #5]
 314:App/STM32F4-Discovery/spi.c ****  	NVIC_InitStruct.NVIC_IRQChannelSubPriority = 0x1;
 679              		.loc 1 314 0
 680 020a 0123     		movs	r3, #1
 681 020c BB71     		strb	r3, [r7, #6]
 315:App/STM32F4-Discovery/spi.c ****   	NVIC_InitStruct.NVIC_IRQChannelCmd = ENABLE;
 682              		.loc 1 315 0
 683 020e 0123     		movs	r3, #1
 684 0210 FB71     		strb	r3, [r7, #7]
 316:App/STM32F4-Discovery/spi.c ****   	NVIC_Init (&NVIC_InitStruct);
 685              		.loc 1 316 0
 686 0212 3B1D     		adds	r3, r7, #4
 687 0214 1846     		mov	r0, r3
 688 0216 FFF7FEFF 		bl	NVIC_Init
 317:App/STM32F4-Discovery/spi.c **** 	// enable the interrupt in the NVIC
 318:App/STM32F4-Discovery/spi.c ****  	NVIC_InitStruct.NVIC_IRQChannel = SPIy_RX_DMA_IRQn;
 689              		.loc 1 318 0
 690 021a 0E23     		movs	r3, #14
 691 021c 3B71     		strb	r3, [r7, #4]
 319:App/STM32F4-Discovery/spi.c ****    	NVIC_InitStruct.NVIC_IRQChannelPreemptionPriority = configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORIT
 692              		.loc 1 319 0
 693 021e 0723     		movs	r3, #7
 694 0220 7B71     		strb	r3, [r7, #5]
 320:App/STM32F4-Discovery/spi.c ****  	NVIC_InitStruct.NVIC_IRQChannelSubPriority = 0x1;
 695              		.loc 1 320 0
 696 0222 0123     		movs	r3, #1
 697 0224 BB71     		strb	r3, [r7, #6]
 321:App/STM32F4-Discovery/spi.c ****   	NVIC_InitStruct.NVIC_IRQChannelCmd = ENABLE;
 698              		.loc 1 321 0
 699 0226 0123     		movs	r3, #1
 700 0228 FB71     		strb	r3, [r7, #7]
 322:App/STM32F4-Discovery/spi.c ****   	NVIC_Init (&NVIC_InitStruct);
 701              		.loc 1 322 0
 702 022a 3B1D     		adds	r3, r7, #4
 703 022c 1846     		mov	r0, r3
 704 022e FFF7FEFF 		bl	NVIC_Init
 323:App/STM32F4-Discovery/spi.c ****   	// Enable dma tx and rx request
 324:App/STM32F4-Discovery/spi.c **** 	SPI_I2S_DMACmd (SPIy, SPI_I2S_DMAReq_Tx, ENABLE);	
 705              		.loc 1 324 0
 706 0232 0B48     		ldr	r0, .L9+4
 707 0234 0221     		movs	r1, #2
 708 0236 0122     		movs	r2, #1
 709 0238 FFF7FEFF 		bl	SPI_I2S_DMACmd
 325:App/STM32F4-Discovery/spi.c **** 	SPI_I2S_DMACmd (SPIy, SPI_I2S_DMAReq_Rx, ENABLE);	
 710              		.loc 1 325 0
 711 023c 0848     		ldr	r0, .L9+4
 712 023e 0121     		movs	r1, #1
 713 0240 0122     		movs	r2, #1
 714 0242 FFF7FEFF 		bl	SPI_I2S_DMACmd
 326:App/STM32F4-Discovery/spi.c **** 
 327:App/STM32F4-Discovery/spi.c **** //	xSemaphoreDMASPIyTX = xSemaphoreCreateBinary();
 328:App/STM32F4-Discovery/spi.c **** //	xSemaphoreDMASPIyRX = xSemaphoreCreateBinary();
 329:App/STM32F4-Discovery/spi.c ****         xSemaphoreDMASPIy   = xSemaphoreCreateBinary();	
 715              		.loc 1 329 0
 716 0246 0120     		movs	r0, #1
 717 0248 0021     		movs	r1, #0
 718 024a 0322     		movs	r2, #3
 719 024c FFF7FEFF 		bl	xQueueGenericCreate
 720 0250 0246     		mov	r2, r0
 721 0252 094B     		ldr	r3, .L9+28
 722 0254 1A60     		str	r2, [r3]
 330:App/STM32F4-Discovery/spi.c **** }
 723              		.loc 1 330 0
 724 0256 6037     		adds	r7, r7, #96
 725 0258 BD46     		mov	sp, r7
 726              		@ sp needed
 727 025a 80BD     		pop	{r7, pc}
 728              	.L10:
 729              		.align	2
 730              	.L9:
 731 025c 00040240 		.word	1073873920
 732 0260 00380040 		.word	1073756160
 733 0264 70600240 		.word	1073897584
 734 0268 58600240 		.word	1073897560
 735 026c 0C380040 		.word	1073756172
 736 0270 00000000 		.word	bufferTXspi
 737 0274 00000000 		.word	bufferRXspi
 738 0278 00000000 		.word	xSemaphoreDMASPIy
 739              		.cfi_endproc
 740              	.LFE111:
 742              		.section	.text.DMA2_Stream2_IRQHandler,"ax",%progbits
 743              		.align	2
 744              		.global	DMA2_Stream2_IRQHandler
 745              		.thumb
 746              		.thumb_func
 748              	DMA2_Stream2_IRQHandler:
 749              	.LFB112:
 331:App/STM32F4-Discovery/spi.c **** 
 332:App/STM32F4-Discovery/spi.c **** void DMA2_Stream2_IRQHandler()
 333:App/STM32F4-Discovery/spi.c **** {
 750              		.loc 1 333 0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 8
 753              		@ frame_needed = 1, uses_anonymous_args = 0
 754 0000 80B5     		push	{r7, lr}
 755              	.LCFI6:
 756              		.cfi_def_cfa_offset 8
 757              		.cfi_offset 7, -8
 758              		.cfi_offset 14, -4
 759 0002 82B0     		sub	sp, sp, #8
 760              	.LCFI7:
 761              		.cfi_def_cfa_offset 16
 762 0004 00AF     		add	r7, sp, #0
 763              	.LCFI8:
 764              		.cfi_def_cfa_register 7
 334:App/STM32F4-Discovery/spi.c **** 	/*!	\var static unsigned portBASE_TYPE xHigherPriorityTaskWoken
 335:App/STM32F4-Discovery/spi.c **** 	 * 	\brief Indicates if higher priority has been woken
 336:App/STM32F4-Discovery/spi.c **** 	 */
 337:App/STM32F4-Discovery/spi.c **** 
 338:App/STM32F4-Discovery/spi.c **** 	unsigned portBASE_TYPE xHigherPriorityTaskWoken = pdFalse;
 765              		.loc 1 338 0
 766 0006 0023     		movs	r3, #0
 767 0008 7B60     		str	r3, [r7, #4]
 339:App/STM32F4-Discovery/spi.c **** 
 340:App/STM32F4-Discovery/spi.c ****   // Test if DMA Stream Transfer Complete interrupt
 341:App/STM32F4-Discovery/spi.c ****   if (DMA_GetITStatus (SPIx_RX_DMA_STREAM, SPIx_RX_DMA_FLAG_TCIF)) {
 768              		.loc 1 341 0
 769 000a 1B48     		ldr	r0, .L15
 770 000c 1B49     		ldr	r1, .L15+4
 771 000e FFF7FEFF 		bl	DMA_GetITStatus
 772 0012 0346     		mov	r3, r0
 773 0014 002B     		cmp	r3, #0
 774 0016 24D0     		beq	.L12
 342:App/STM32F4-Discovery/spi.c ****     
 343:App/STM32F4-Discovery/spi.c **** 	DMA_ClearITPendingBit (SPIx_RX_DMA_STREAM, SPIx_RX_DMA_FLAG_TCIF);
 775              		.loc 1 343 0
 776 0018 1748     		ldr	r0, .L15
 777 001a 1849     		ldr	r1, .L15+4
 778 001c FFF7FEFF 		bl	DMA_ClearITPendingBit
 344:App/STM32F4-Discovery/spi.c **** 	
 345:App/STM32F4-Discovery/spi.c **** 	while (SPI_I2S_GetFlagStatus (SPIx, SPI_I2S_FLAG_BSY) == SET);
 779              		.loc 1 345 0
 780 0020 00BF     		nop
 781              	.L13:
 782              		.loc 1 345 0 is_stmt 0 discriminator 1
 783 0022 1748     		ldr	r0, .L15+8
 784 0024 8021     		movs	r1, #128
 785 0026 FFF7FEFF 		bl	SPI_I2S_GetFlagStatus
 786 002a 0346     		mov	r3, r0
 787 002c 012B     		cmp	r3, #1
 788 002e F8D0     		beq	.L13
 346:App/STM32F4-Discovery/spi.c ****     /*
 347:App/STM32F4-Discovery/spi.c ****      * The DMA stream is disabled in hardware at the end of the transfer
 348:App/STM32F4-Discovery/spi.c ****      * Now we can deselect the display. If more than one peripheral was being run
 349:App/STM32F4-Discovery/spi.c ****      * on this SPI peripheral, we would have to do both/all of them, or work out
 350:App/STM32F4-Discovery/spi.c ****      * which one was active and deselect that one.i
 351:App/STM32F4-Discovery/spi.c **** 	
 352:App/STM32F4-Discovery/spi.c ****      */
 353:App/STM32F4-Discovery/spi.c **** 	CSOFFx();
 789              		.loc 1 353 0 is_stmt 1
 790 0030 144B     		ldr	r3, .L15+12
 791 0032 144A     		ldr	r2, .L15+12
 792 0034 128B     		ldrh	r2, [r2, #24]	@ movhi
 793 0036 92B2     		uxth	r2, r2
 794 0038 42F01002 		orr	r2, r2, #16
 795 003c 92B2     		uxth	r2, r2
 796 003e 1A83     		strh	r2, [r3, #24]	@ movhi
 354:App/STM32F4-Discovery/spi.c **** 	DMA_Cmd(SPIx_RX_DMA_STREAM, DISABLE);		
 797              		.loc 1 354 0
 798 0040 0D48     		ldr	r0, .L15
 799 0042 0021     		movs	r1, #0
 800 0044 FFF7FEFF 		bl	DMA_Cmd
 355:App/STM32F4-Discovery/spi.c ****  
 356:App/STM32F4-Discovery/spi.c **** 	taskENTER_CRITICAL(); 
 801              		.loc 1 356 0
 802 0048 FFF7FEFF 		bl	vPortEnterCritical
 357:App/STM32F4-Discovery/spi.c **** //       xSemaphoreGive( xSemaphoreDMASPI);
 358:App/STM32F4-Discovery/spi.c **** 	xSemaphoreGiveFromISR( xSemaphoreDMASPIx, &xHigherPriorityTaskWoken );
 803              		.loc 1 358 0
 804 004c 0E4B     		ldr	r3, .L15+16
 805 004e 1A68     		ldr	r2, [r3]
 806 0050 3B1D     		adds	r3, r7, #4
 807 0052 1046     		mov	r0, r2
 808 0054 0021     		movs	r1, #0
 809 0056 1A46     		mov	r2, r3
 810 0058 0023     		movs	r3, #0
 811 005a FFF7FEFF 		bl	xQueueGenericSendFromISR
 359:App/STM32F4-Discovery/spi.c **** 	taskEXIT_CRITICAL(); //
 812              		.loc 1 359 0
 813 005e FFF7FEFF 		bl	vPortExitCritical
 814              	.L12:
 360:App/STM32F4-Discovery/spi.c ****   }	
 361:App/STM32F4-Discovery/spi.c ****  portEND_SWITCHING_ISR( xHigherPriorityTaskWoken );
 815              		.loc 1 361 0
 816 0062 7B68     		ldr	r3, [r7, #4]
 817 0064 002B     		cmp	r3, #0
 818 0066 03D0     		beq	.L11
 819              		.loc 1 361 0 is_stmt 0 discriminator 1
 820 0068 084B     		ldr	r3, .L15+20
 821 006a 4FF08052 		mov	r2, #268435456
 822 006e 1A60     		str	r2, [r3]
 823              	.L11:
 362:App/STM32F4-Discovery/spi.c **** }
 824              		.loc 1 362 0 is_stmt 1
 825 0070 0837     		adds	r7, r7, #8
 826 0072 BD46     		mov	sp, r7
 827              		@ sp needed
 828 0074 80BD     		pop	{r7, pc}
 829              	.L16:
 830 0076 00BF     		.align	2
 831              	.L15:
 832 0078 40640240 		.word	1073898560
 833 007c 00802010 		.word	270565376
 834 0080 00300140 		.word	1073819648
 835 0084 00000240 		.word	1073872896
 836 0088 00000000 		.word	xSemaphoreDMASPIx
 837 008c 04ED00E0 		.word	-536810236
 838              		.cfi_endproc
 839              	.LFE112:
 841              		.section	.text.DMA2_Stream3_IRQHandler,"ax",%progbits
 842              		.align	2
 843              		.global	DMA2_Stream3_IRQHandler
 844              		.thumb
 845              		.thumb_func
 847              	DMA2_Stream3_IRQHandler:
 848              	.LFB113:
 363:App/STM32F4-Discovery/spi.c **** void DMA2_Stream3_IRQHandler()
 364:App/STM32F4-Discovery/spi.c **** {
 849              		.loc 1 364 0
 850              		.cfi_startproc
 851              		@ args = 0, pretend = 0, frame = 8
 852              		@ frame_needed = 1, uses_anonymous_args = 0
 853 0000 80B5     		push	{r7, lr}
 854              	.LCFI9:
 855              		.cfi_def_cfa_offset 8
 856              		.cfi_offset 7, -8
 857              		.cfi_offset 14, -4
 858 0002 82B0     		sub	sp, sp, #8
 859              	.LCFI10:
 860              		.cfi_def_cfa_offset 16
 861 0004 00AF     		add	r7, sp, #0
 862              	.LCFI11:
 863              		.cfi_def_cfa_register 7
 365:App/STM32F4-Discovery/spi.c **** 	/*!	\var static unsigned portBASE_TYPE xHigherPriorityTaskWoken
 366:App/STM32F4-Discovery/spi.c **** 	 * 	\brief Indicates if higher priority has been woken
 367:App/STM32F4-Discovery/spi.c **** 	 */
 368:App/STM32F4-Discovery/spi.c **** 
 369:App/STM32F4-Discovery/spi.c **** 	unsigned portBASE_TYPE xHigherPriorityTaskWoken = pdFalse;
 864              		.loc 1 369 0
 865 0006 0023     		movs	r3, #0
 866 0008 7B60     		str	r3, [r7, #4]
 370:App/STM32F4-Discovery/spi.c **** 
 371:App/STM32F4-Discovery/spi.c ****   // Test if DMA Stream Transfer Complete interrupt
 372:App/STM32F4-Discovery/spi.c ****   if (DMA_GetITStatus (SPIx_TX_DMA_STREAM, SPIx_TX_DMA_FLAG_TCIF)) {
 867              		.loc 1 372 0
 868 000a 1B48     		ldr	r0, .L21
 869 000c 1B49     		ldr	r1, .L21+4
 870 000e FFF7FEFF 		bl	DMA_GetITStatus
 871 0012 0346     		mov	r3, r0
 872 0014 002B     		cmp	r3, #0
 873 0016 24D0     		beq	.L18
 373:App/STM32F4-Discovery/spi.c ****     
 374:App/STM32F4-Discovery/spi.c **** 	DMA_ClearITPendingBit (SPIx_TX_DMA_STREAM, SPIx_TX_DMA_FLAG_TCIF);
 874              		.loc 1 374 0
 875 0018 1748     		ldr	r0, .L21
 876 001a 1849     		ldr	r1, .L21+4
 877 001c FFF7FEFF 		bl	DMA_ClearITPendingBit
 375:App/STM32F4-Discovery/spi.c **** 
 376:App/STM32F4-Discovery/spi.c **** 	while (SPI_I2S_GetFlagStatus (SPIx, SPI_I2S_FLAG_BSY) == SET);
 878              		.loc 1 376 0
 879 0020 00BF     		nop
 880              	.L19:
 881              		.loc 1 376 0 is_stmt 0 discriminator 1
 882 0022 1748     		ldr	r0, .L21+8
 883 0024 8021     		movs	r1, #128
 884 0026 FFF7FEFF 		bl	SPI_I2S_GetFlagStatus
 885 002a 0346     		mov	r3, r0
 886 002c 012B     		cmp	r3, #1
 887 002e F8D0     		beq	.L19
 377:App/STM32F4-Discovery/spi.c ****     /*
 378:App/STM32F4-Discovery/spi.c ****      * The DMA stream is disabled in hardware at the end of the transfer
 379:App/STM32F4-Discovery/spi.c ****      * Now we can deselect the display. If more than one peripheral was being run
 380:App/STM32F4-Discovery/spi.c ****      * on this SPI peripheral, we would have to do both/all of them, or work out
 381:App/STM32F4-Discovery/spi.c ****      * which one was active and deselect that one.i
 382:App/STM32F4-Discovery/spi.c **** 	
 383:App/STM32F4-Discovery/spi.c ****      */
 384:App/STM32F4-Discovery/spi.c **** 	CSOFFx();
 888              		.loc 1 384 0 is_stmt 1
 889 0030 144B     		ldr	r3, .L21+12
 890 0032 144A     		ldr	r2, .L21+12
 891 0034 128B     		ldrh	r2, [r2, #24]	@ movhi
 892 0036 92B2     		uxth	r2, r2
 893 0038 42F01002 		orr	r2, r2, #16
 894 003c 92B2     		uxth	r2, r2
 895 003e 1A83     		strh	r2, [r3, #24]	@ movhi
 385:App/STM32F4-Discovery/spi.c **** 	DMA_Cmd(SPIx_RX_DMA_STREAM, DISABLE);		
 896              		.loc 1 385 0
 897 0040 1148     		ldr	r0, .L21+16
 898 0042 0021     		movs	r1, #0
 899 0044 FFF7FEFF 		bl	DMA_Cmd
 386:App/STM32F4-Discovery/spi.c ****        
 387:App/STM32F4-Discovery/spi.c **** 	taskENTER_CRITICAL(); 
 900              		.loc 1 387 0
 901 0048 FFF7FEFF 		bl	vPortEnterCritical
 388:App/STM32F4-Discovery/spi.c **** //	 xSemaphoreGive( xSemaphoreDMASPI );
 389:App/STM32F4-Discovery/spi.c **** 	xSemaphoreGiveFromISR( xSemaphoreDMASPIx, &xHigherPriorityTaskWoken );
 902              		.loc 1 389 0
 903 004c 0F4B     		ldr	r3, .L21+20
 904 004e 1A68     		ldr	r2, [r3]
 905 0050 3B1D     		adds	r3, r7, #4
 906 0052 1046     		mov	r0, r2
 907 0054 0021     		movs	r1, #0
 908 0056 1A46     		mov	r2, r3
 909 0058 0023     		movs	r3, #0
 910 005a FFF7FEFF 		bl	xQueueGenericSendFromISR
 390:App/STM32F4-Discovery/spi.c ****  	taskEXIT_CRITICAL();  
 911              		.loc 1 390 0
 912 005e FFF7FEFF 		bl	vPortExitCritical
 913              	.L18:
 391:App/STM32F4-Discovery/spi.c ****  }
 392:App/STM32F4-Discovery/spi.c ****    portEND_SWITCHING_ISR( xHigherPriorityTaskWoken );
 914              		.loc 1 392 0
 915 0062 7B68     		ldr	r3, [r7, #4]
 916 0064 002B     		cmp	r3, #0
 917 0066 03D0     		beq	.L17
 918              		.loc 1 392 0 is_stmt 0 discriminator 1
 919 0068 094B     		ldr	r3, .L21+24
 920 006a 4FF08052 		mov	r2, #268435456
 921 006e 1A60     		str	r2, [r3]
 922              	.L17:
 393:App/STM32F4-Discovery/spi.c **** }
 923              		.loc 1 393 0 is_stmt 1
 924 0070 0837     		adds	r7, r7, #8
 925 0072 BD46     		mov	sp, r7
 926              		@ sp needed
 927 0074 80BD     		pop	{r7, pc}
 928              	.L22:
 929 0076 00BF     		.align	2
 930              	.L21:
 931 0078 58640240 		.word	1073898584
 932 007c 00800018 		.word	402685952
 933 0080 00300140 		.word	1073819648
 934 0084 00000240 		.word	1073872896
 935 0088 40640240 		.word	1073898560
 936 008c 00000000 		.word	xSemaphoreDMASPIx
 937 0090 04ED00E0 		.word	-536810236
 938              		.cfi_endproc
 939              	.LFE113:
 941              		.section	.text.DMA1_Stream3_IRQHandler,"ax",%progbits
 942              		.align	2
 943              		.global	DMA1_Stream3_IRQHandler
 944              		.thumb
 945              		.thumb_func
 947              	DMA1_Stream3_IRQHandler:
 948              	.LFB114:
 394:App/STM32F4-Discovery/spi.c **** 
 395:App/STM32F4-Discovery/spi.c **** void DMA1_Stream3_IRQHandler()
 396:App/STM32F4-Discovery/spi.c **** {
 949              		.loc 1 396 0
 950              		.cfi_startproc
 951              		@ args = 0, pretend = 0, frame = 8
 952              		@ frame_needed = 1, uses_anonymous_args = 0
 953 0000 80B5     		push	{r7, lr}
 954              	.LCFI12:
 955              		.cfi_def_cfa_offset 8
 956              		.cfi_offset 7, -8
 957              		.cfi_offset 14, -4
 958 0002 82B0     		sub	sp, sp, #8
 959              	.LCFI13:
 960              		.cfi_def_cfa_offset 16
 961 0004 00AF     		add	r7, sp, #0
 962              	.LCFI14:
 963              		.cfi_def_cfa_register 7
 397:App/STM32F4-Discovery/spi.c **** 	/*!	\var static unsigned portBASE_TYPE xHigherPriorityTaskWoken
 398:App/STM32F4-Discovery/spi.c **** 	 * 	\brief Indicates if higher priority has been woken
 399:App/STM32F4-Discovery/spi.c **** 	 */
 400:App/STM32F4-Discovery/spi.c **** 
 401:App/STM32F4-Discovery/spi.c **** 	unsigned portBASE_TYPE xHigherPriorityTaskWoken = pdFalse;
 964              		.loc 1 401 0
 965 0006 0023     		movs	r3, #0
 966 0008 7B60     		str	r3, [r7, #4]
 402:App/STM32F4-Discovery/spi.c **** 
 403:App/STM32F4-Discovery/spi.c ****   // Test if DMA Stream Transfer Complete interrupt
 404:App/STM32F4-Discovery/spi.c ****   if (DMA_GetITStatus (SPIy_RX_DMA_STREAM, SPIy_RX_DMA_FLAG_TCIF)) {
 967              		.loc 1 404 0
 968 000a 1B48     		ldr	r0, .L27
 969 000c 1B49     		ldr	r1, .L27+4
 970 000e FFF7FEFF 		bl	DMA_GetITStatus
 971 0012 0346     		mov	r3, r0
 972 0014 002B     		cmp	r3, #0
 973 0016 24D0     		beq	.L24
 405:App/STM32F4-Discovery/spi.c ****     
 406:App/STM32F4-Discovery/spi.c **** 	DMA_ClearITPendingBit (SPIy_RX_DMA_STREAM, SPIy_RX_DMA_FLAG_TCIF);
 974              		.loc 1 406 0
 975 0018 1748     		ldr	r0, .L27
 976 001a 1849     		ldr	r1, .L27+4
 977 001c FFF7FEFF 		bl	DMA_ClearITPendingBit
 407:App/STM32F4-Discovery/spi.c **** 	
 408:App/STM32F4-Discovery/spi.c **** 	while (SPI_I2S_GetFlagStatus (SPIy, SPI_I2S_FLAG_BSY) == SET);
 978              		.loc 1 408 0
 979 0020 00BF     		nop
 980              	.L25:
 981              		.loc 1 408 0 is_stmt 0 discriminator 1
 982 0022 1748     		ldr	r0, .L27+8
 983 0024 8021     		movs	r1, #128
 984 0026 FFF7FEFF 		bl	SPI_I2S_GetFlagStatus
 985 002a 0346     		mov	r3, r0
 986 002c 012B     		cmp	r3, #1
 987 002e F8D0     		beq	.L25
 409:App/STM32F4-Discovery/spi.c ****     /*
 410:App/STM32F4-Discovery/spi.c ****      * The DMA stream is disabled in hardware at the end of the transfer
 411:App/STM32F4-Discovery/spi.c ****      * Now we can deselect the display. If more than one peripheral was being run
 412:App/STM32F4-Discovery/spi.c ****      * on this SPI peripheral, we would have to do both/all of them, or work out
 413:App/STM32F4-Discovery/spi.c ****      * which one was active and deselect that one.i
 414:App/STM32F4-Discovery/spi.c **** 	
 415:App/STM32F4-Discovery/spi.c ****      */
 416:App/STM32F4-Discovery/spi.c **** 	CSOFFy();
 988              		.loc 1 416 0 is_stmt 1
 989 0030 144B     		ldr	r3, .L27+12
 990 0032 144A     		ldr	r2, .L27+12
 991 0034 128B     		ldrh	r2, [r2, #24]	@ movhi
 992 0036 92B2     		uxth	r2, r2
 993 0038 42F48052 		orr	r2, r2, #4096
 994 003c 92B2     		uxth	r2, r2
 995 003e 1A83     		strh	r2, [r3, #24]	@ movhi
 417:App/STM32F4-Discovery/spi.c **** 	DMA_Cmd(SPIy_RX_DMA_STREAM, DISABLE);		
 996              		.loc 1 417 0
 997 0040 0D48     		ldr	r0, .L27
 998 0042 0021     		movs	r1, #0
 999 0044 FFF7FEFF 		bl	DMA_Cmd
 418:App/STM32F4-Discovery/spi.c ****  
 419:App/STM32F4-Discovery/spi.c **** 	taskENTER_CRITICAL(); 
 1000              		.loc 1 419 0
 1001 0048 FFF7FEFF 		bl	vPortEnterCritical
 420:App/STM32F4-Discovery/spi.c **** //       xSemaphoreGive( xSemaphoreDMASPI);
 421:App/STM32F4-Discovery/spi.c **** 	xSemaphoreGiveFromISR( xSemaphoreDMASPIy, &xHigherPriorityTaskWoken );
 1002              		.loc 1 421 0
 1003 004c 0E4B     		ldr	r3, .L27+16
 1004 004e 1A68     		ldr	r2, [r3]
 1005 0050 3B1D     		adds	r3, r7, #4
 1006 0052 1046     		mov	r0, r2
 1007 0054 0021     		movs	r1, #0
 1008 0056 1A46     		mov	r2, r3
 1009 0058 0023     		movs	r3, #0
 1010 005a FFF7FEFF 		bl	xQueueGenericSendFromISR
 422:App/STM32F4-Discovery/spi.c **** 	taskEXIT_CRITICAL(); //
 1011              		.loc 1 422 0
 1012 005e FFF7FEFF 		bl	vPortExitCritical
 1013              	.L24:
 423:App/STM32F4-Discovery/spi.c ****   }	
 424:App/STM32F4-Discovery/spi.c ****  portEND_SWITCHING_ISR( xHigherPriorityTaskWoken );
 1014              		.loc 1 424 0
 1015 0062 7B68     		ldr	r3, [r7, #4]
 1016 0064 002B     		cmp	r3, #0
 1017 0066 03D0     		beq	.L23
 1018              		.loc 1 424 0 is_stmt 0 discriminator 1
 1019 0068 084B     		ldr	r3, .L27+20
 1020 006a 4FF08052 		mov	r2, #268435456
 1021 006e 1A60     		str	r2, [r3]
 1022              	.L23:
 425:App/STM32F4-Discovery/spi.c **** }
 1023              		.loc 1 425 0 is_stmt 1
 1024 0070 0837     		adds	r7, r7, #8
 1025 0072 BD46     		mov	sp, r7
 1026              		@ sp needed
 1027 0074 80BD     		pop	{r7, pc}
 1028              	.L28:
 1029 0076 00BF     		.align	2
 1030              	.L27:
 1031 0078 58600240 		.word	1073897560
 1032 007c 00800018 		.word	402685952
 1033 0080 00380040 		.word	1073756160
 1034 0084 00040240 		.word	1073873920
 1035 0088 00000000 		.word	xSemaphoreDMASPIy
 1036 008c 04ED00E0 		.word	-536810236
 1037              		.cfi_endproc
 1038              	.LFE114:
 1040              		.section	.text.DMA1_Stream4_IRQHandler,"ax",%progbits
 1041              		.align	2
 1042              		.global	DMA1_Stream4_IRQHandler
 1043              		.thumb
 1044              		.thumb_func
 1046              	DMA1_Stream4_IRQHandler:
 1047              	.LFB115:
 426:App/STM32F4-Discovery/spi.c **** void DMA1_Stream4_IRQHandler()
 427:App/STM32F4-Discovery/spi.c **** {
 1048              		.loc 1 427 0
 1049              		.cfi_startproc
 1050              		@ args = 0, pretend = 0, frame = 8
 1051              		@ frame_needed = 1, uses_anonymous_args = 0
 1052 0000 80B5     		push	{r7, lr}
 1053              	.LCFI15:
 1054              		.cfi_def_cfa_offset 8
 1055              		.cfi_offset 7, -8
 1056              		.cfi_offset 14, -4
 1057 0002 82B0     		sub	sp, sp, #8
 1058              	.LCFI16:
 1059              		.cfi_def_cfa_offset 16
 1060 0004 00AF     		add	r7, sp, #0
 1061              	.LCFI17:
 1062              		.cfi_def_cfa_register 7
 428:App/STM32F4-Discovery/spi.c **** 	/*!	\var static unsigned portBASE_TYPE xHigherPriorityTaskWoken
 429:App/STM32F4-Discovery/spi.c **** 	 * 	\brief Indicates if higher priority has been woken
 430:App/STM32F4-Discovery/spi.c **** 	 */
 431:App/STM32F4-Discovery/spi.c **** 
 432:App/STM32F4-Discovery/spi.c **** 	unsigned portBASE_TYPE xHigherPriorityTaskWoken = pdFalse;
 1063              		.loc 1 432 0
 1064 0006 0023     		movs	r3, #0
 1065 0008 7B60     		str	r3, [r7, #4]
 433:App/STM32F4-Discovery/spi.c **** 
 434:App/STM32F4-Discovery/spi.c ****   // Test if DMA Stream Transfer Complete interrupt
 435:App/STM32F4-Discovery/spi.c ****   if (DMA_GetITStatus (SPIy_TX_DMA_STREAM, SPIy_TX_DMA_FLAG_TCIF)) {
 1066              		.loc 1 435 0
 1067 000a 1B48     		ldr	r0, .L33
 1068 000c 1B49     		ldr	r1, .L33+4
 1069 000e FFF7FEFF 		bl	DMA_GetITStatus
 1070 0012 0346     		mov	r3, r0
 1071 0014 002B     		cmp	r3, #0
 1072 0016 24D0     		beq	.L30
 436:App/STM32F4-Discovery/spi.c ****     
 437:App/STM32F4-Discovery/spi.c **** 	DMA_ClearITPendingBit (SPIy_TX_DMA_STREAM, SPIx_TX_DMA_FLAG_TCIF);
 1073              		.loc 1 437 0
 1074 0018 1748     		ldr	r0, .L33
 1075 001a 1949     		ldr	r1, .L33+8
 1076 001c FFF7FEFF 		bl	DMA_ClearITPendingBit
 438:App/STM32F4-Discovery/spi.c **** 
 439:App/STM32F4-Discovery/spi.c **** 	while (SPI_I2S_GetFlagStatus (SPIy, SPI_I2S_FLAG_BSY) == SET);
 1077              		.loc 1 439 0
 1078 0020 00BF     		nop
 1079              	.L31:
 1080              		.loc 1 439 0 is_stmt 0 discriminator 1
 1081 0022 1848     		ldr	r0, .L33+12
 1082 0024 8021     		movs	r1, #128
 1083 0026 FFF7FEFF 		bl	SPI_I2S_GetFlagStatus
 1084 002a 0346     		mov	r3, r0
 1085 002c 012B     		cmp	r3, #1
 1086 002e F8D0     		beq	.L31
 440:App/STM32F4-Discovery/spi.c ****     /*
 441:App/STM32F4-Discovery/spi.c ****      * The DMA stream is disabled in hardware at the end of the transfer
 442:App/STM32F4-Discovery/spi.c ****      * Now we can deselect the display. If more than one peripheral was being run
 443:App/STM32F4-Discovery/spi.c ****      * on this SPI peripheral, we would have to do both/all of them, or work out
 444:App/STM32F4-Discovery/spi.c ****      * which one was active and deselect that one.i
 445:App/STM32F4-Discovery/spi.c **** 	
 446:App/STM32F4-Discovery/spi.c ****      */
 447:App/STM32F4-Discovery/spi.c **** 	CSOFFy();
 1087              		.loc 1 447 0 is_stmt 1
 1088 0030 154B     		ldr	r3, .L33+16
 1089 0032 154A     		ldr	r2, .L33+16
 1090 0034 128B     		ldrh	r2, [r2, #24]	@ movhi
 1091 0036 92B2     		uxth	r2, r2
 1092 0038 42F48052 		orr	r2, r2, #4096
 1093 003c 92B2     		uxth	r2, r2
 1094 003e 1A83     		strh	r2, [r3, #24]	@ movhi
 448:App/STM32F4-Discovery/spi.c **** 	DMA_Cmd(SPIy_RX_DMA_STREAM, DISABLE);		
 1095              		.loc 1 448 0
 1096 0040 1248     		ldr	r0, .L33+20
 1097 0042 0021     		movs	r1, #0
 1098 0044 FFF7FEFF 		bl	DMA_Cmd
 449:App/STM32F4-Discovery/spi.c ****        
 450:App/STM32F4-Discovery/spi.c **** 	taskENTER_CRITICAL(); 
 1099              		.loc 1 450 0
 1100 0048 FFF7FEFF 		bl	vPortEnterCritical
 451:App/STM32F4-Discovery/spi.c **** //	 xSemaphoreGive( xSemaphoreDMASPI );
 452:App/STM32F4-Discovery/spi.c **** 	xSemaphoreGiveFromISR( xSemaphoreDMASPIy, &xHigherPriorityTaskWoken );
 1101              		.loc 1 452 0
 1102 004c 104B     		ldr	r3, .L33+24
 1103 004e 1A68     		ldr	r2, [r3]
 1104 0050 3B1D     		adds	r3, r7, #4
 1105 0052 1046     		mov	r0, r2
 1106 0054 0021     		movs	r1, #0
 1107 0056 1A46     		mov	r2, r3
 1108 0058 0023     		movs	r3, #0
 1109 005a FFF7FEFF 		bl	xQueueGenericSendFromISR
 453:App/STM32F4-Discovery/spi.c ****  	taskEXIT_CRITICAL();  
 1110              		.loc 1 453 0
 1111 005e FFF7FEFF 		bl	vPortExitCritical
 1112              	.L30:
 454:App/STM32F4-Discovery/spi.c ****  }
 455:App/STM32F4-Discovery/spi.c ****    portEND_SWITCHING_ISR( xHigherPriorityTaskWoken );
 1113              		.loc 1 455 0
 1114 0062 7B68     		ldr	r3, [r7, #4]
 1115 0064 002B     		cmp	r3, #0
 1116 0066 03D0     		beq	.L29
 1117              		.loc 1 455 0 is_stmt 0 discriminator 1
 1118 0068 0A4B     		ldr	r3, .L33+28
 1119 006a 4FF08052 		mov	r2, #268435456
 1120 006e 1A60     		str	r2, [r3]
 1121              	.L29:
 456:App/STM32F4-Discovery/spi.c **** }
 1122              		.loc 1 456 0 is_stmt 1
 1123 0070 0837     		adds	r7, r7, #8
 1124 0072 BD46     		mov	sp, r7
 1125              		@ sp needed
 1126 0074 80BD     		pop	{r7, pc}
 1127              	.L34:
 1128 0076 00BF     		.align	2
 1129              	.L33:
 1130 0078 70600240 		.word	1073897584
 1131 007c 20800020 		.word	536903712
 1132 0080 00800018 		.word	402685952
 1133 0084 00380040 		.word	1073756160
 1134 0088 00040240 		.word	1073873920
 1135 008c 58600240 		.word	1073897560
 1136 0090 00000000 		.word	xSemaphoreDMASPIy
 1137 0094 04ED00E0 		.word	-536810236
 1138              		.cfi_endproc
 1139              	.LFE115:
 1141              		.section	.text.spi_dma_write_read,"ax",%progbits
 1142              		.align	2
 1143              		.global	spi_dma_write_read
 1144              		.thumb
 1145              		.thumb_func
 1147              	spi_dma_write_read:
 1148              	.LFB116:
 457:App/STM32F4-Discovery/spi.c **** 
 458:App/STM32F4-Discovery/spi.c **** /*---------------------------- Matic Knap 25 Jun 2014 ---------------------*/
 459:App/STM32F4-Discovery/spi.c **** 
 460:App/STM32F4-Discovery/spi.c **** void spi_dma_write_read(uint32_t spi, uint8_t *bufRX, uint8_t *bufTX, uint16_t lenRX,  uint16_t len
 461:App/STM32F4-Discovery/spi.c **** {
 1149              		.loc 1 461 0
 1150              		.cfi_startproc
 1151              		@ args = 4, pretend = 0, frame = 16
 1152              		@ frame_needed = 1, uses_anonymous_args = 0
 1153 0000 80B5     		push	{r7, lr}
 1154              	.LCFI18:
 1155              		.cfi_def_cfa_offset 8
 1156              		.cfi_offset 7, -8
 1157              		.cfi_offset 14, -4
 1158 0002 84B0     		sub	sp, sp, #16
 1159              	.LCFI19:
 1160              		.cfi_def_cfa_offset 24
 1161 0004 00AF     		add	r7, sp, #0
 1162              	.LCFI20:
 1163              		.cfi_def_cfa_register 7
 1164 0006 F860     		str	r0, [r7, #12]
 1165 0008 B960     		str	r1, [r7, #8]
 1166 000a 7A60     		str	r2, [r7, #4]
 1167 000c 7B80     		strh	r3, [r7, #2]	@ movhi
 462:App/STM32F4-Discovery/spi.c **** 		
 463:App/STM32F4-Discovery/spi.c **** 		/*! spi_dma_read it has to be used with \n
 464:App/STM32F4-Discovery/spi.c **** 		 * memcpy from bufferRX right after it has recieve \n
 465:App/STM32F4-Discovery/spi.c **** 		 * data on SPI. */
 466:App/STM32F4-Discovery/spi.c **** 	if (spi == SPIy)
 1168              		.loc 1 466 0
 1169 000e FA68     		ldr	r2, [r7, #12]
 1170 0010 2B4B     		ldr	r3, .L38
 1171 0012 9A42     		cmp	r2, r3
 1172 0014 28D1     		bne	.L36
 467:App/STM32F4-Discovery/spi.c **** 	{
 468:App/STM32F4-Discovery/spi.c **** 		DMA_SetCurrDataCounter(SPIy_RX_DMA_STREAM, lenRX);
 1173              		.loc 1 468 0
 1174 0016 7B88     		ldrh	r3, [r7, #2]
 1175 0018 2A48     		ldr	r0, .L38+4
 1176 001a 1946     		mov	r1, r3
 1177 001c FFF7FEFF 		bl	DMA_SetCurrDataCounter
 469:App/STM32F4-Discovery/spi.c **** 		DMA_SetCurrDataCounter(SPIy_TX_DMA_STREAM, lenTX);
 1178              		.loc 1 469 0
 1179 0020 3B8B     		ldrh	r3, [r7, #24]
 1180 0022 2948     		ldr	r0, .L38+8
 1181 0024 1946     		mov	r1, r3
 1182 0026 FFF7FEFF 		bl	DMA_SetCurrDataCounter
 470:App/STM32F4-Discovery/spi.c **** 		SPIy_TX_DMA_STREAM->M0AR =(uint32_t)bufTX;	
 1183              		.loc 1 470 0
 1184 002a 274B     		ldr	r3, .L38+8
 1185 002c 7A68     		ldr	r2, [r7, #4]
 1186 002e DA60     		str	r2, [r3, #12]
 471:App/STM32F4-Discovery/spi.c **** 		SPIy_RX_DMA_STREAM->M0AR =(uint32_t)bufRX;	
 1187              		.loc 1 471 0
 1188 0030 244B     		ldr	r3, .L38+4
 1189 0032 BA68     		ldr	r2, [r7, #8]
 1190 0034 DA60     		str	r2, [r3, #12]
 472:App/STM32F4-Discovery/spi.c **** 
 473:App/STM32F4-Discovery/spi.c **** 		CSONy(); // chip select 
 1191              		.loc 1 473 0
 1192 0036 254B     		ldr	r3, .L38+12
 1193 0038 244A     		ldr	r2, .L38+12
 1194 003a 528B     		ldrh	r2, [r2, #26]	@ movhi
 1195 003c 92B2     		uxth	r2, r2
 1196 003e 42F48052 		orr	r2, r2, #4096
 1197 0042 92B2     		uxth	r2, r2
 1198 0044 5A83     		strh	r2, [r3, #26]	@ movhi
 474:App/STM32F4-Discovery/spi.c **** 		DMA_Cmd(SPIy_TX_DMA_STREAM, ENABLE);		
 1199              		.loc 1 474 0
 1200 0046 2048     		ldr	r0, .L38+8
 1201 0048 0121     		movs	r1, #1
 1202 004a FFF7FEFF 		bl	DMA_Cmd
 475:App/STM32F4-Discovery/spi.c **** 		DMA_Cmd(SPIy_RX_DMA_STREAM, ENABLE);
 1203              		.loc 1 475 0
 1204 004e 1D48     		ldr	r0, .L38+4
 1205 0050 0121     		movs	r1, #1
 1206 0052 FFF7FEFF 		bl	DMA_Cmd
 476:App/STM32F4-Discovery/spi.c **** 		/* Block until the semaphore is given */
 477:App/STM32F4-Discovery/spi.c ****         	if ( xSemaphoreTake(xSemaphoreDMASPIy, 10/portTICK_RATE_MS) == pdTRUE) 
 1207              		.loc 1 477 0
 1208 0056 1E4B     		ldr	r3, .L38+16
 1209 0058 1B68     		ldr	r3, [r3]
 1210 005a 1846     		mov	r0, r3
 1211 005c 0021     		movs	r1, #0
 1212 005e 0A22     		movs	r2, #10
 1213 0060 0023     		movs	r3, #0
 1214 0062 FFF7FEFF 		bl	xQueueGenericReceive
 1215 0066 27E0     		b	.L35
 1216              	.L36:
 478:App/STM32F4-Discovery/spi.c **** 		{
 479:App/STM32F4-Discovery/spi.c **** 			// we were able to take semaphore now wait for transfer
 480:App/STM32F4-Discovery/spi.c **** 			// to finish. We will give back semaphore in IRQ
 481:App/STM32F4-Discovery/spi.c **** 			// handler 
 482:App/STM32F4-Discovery/spi.c **** 			
 483:App/STM32F4-Discovery/spi.c **** 		}
 484:App/STM32F4-Discovery/spi.c **** 		else
 485:App/STM32F4-Discovery/spi.c **** 		{
 486:App/STM32F4-Discovery/spi.c **** 			// error taking semaphore 
 487:App/STM32F4-Discovery/spi.c **** 		}
 488:App/STM32F4-Discovery/spi.c **** 
 489:App/STM32F4-Discovery/spi.c **** 
 490:App/STM32F4-Discovery/spi.c **** 		//CSOFF(); // chip deselect		
 491:App/STM32F4-Discovery/spi.c **** 	}
 492:App/STM32F4-Discovery/spi.c **** 	else
 493:App/STM32F4-Discovery/spi.c **** 	{
 494:App/STM32F4-Discovery/spi.c **** 		DMA_SetCurrDataCounter(SPIx_RX_DMA_STREAM, lenRX);
 1217              		.loc 1 494 0
 1218 0068 7B88     		ldrh	r3, [r7, #2]
 1219 006a 1A48     		ldr	r0, .L38+20
 1220 006c 1946     		mov	r1, r3
 1221 006e FFF7FEFF 		bl	DMA_SetCurrDataCounter
 495:App/STM32F4-Discovery/spi.c **** 		DMA_SetCurrDataCounter(SPIx_TX_DMA_STREAM, lenTX);
 1222              		.loc 1 495 0
 1223 0072 3B8B     		ldrh	r3, [r7, #24]
 1224 0074 1848     		ldr	r0, .L38+24
 1225 0076 1946     		mov	r1, r3
 1226 0078 FFF7FEFF 		bl	DMA_SetCurrDataCounter
 496:App/STM32F4-Discovery/spi.c **** 		SPIx_TX_DMA_STREAM->M0AR =(uint32_t)bufTX;	
 1227              		.loc 1 496 0
 1228 007c 164B     		ldr	r3, .L38+24
 1229 007e 7A68     		ldr	r2, [r7, #4]
 1230 0080 DA60     		str	r2, [r3, #12]
 497:App/STM32F4-Discovery/spi.c **** 		SPIx_RX_DMA_STREAM->M0AR =(uint32_t)bufRX;	
 1231              		.loc 1 497 0
 1232 0082 144B     		ldr	r3, .L38+20
 1233 0084 BA68     		ldr	r2, [r7, #8]
 1234 0086 DA60     		str	r2, [r3, #12]
 498:App/STM32F4-Discovery/spi.c **** 
 499:App/STM32F4-Discovery/spi.c **** 		CSONx(); // chip select 
 1235              		.loc 1 499 0
 1236 0088 144B     		ldr	r3, .L38+28
 1237 008a 144A     		ldr	r2, .L38+28
 1238 008c 528B     		ldrh	r2, [r2, #26]	@ movhi
 1239 008e 92B2     		uxth	r2, r2
 1240 0090 42F01002 		orr	r2, r2, #16
 1241 0094 92B2     		uxth	r2, r2
 1242 0096 5A83     		strh	r2, [r3, #26]	@ movhi
 500:App/STM32F4-Discovery/spi.c **** 		DMA_Cmd(SPIx_TX_DMA_STREAM, ENABLE);		
 1243              		.loc 1 500 0
 1244 0098 0F48     		ldr	r0, .L38+24
 1245 009a 0121     		movs	r1, #1
 1246 009c FFF7FEFF 		bl	DMA_Cmd
 501:App/STM32F4-Discovery/spi.c **** 		DMA_Cmd(SPIx_RX_DMA_STREAM, ENABLE);
 1247              		.loc 1 501 0
 1248 00a0 0C48     		ldr	r0, .L38+20
 1249 00a2 0121     		movs	r1, #1
 1250 00a4 FFF7FEFF 		bl	DMA_Cmd
 502:App/STM32F4-Discovery/spi.c **** 		/* Block until the semaphore is given */
 503:App/STM32F4-Discovery/spi.c ****         	if (xSemaphoreTake(xSemaphoreDMASPIx, 10/portTICK_RATE_MS) == pdTRUE )
 1251              		.loc 1 503 0
 1252 00a8 0D4B     		ldr	r3, .L38+32
 1253 00aa 1B68     		ldr	r3, [r3]
 1254 00ac 1846     		mov	r0, r3
 1255 00ae 0021     		movs	r1, #0
 1256 00b0 0A22     		movs	r2, #10
 1257 00b2 0023     		movs	r3, #0
 1258 00b4 FFF7FEFF 		bl	xQueueGenericReceive
 1259              	.L35:
 504:App/STM32F4-Discovery/spi.c **** 		{
 505:App/STM32F4-Discovery/spi.c **** 			// we were able to take semaphore now wait for transfer
 506:App/STM32F4-Discovery/spi.c **** 			// to finish. We will give back semaphore in IRQ handler
 507:App/STM32F4-Discovery/spi.c **** 		}
 508:App/STM32F4-Discovery/spi.c **** 		else
 509:App/STM32F4-Discovery/spi.c **** 		{
 510:App/STM32F4-Discovery/spi.c **** 			// error taking semaphore 
 511:App/STM32F4-Discovery/spi.c **** 		}
 512:App/STM32F4-Discovery/spi.c **** 		//CSOFF(); // chip deselect	
 513:App/STM32F4-Discovery/spi.c **** 	}
 514:App/STM32F4-Discovery/spi.c **** 
 515:App/STM32F4-Discovery/spi.c **** 
 516:App/STM32F4-Discovery/spi.c **** 
 517:App/STM32F4-Discovery/spi.c **** }
 1260              		.loc 1 517 0
 1261 00b8 1037     		adds	r7, r7, #16
 1262 00ba BD46     		mov	sp, r7
 1263              		@ sp needed
 1264 00bc 80BD     		pop	{r7, pc}
 1265              	.L39:
 1266 00be 00BF     		.align	2
 1267              	.L38:
 1268 00c0 00380040 		.word	1073756160
 1269 00c4 58600240 		.word	1073897560
 1270 00c8 70600240 		.word	1073897584
 1271 00cc 00040240 		.word	1073873920
 1272 00d0 00000000 		.word	xSemaphoreDMASPIy
 1273 00d4 40640240 		.word	1073898560
 1274 00d8 58640240 		.word	1073898584
 1275 00dc 00000240 		.word	1073872896
 1276 00e0 00000000 		.word	xSemaphoreDMASPIx
 1277              		.cfi_endproc
 1278              	.LFE116:
 1280              		.text
 1281              	.Letext0:
 1282              		.file 2 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/machine/_default_
 1283              		.file 3 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/stdint.h"
 1284              		.file 4 "App/STM32F4-Discovery/Libraries/CMSIS/ST/STM32F4xx/Include/stm32f4xx.h"
 1285              		.file 5 "App/STM32F4-Discovery/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dma.h"
 1286              		.file 6 "App/STM32F4-Discovery/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_gpio.h"
 1287              		.file 7 "App/STM32F4-Discovery/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_spi.h"
 1288              		.file 8 "App/STM32F4-Discovery/Libraries/STM32F4xx_StdPeriph_Driver/inc/misc.h"
 1289              		.file 9 "Source/portable/GCC/ARM_CM4F/portmacro.h"
 1290              		.file 10 "Source/include/queue.h"
 1291              		.file 11 "Source/include/semphr.h"
 1292              		.file 12 "App/STM32F4-Discovery/Libraries/CMSIS/Include/core_cm4.h"
 1293              		.file 13 "App/STM32F4-Discovery/spi.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 spi.c
                            *COM*:00000000000000c8 bufferTXspi
                            *COM*:00000000000000c8 bufferRXspi
                            *COM*:0000000000000004 bufferRXidx
                            *COM*:0000000000000004 bufferTXidx
                            *COM*:0000000000000004 dat_lengthRX
                            *COM*:0000000000000004 dat_lengthTX
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3gmFdo.s:26     .bss.xSemaphoreDMASPIy:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3gmFdo.s:29     .bss.xSemaphoreDMASPIy:0000000000000000 xSemaphoreDMASPIy
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3gmFdo.s:32     .bss.xSemaphoreDMASPIx:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3gmFdo.s:35     .bss.xSemaphoreDMASPIx:0000000000000000 xSemaphoreDMASPIx
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3gmFdo.s:38     .text.init_SPIx:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3gmFdo.s:43     .text.init_SPIx:0000000000000000 init_SPIx
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3gmFdo.s:379    .text.init_SPIx:0000000000000258 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3gmFdo.s:391    .text.init_SPIy:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3gmFdo.s:396    .text.init_SPIy:0000000000000000 init_SPIy
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3gmFdo.s:731    .text.init_SPIy:000000000000025c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3gmFdo.s:743    .text.DMA2_Stream2_IRQHandler:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3gmFdo.s:748    .text.DMA2_Stream2_IRQHandler:0000000000000000 DMA2_Stream2_IRQHandler
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3gmFdo.s:832    .text.DMA2_Stream2_IRQHandler:0000000000000078 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3gmFdo.s:842    .text.DMA2_Stream3_IRQHandler:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3gmFdo.s:847    .text.DMA2_Stream3_IRQHandler:0000000000000000 DMA2_Stream3_IRQHandler
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3gmFdo.s:931    .text.DMA2_Stream3_IRQHandler:0000000000000078 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3gmFdo.s:942    .text.DMA1_Stream3_IRQHandler:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3gmFdo.s:947    .text.DMA1_Stream3_IRQHandler:0000000000000000 DMA1_Stream3_IRQHandler
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3gmFdo.s:1031   .text.DMA1_Stream3_IRQHandler:0000000000000078 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3gmFdo.s:1041   .text.DMA1_Stream4_IRQHandler:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3gmFdo.s:1046   .text.DMA1_Stream4_IRQHandler:0000000000000000 DMA1_Stream4_IRQHandler
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3gmFdo.s:1130   .text.DMA1_Stream4_IRQHandler:0000000000000078 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3gmFdo.s:1142   .text.spi_dma_write_read:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3gmFdo.s:1147   .text.spi_dma_write_read:0000000000000000 spi_dma_write_read
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3gmFdo.s:1268   .text.spi_dma_write_read:00000000000000c0 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
RCC_AHB1PeriphClockCmd
GPIO_Init
GPIO_PinAFConfig
RCC_APB2PeriphClockCmd
SPI_Init
SPI_Cmd
DMA_DeInit
DMA_GetCmdStatus
DMA_StructInit
DMA_Init
DMA_ITConfig
SPI_I2S_ClearFlag
NVIC_Init
SPI_I2S_DMACmd
xQueueGenericCreate
DMA_GetITStatus
DMA_ClearITPendingBit
SPI_I2S_GetFlagStatus
DMA_Cmd
vPortEnterCritical
xQueueGenericSendFromISR
vPortExitCritical
DMA_SetCurrDataCounter
xQueueGenericReceive
