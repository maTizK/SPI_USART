   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"modbus_mk.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	xSemaphoreDMASPI,4,4
  20              		.comm	xSmphrUSART,4,4
  21              		.comm	motorHeartBeatHandle,4,4
  22              		.comm	motorHBHandle,4,4
  23              		.comm	QSpd_handle,4,4
  24              		.comm	QTCP_handle,4,4
  25              		.comm	socket_0,4,4
  26              		.comm	bufferTX,2000,4
  27              		.comm	bufferRX,2000,4
  28              		.comm	bufferRXidx,4,4
  29              		.comm	bufferTXidx,4,4
  30              		.comm	dat_lengthRX,4,4
  31              		.comm	dat_lengthTX,4,4
  32              		.comm	set_macTaskHandle,4,4
  33              		.section	.rodata
  34              		.align	2
  35              	.LC0:
  36 0000 6D6F746F 		.ascii	"motor\000"
  36      7200
  37 0006 0000     		.align	2
  38              	.LC1:
  39 0008 6D6F746F 		.ascii	"motor  [options]\302\240[parameters]\302\240- Type "
  39      7220205B 
  39      6F707469 
  39      6F6E735D 
  39      C2A05B70 
  40 002f 6D6F746F 		.ascii	"motor help for more help\015\012\012\000\000"
  40      72206865 
  40      6C702066 
  40      6F72206D 
  40      6F726520 
  41              		.section	.rodata.xMotorCommand,"a",%progbits
  42              		.align	2
  45              	xMotorCommand:
  46 0000 00000000 		.word	.LC0
  47 0004 08000000 		.word	.LC1
  48 0008 00000000 		.word	prvMotorCommand
  49 000c FF       		.byte	-1
  50 000d 000000   		.space	3
  51              		.section	.rodata
  52              		.align	2
  53              	.LC2:
  54 004c 7461736B 		.ascii	"task\000"
  54      00
  55 0051 000000   		.align	2
  56              	.LC3:
  57 0054 7461736B 		.ascii	"task - return tasks list\015\012\012\000\000"
  57      202D2072 
  57      65747572 
  57      6E207461 
  57      736B7320 
  58              		.section	.rodata.xTaskStatsCommand,"a",%progbits
  59              		.align	2
  62              	xTaskStatsCommand:
  63 0000 4C000000 		.word	.LC2
  64 0004 54000000 		.word	.LC3
  65 0008 00000000 		.word	prvTaskStatsCommand
  66 000c FF       		.byte	-1
  67 000d 000000   		.space	3
  68              		.section	.rodata.table_crc_hi,"a",%progbits
  69              		.align	2
  72              	table_crc_hi:
  73 0000 00       		.byte	0
  74 0001 C1       		.byte	-63
  75 0002 81       		.byte	-127
  76 0003 40       		.byte	64
  77 0004 01       		.byte	1
  78 0005 C0       		.byte	-64
  79 0006 80       		.byte	-128
  80 0007 41       		.byte	65
  81 0008 01       		.byte	1
  82 0009 C0       		.byte	-64
  83 000a 80       		.byte	-128
  84 000b 41       		.byte	65
  85 000c 00       		.byte	0
  86 000d C1       		.byte	-63
  87 000e 81       		.byte	-127
  88 000f 40       		.byte	64
  89 0010 01       		.byte	1
  90 0011 C0       		.byte	-64
  91 0012 80       		.byte	-128
  92 0013 41       		.byte	65
  93 0014 00       		.byte	0
  94 0015 C1       		.byte	-63
  95 0016 81       		.byte	-127
  96 0017 40       		.byte	64
  97 0018 00       		.byte	0
  98 0019 C1       		.byte	-63
  99 001a 81       		.byte	-127
 100 001b 40       		.byte	64
 101 001c 01       		.byte	1
 102 001d C0       		.byte	-64
 103 001e 80       		.byte	-128
 104 001f 41       		.byte	65
 105 0020 01       		.byte	1
 106 0021 C0       		.byte	-64
 107 0022 80       		.byte	-128
 108 0023 41       		.byte	65
 109 0024 00       		.byte	0
 110 0025 C1       		.byte	-63
 111 0026 81       		.byte	-127
 112 0027 40       		.byte	64
 113 0028 00       		.byte	0
 114 0029 C1       		.byte	-63
 115 002a 81       		.byte	-127
 116 002b 40       		.byte	64
 117 002c 01       		.byte	1
 118 002d C0       		.byte	-64
 119 002e 80       		.byte	-128
 120 002f 41       		.byte	65
 121 0030 00       		.byte	0
 122 0031 C1       		.byte	-63
 123 0032 81       		.byte	-127
 124 0033 40       		.byte	64
 125 0034 01       		.byte	1
 126 0035 C0       		.byte	-64
 127 0036 80       		.byte	-128
 128 0037 41       		.byte	65
 129 0038 01       		.byte	1
 130 0039 C0       		.byte	-64
 131 003a 80       		.byte	-128
 132 003b 41       		.byte	65
 133 003c 00       		.byte	0
 134 003d C1       		.byte	-63
 135 003e 81       		.byte	-127
 136 003f 40       		.byte	64
 137 0040 01       		.byte	1
 138 0041 C0       		.byte	-64
 139 0042 80       		.byte	-128
 140 0043 41       		.byte	65
 141 0044 00       		.byte	0
 142 0045 C1       		.byte	-63
 143 0046 81       		.byte	-127
 144 0047 40       		.byte	64
 145 0048 00       		.byte	0
 146 0049 C1       		.byte	-63
 147 004a 81       		.byte	-127
 148 004b 40       		.byte	64
 149 004c 01       		.byte	1
 150 004d C0       		.byte	-64
 151 004e 80       		.byte	-128
 152 004f 41       		.byte	65
 153 0050 00       		.byte	0
 154 0051 C1       		.byte	-63
 155 0052 81       		.byte	-127
 156 0053 40       		.byte	64
 157 0054 01       		.byte	1
 158 0055 C0       		.byte	-64
 159 0056 80       		.byte	-128
 160 0057 41       		.byte	65
 161 0058 01       		.byte	1
 162 0059 C0       		.byte	-64
 163 005a 80       		.byte	-128
 164 005b 41       		.byte	65
 165 005c 00       		.byte	0
 166 005d C1       		.byte	-63
 167 005e 81       		.byte	-127
 168 005f 40       		.byte	64
 169 0060 00       		.byte	0
 170 0061 C1       		.byte	-63
 171 0062 81       		.byte	-127
 172 0063 40       		.byte	64
 173 0064 01       		.byte	1
 174 0065 C0       		.byte	-64
 175 0066 80       		.byte	-128
 176 0067 41       		.byte	65
 177 0068 01       		.byte	1
 178 0069 C0       		.byte	-64
 179 006a 80       		.byte	-128
 180 006b 41       		.byte	65
 181 006c 00       		.byte	0
 182 006d C1       		.byte	-63
 183 006e 81       		.byte	-127
 184 006f 40       		.byte	64
 185 0070 01       		.byte	1
 186 0071 C0       		.byte	-64
 187 0072 80       		.byte	-128
 188 0073 41       		.byte	65
 189 0074 00       		.byte	0
 190 0075 C1       		.byte	-63
 191 0076 81       		.byte	-127
 192 0077 40       		.byte	64
 193 0078 00       		.byte	0
 194 0079 C1       		.byte	-63
 195 007a 81       		.byte	-127
 196 007b 40       		.byte	64
 197 007c 01       		.byte	1
 198 007d C0       		.byte	-64
 199 007e 80       		.byte	-128
 200 007f 41       		.byte	65
 201 0080 01       		.byte	1
 202 0081 C0       		.byte	-64
 203 0082 80       		.byte	-128
 204 0083 41       		.byte	65
 205 0084 00       		.byte	0
 206 0085 C1       		.byte	-63
 207 0086 81       		.byte	-127
 208 0087 40       		.byte	64
 209 0088 00       		.byte	0
 210 0089 C1       		.byte	-63
 211 008a 81       		.byte	-127
 212 008b 40       		.byte	64
 213 008c 01       		.byte	1
 214 008d C0       		.byte	-64
 215 008e 80       		.byte	-128
 216 008f 41       		.byte	65
 217 0090 00       		.byte	0
 218 0091 C1       		.byte	-63
 219 0092 81       		.byte	-127
 220 0093 40       		.byte	64
 221 0094 01       		.byte	1
 222 0095 C0       		.byte	-64
 223 0096 80       		.byte	-128
 224 0097 41       		.byte	65
 225 0098 01       		.byte	1
 226 0099 C0       		.byte	-64
 227 009a 80       		.byte	-128
 228 009b 41       		.byte	65
 229 009c 00       		.byte	0
 230 009d C1       		.byte	-63
 231 009e 81       		.byte	-127
 232 009f 40       		.byte	64
 233 00a0 00       		.byte	0
 234 00a1 C1       		.byte	-63
 235 00a2 81       		.byte	-127
 236 00a3 40       		.byte	64
 237 00a4 01       		.byte	1
 238 00a5 C0       		.byte	-64
 239 00a6 80       		.byte	-128
 240 00a7 41       		.byte	65
 241 00a8 01       		.byte	1
 242 00a9 C0       		.byte	-64
 243 00aa 80       		.byte	-128
 244 00ab 41       		.byte	65
 245 00ac 00       		.byte	0
 246 00ad C1       		.byte	-63
 247 00ae 81       		.byte	-127
 248 00af 40       		.byte	64
 249 00b0 01       		.byte	1
 250 00b1 C0       		.byte	-64
 251 00b2 80       		.byte	-128
 252 00b3 41       		.byte	65
 253 00b4 00       		.byte	0
 254 00b5 C1       		.byte	-63
 255 00b6 81       		.byte	-127
 256 00b7 40       		.byte	64
 257 00b8 00       		.byte	0
 258 00b9 C1       		.byte	-63
 259 00ba 81       		.byte	-127
 260 00bb 40       		.byte	64
 261 00bc 01       		.byte	1
 262 00bd C0       		.byte	-64
 263 00be 80       		.byte	-128
 264 00bf 41       		.byte	65
 265 00c0 00       		.byte	0
 266 00c1 C1       		.byte	-63
 267 00c2 81       		.byte	-127
 268 00c3 40       		.byte	64
 269 00c4 01       		.byte	1
 270 00c5 C0       		.byte	-64
 271 00c6 80       		.byte	-128
 272 00c7 41       		.byte	65
 273 00c8 01       		.byte	1
 274 00c9 C0       		.byte	-64
 275 00ca 80       		.byte	-128
 276 00cb 41       		.byte	65
 277 00cc 00       		.byte	0
 278 00cd C1       		.byte	-63
 279 00ce 81       		.byte	-127
 280 00cf 40       		.byte	64
 281 00d0 01       		.byte	1
 282 00d1 C0       		.byte	-64
 283 00d2 80       		.byte	-128
 284 00d3 41       		.byte	65
 285 00d4 00       		.byte	0
 286 00d5 C1       		.byte	-63
 287 00d6 81       		.byte	-127
 288 00d7 40       		.byte	64
 289 00d8 00       		.byte	0
 290 00d9 C1       		.byte	-63
 291 00da 81       		.byte	-127
 292 00db 40       		.byte	64
 293 00dc 01       		.byte	1
 294 00dd C0       		.byte	-64
 295 00de 80       		.byte	-128
 296 00df 41       		.byte	65
 297 00e0 01       		.byte	1
 298 00e1 C0       		.byte	-64
 299 00e2 80       		.byte	-128
 300 00e3 41       		.byte	65
 301 00e4 00       		.byte	0
 302 00e5 C1       		.byte	-63
 303 00e6 81       		.byte	-127
 304 00e7 40       		.byte	64
 305 00e8 00       		.byte	0
 306 00e9 C1       		.byte	-63
 307 00ea 81       		.byte	-127
 308 00eb 40       		.byte	64
 309 00ec 01       		.byte	1
 310 00ed C0       		.byte	-64
 311 00ee 80       		.byte	-128
 312 00ef 41       		.byte	65
 313 00f0 00       		.byte	0
 314 00f1 C1       		.byte	-63
 315 00f2 81       		.byte	-127
 316 00f3 40       		.byte	64
 317 00f4 01       		.byte	1
 318 00f5 C0       		.byte	-64
 319 00f6 80       		.byte	-128
 320 00f7 41       		.byte	65
 321 00f8 01       		.byte	1
 322 00f9 C0       		.byte	-64
 323 00fa 80       		.byte	-128
 324 00fb 41       		.byte	65
 325 00fc 00       		.byte	0
 326 00fd C1       		.byte	-63
 327 00fe 81       		.byte	-127
 328 00ff 40       		.byte	64
 329              		.section	.rodata.table_crc_lo,"a",%progbits
 330              		.align	2
 333              	table_crc_lo:
 334 0000 00       		.byte	0
 335 0001 C0       		.byte	-64
 336 0002 C1       		.byte	-63
 337 0003 01       		.byte	1
 338 0004 C3       		.byte	-61
 339 0005 03       		.byte	3
 340 0006 02       		.byte	2
 341 0007 C2       		.byte	-62
 342 0008 C6       		.byte	-58
 343 0009 06       		.byte	6
 344 000a 07       		.byte	7
 345 000b C7       		.byte	-57
 346 000c 05       		.byte	5
 347 000d C5       		.byte	-59
 348 000e C4       		.byte	-60
 349 000f 04       		.byte	4
 350 0010 CC       		.byte	-52
 351 0011 0C       		.byte	12
 352 0012 0D       		.byte	13
 353 0013 CD       		.byte	-51
 354 0014 0F       		.byte	15
 355 0015 CF       		.byte	-49
 356 0016 CE       		.byte	-50
 357 0017 0E       		.byte	14
 358 0018 0A       		.byte	10
 359 0019 CA       		.byte	-54
 360 001a CB       		.byte	-53
 361 001b 0B       		.byte	11
 362 001c C9       		.byte	-55
 363 001d 09       		.byte	9
 364 001e 08       		.byte	8
 365 001f C8       		.byte	-56
 366 0020 D8       		.byte	-40
 367 0021 18       		.byte	24
 368 0022 19       		.byte	25
 369 0023 D9       		.byte	-39
 370 0024 1B       		.byte	27
 371 0025 DB       		.byte	-37
 372 0026 DA       		.byte	-38
 373 0027 1A       		.byte	26
 374 0028 1E       		.byte	30
 375 0029 DE       		.byte	-34
 376 002a DF       		.byte	-33
 377 002b 1F       		.byte	31
 378 002c DD       		.byte	-35
 379 002d 1D       		.byte	29
 380 002e 1C       		.byte	28
 381 002f DC       		.byte	-36
 382 0030 14       		.byte	20
 383 0031 D4       		.byte	-44
 384 0032 D5       		.byte	-43
 385 0033 15       		.byte	21
 386 0034 D7       		.byte	-41
 387 0035 17       		.byte	23
 388 0036 16       		.byte	22
 389 0037 D6       		.byte	-42
 390 0038 D2       		.byte	-46
 391 0039 12       		.byte	18
 392 003a 13       		.byte	19
 393 003b D3       		.byte	-45
 394 003c 11       		.byte	17
 395 003d D1       		.byte	-47
 396 003e D0       		.byte	-48
 397 003f 10       		.byte	16
 398 0040 F0       		.byte	-16
 399 0041 30       		.byte	48
 400 0042 31       		.byte	49
 401 0043 F1       		.byte	-15
 402 0044 33       		.byte	51
 403 0045 F3       		.byte	-13
 404 0046 F2       		.byte	-14
 405 0047 32       		.byte	50
 406 0048 36       		.byte	54
 407 0049 F6       		.byte	-10
 408 004a F7       		.byte	-9
 409 004b 37       		.byte	55
 410 004c F5       		.byte	-11
 411 004d 35       		.byte	53
 412 004e 34       		.byte	52
 413 004f F4       		.byte	-12
 414 0050 3C       		.byte	60
 415 0051 FC       		.byte	-4
 416 0052 FD       		.byte	-3
 417 0053 3D       		.byte	61
 418 0054 FF       		.byte	-1
 419 0055 3F       		.byte	63
 420 0056 3E       		.byte	62
 421 0057 FE       		.byte	-2
 422 0058 FA       		.byte	-6
 423 0059 3A       		.byte	58
 424 005a 3B       		.byte	59
 425 005b FB       		.byte	-5
 426 005c 39       		.byte	57
 427 005d F9       		.byte	-7
 428 005e F8       		.byte	-8
 429 005f 38       		.byte	56
 430 0060 28       		.byte	40
 431 0061 E8       		.byte	-24
 432 0062 E9       		.byte	-23
 433 0063 29       		.byte	41
 434 0064 EB       		.byte	-21
 435 0065 2B       		.byte	43
 436 0066 2A       		.byte	42
 437 0067 EA       		.byte	-22
 438 0068 EE       		.byte	-18
 439 0069 2E       		.byte	46
 440 006a 2F       		.byte	47
 441 006b EF       		.byte	-17
 442 006c 2D       		.byte	45
 443 006d ED       		.byte	-19
 444 006e EC       		.byte	-20
 445 006f 2C       		.byte	44
 446 0070 E4       		.byte	-28
 447 0071 24       		.byte	36
 448 0072 25       		.byte	37
 449 0073 E5       		.byte	-27
 450 0074 27       		.byte	39
 451 0075 E7       		.byte	-25
 452 0076 E6       		.byte	-26
 453 0077 26       		.byte	38
 454 0078 22       		.byte	34
 455 0079 E2       		.byte	-30
 456 007a E3       		.byte	-29
 457 007b 23       		.byte	35
 458 007c E1       		.byte	-31
 459 007d 21       		.byte	33
 460 007e 20       		.byte	32
 461 007f E0       		.byte	-32
 462 0080 A0       		.byte	-96
 463 0081 60       		.byte	96
 464 0082 61       		.byte	97
 465 0083 A1       		.byte	-95
 466 0084 63       		.byte	99
 467 0085 A3       		.byte	-93
 468 0086 A2       		.byte	-94
 469 0087 62       		.byte	98
 470 0088 66       		.byte	102
 471 0089 A6       		.byte	-90
 472 008a A7       		.byte	-89
 473 008b 67       		.byte	103
 474 008c A5       		.byte	-91
 475 008d 65       		.byte	101
 476 008e 64       		.byte	100
 477 008f A4       		.byte	-92
 478 0090 6C       		.byte	108
 479 0091 AC       		.byte	-84
 480 0092 AD       		.byte	-83
 481 0093 6D       		.byte	109
 482 0094 AF       		.byte	-81
 483 0095 6F       		.byte	111
 484 0096 6E       		.byte	110
 485 0097 AE       		.byte	-82
 486 0098 AA       		.byte	-86
 487 0099 6A       		.byte	106
 488 009a 6B       		.byte	107
 489 009b AB       		.byte	-85
 490 009c 69       		.byte	105
 491 009d A9       		.byte	-87
 492 009e A8       		.byte	-88
 493 009f 68       		.byte	104
 494 00a0 78       		.byte	120
 495 00a1 B8       		.byte	-72
 496 00a2 B9       		.byte	-71
 497 00a3 79       		.byte	121
 498 00a4 BB       		.byte	-69
 499 00a5 7B       		.byte	123
 500 00a6 7A       		.byte	122
 501 00a7 BA       		.byte	-70
 502 00a8 BE       		.byte	-66
 503 00a9 7E       		.byte	126
 504 00aa 7F       		.byte	127
 505 00ab BF       		.byte	-65
 506 00ac 7D       		.byte	125
 507 00ad BD       		.byte	-67
 508 00ae BC       		.byte	-68
 509 00af 7C       		.byte	124
 510 00b0 B4       		.byte	-76
 511 00b1 74       		.byte	116
 512 00b2 75       		.byte	117
 513 00b3 B5       		.byte	-75
 514 00b4 77       		.byte	119
 515 00b5 B7       		.byte	-73
 516 00b6 B6       		.byte	-74
 517 00b7 76       		.byte	118
 518 00b8 72       		.byte	114
 519 00b9 B2       		.byte	-78
 520 00ba B3       		.byte	-77
 521 00bb 73       		.byte	115
 522 00bc B1       		.byte	-79
 523 00bd 71       		.byte	113
 524 00be 70       		.byte	112
 525 00bf B0       		.byte	-80
 526 00c0 50       		.byte	80
 527 00c1 90       		.byte	-112
 528 00c2 91       		.byte	-111
 529 00c3 51       		.byte	81
 530 00c4 93       		.byte	-109
 531 00c5 53       		.byte	83
 532 00c6 52       		.byte	82
 533 00c7 92       		.byte	-110
 534 00c8 96       		.byte	-106
 535 00c9 56       		.byte	86
 536 00ca 57       		.byte	87
 537 00cb 97       		.byte	-105
 538 00cc 55       		.byte	85
 539 00cd 95       		.byte	-107
 540 00ce 94       		.byte	-108
 541 00cf 54       		.byte	84
 542 00d0 9C       		.byte	-100
 543 00d1 5C       		.byte	92
 544 00d2 5D       		.byte	93
 545 00d3 9D       		.byte	-99
 546 00d4 5F       		.byte	95
 547 00d5 9F       		.byte	-97
 548 00d6 9E       		.byte	-98
 549 00d7 5E       		.byte	94
 550 00d8 5A       		.byte	90
 551 00d9 9A       		.byte	-102
 552 00da 9B       		.byte	-101
 553 00db 5B       		.byte	91
 554 00dc 99       		.byte	-103
 555 00dd 59       		.byte	89
 556 00de 58       		.byte	88
 557 00df 98       		.byte	-104
 558 00e0 88       		.byte	-120
 559 00e1 48       		.byte	72
 560 00e2 49       		.byte	73
 561 00e3 89       		.byte	-119
 562 00e4 4B       		.byte	75
 563 00e5 8B       		.byte	-117
 564 00e6 8A       		.byte	-118
 565 00e7 4A       		.byte	74
 566 00e8 4E       		.byte	78
 567 00e9 8E       		.byte	-114
 568 00ea 8F       		.byte	-113
 569 00eb 4F       		.byte	79
 570 00ec 8D       		.byte	-115
 571 00ed 4D       		.byte	77
 572 00ee 4C       		.byte	76
 573 00ef 8C       		.byte	-116
 574 00f0 44       		.byte	68
 575 00f1 84       		.byte	-124
 576 00f2 85       		.byte	-123
 577 00f3 45       		.byte	69
 578 00f4 87       		.byte	-121
 579 00f5 47       		.byte	71
 580 00f6 46       		.byte	70
 581 00f7 86       		.byte	-122
 582 00f8 82       		.byte	-126
 583 00f9 42       		.byte	66
 584 00fa 43       		.byte	67
 585 00fb 83       		.byte	-125
 586 00fc 41       		.byte	65
 587 00fd 81       		.byte	-127
 588 00fe 80       		.byte	-128
 589 00ff 40       		.byte	64
 590              		.comm	fd,4,4
 591              		.comm	received_string,513,4
 592              		.comm	rx_length,4,4
 593              		.comm	input_Register,20,4
 594              		.section	.text.init_USARTx,"ax",%progbits
 595              		.align	2
 596              		.global	init_USARTx
 597              		.thumb
 598              		.thumb_func
 600              	init_USARTx:
 601              	.LFB110:
 602              		.file 1 "App/STM32F4-Discovery/modbus_mk.c"
   1:App/STM32F4-Discovery/modbus_mk.c **** /*! \file modbus_mk.c
   2:App/STM32F4-Discovery/modbus_mk.c ****  *  \brief modbus protocol functions and motor control
   3:App/STM32F4-Discovery/modbus_mk.c ****  */
   4:App/STM32F4-Discovery/modbus_mk.c **** 
   5:App/STM32F4-Discovery/modbus_mk.c **** 
   6:App/STM32F4-Discovery/modbus_mk.c **** #include "modbus_mk.h"
   7:App/STM32F4-Discovery/modbus_mk.c **** #include "printf.h"
   8:App/STM32F4-Discovery/modbus_mk.c **** 
   9:App/STM32F4-Discovery/modbus_mk.c **** 
  10:App/STM32F4-Discovery/modbus_mk.c **** #define DEBUG
  11:App/STM32F4-Discovery/modbus_mk.c **** 
  12:App/STM32F4-Discovery/modbus_mk.c **** 
  13:App/STM32F4-Discovery/modbus_mk.c **** /* This funcion initializes the USART1 peripheral
  14:App/STM32F4-Discovery/modbus_mk.c ****  * 
  15:App/STM32F4-Discovery/modbus_mk.c ****  * Arguments: baudrate --> the baudrate at which the USART is 
  16:App/STM32F4-Discovery/modbus_mk.c ****  * 						   supposed to operate
  17:App/STM32F4-Discovery/modbus_mk.c ****  */
  18:App/STM32F4-Discovery/modbus_mk.c **** 
  19:App/STM32F4-Discovery/modbus_mk.c **** #define pdFalse 0
  20:App/STM32F4-Discovery/modbus_mk.c **** #define pdTrue 	1
  21:App/STM32F4-Discovery/modbus_mk.c **** 
  22:App/STM32F4-Discovery/modbus_mk.c **** 
  23:App/STM32F4-Discovery/modbus_mk.c **** void init_USARTx(void)
  24:App/STM32F4-Discovery/modbus_mk.c **** {
 603              		.loc 1 24 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 32
 606              		@ frame_needed = 1, uses_anonymous_args = 0
 607 0000 80B5     		push	{r7, lr}
 608              	.LCFI0:
 609              		.cfi_def_cfa_offset 8
 610              		.cfi_offset 7, -8
 611              		.cfi_offset 14, -4
 612 0002 88B0     		sub	sp, sp, #32
 613              	.LCFI1:
 614              		.cfi_def_cfa_offset 40
 615 0004 00AF     		add	r7, sp, #0
 616              	.LCFI2:
 617              		.cfi_def_cfa_register 7
  25:App/STM32F4-Discovery/modbus_mk.c **** 	
  26:App/STM32F4-Discovery/modbus_mk.c **** 	
  27:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitTypeDef GPIO_InitStruct; // this is for the GPIO pins used as TX and RX
  28:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitTypeDef USART_InitStruct; // this is for the USART1 initilization
  29:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitTypeDef NVIC_InitStructure; // this is used to configure the NVIC (nested vector interrup
  30:App/STM32F4-Discovery/modbus_mk.c **** 	
  31:App/STM32F4-Discovery/modbus_mk.c **** 	/* enable APB2 peripheral clock for USART1 
  32:App/STM32F4-Discovery/modbus_mk.c **** 	 * note that only USART1 and USART6 are connected to APB2
  33:App/STM32F4-Discovery/modbus_mk.c **** 	 * the other USARTs are connected to APB1
  34:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  35:App/STM32F4-Discovery/modbus_mk.c **** 	RCC_APB2PeriphClockCmd(USARTx_CLK, ENABLE);
 618              		.loc 1 35 0
 619 0006 2020     		movs	r0, #32
 620 0008 0121     		movs	r1, #1
 621 000a FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
  36:App/STM32F4-Discovery/modbus_mk.c **** 	
  37:App/STM32F4-Discovery/modbus_mk.c **** 	/* enable the peripheral clock for the pins used by 
  38:App/STM32F4-Discovery/modbus_mk.c **** 	 * USART1, PB6 for TX and PB7 for RX 
  39:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  40:App/STM32F4-Discovery/modbus_mk.c **** 	RCC_AHB1PeriphClockCmd(USARTx_TX_GPIO_CLK, ENABLE);
 622              		.loc 1 40 0
 623 000e 0420     		movs	r0, #4
 624 0010 0121     		movs	r1, #1
 625 0012 FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  41:App/STM32F4-Discovery/modbus_mk.c **** 	RCC_AHB1PeriphClockCmd(USARTx_RX_GPIO_CLK, ENABLE);
 626              		.loc 1 41 0
 627 0016 0420     		movs	r0, #4
 628 0018 0121     		movs	r1, #1
 629 001a FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  42:App/STM32F4-Discovery/modbus_mk.c **** 	RCC_AHB1PeriphClockCmd(USARTx_CS_GPIO_CLK, ENABLE);
 630              		.loc 1 42 0
 631 001e 4020     		movs	r0, #64
 632 0020 0121     		movs	r1, #1
 633 0022 FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  43:App/STM32F4-Discovery/modbus_mk.c **** 
  44:App/STM32F4-Discovery/modbus_mk.c **** 	
  45:App/STM32F4-Discovery/modbus_mk.c **** 	/* This sequence sets up the TX and RX pins 
  46:App/STM32F4-Discovery/modbus_mk.c **** 	 * so they work correctly with the USART1 peripheral
  47:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  48:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Pin = USARTx_RX_GPIO_PIN | USARTx_TX_GPIO_PIN; // Pins 6 (TX) and 7 (RX) are 
 634              		.loc 1 48 0
 635 0026 C023     		movs	r3, #192
 636 0028 BB61     		str	r3, [r7, #24]
  49:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF; 			// the pins are configured as alternate function so t
 637              		.loc 1 49 0
 638 002a 0223     		movs	r3, #2
 639 002c 3B77     		strb	r3, [r7, #28]
  50:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;		// this defines the IO speed and has nothing to d
 640              		.loc 1 50 0
 641 002e 0323     		movs	r3, #3
 642 0030 7B77     		strb	r3, [r7, #29]
  51:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;			// this defines the output type as push pull mode (a
 643              		.loc 1 51 0
 644 0032 0023     		movs	r3, #0
 645 0034 BB77     		strb	r3, [r7, #30]
  52:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;			// this activates the pullup resistors on the IO pins
 646              		.loc 1 52 0
 647 0036 0123     		movs	r3, #1
 648 0038 FB77     		strb	r3, [r7, #31]
  53:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_Init(USARTx_TX_GPIO_PORT, &GPIO_InitStruct);					// now all the values are passed to the GPIO
 649              		.loc 1 53 0
 650 003a 07F11803 		add	r3, r7, #24
 651 003e 2948     		ldr	r0, .L2
 652 0040 1946     		mov	r1, r3
 653 0042 FFF7FEFF 		bl	GPIO_Init
  54:App/STM32F4-Discovery/modbus_mk.c **** 	
  55:App/STM32F4-Discovery/modbus_mk.c **** 	
  56:App/STM32F4-Discovery/modbus_mk.c **** 	
  57:App/STM32F4-Discovery/modbus_mk.c **** 	/* Configure the chip select pin in this case we will use PG8 */
  58:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Pin = USARTx_CS_GPIO_PIN;
 654              		.loc 1 58 0
 655 0046 4FF48073 		mov	r3, #256
 656 004a BB61     		str	r3, [r7, #24]
  59:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_OUT;
 657              		.loc 1 59 0
 658 004c 0123     		movs	r3, #1
 659 004e 3B77     		strb	r3, [r7, #28]
  60:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;
 660              		.loc 1 60 0
 661 0050 0023     		movs	r3, #0
 662 0052 BB77     		strb	r3, [r7, #30]
  61:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;
 663              		.loc 1 61 0
 664 0054 0323     		movs	r3, #3
 665 0056 7B77     		strb	r3, [r7, #29]
  62:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;
 666              		.loc 1 62 0
 667 0058 0123     		movs	r3, #1
 668 005a FB77     		strb	r3, [r7, #31]
  63:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_Init(USARTx_CS_GPIO_PORT, &GPIO_InitStruct);
 669              		.loc 1 63 0
 670 005c 07F11803 		add	r3, r7, #24
 671 0060 2148     		ldr	r0, .L2+4
 672 0062 1946     		mov	r1, r3
 673 0064 FFF7FEFF 		bl	GPIO_Init
  64:App/STM32F4-Discovery/modbus_mk.c **** 
  65:App/STM32F4-Discovery/modbus_mk.c **** 	DD() // set PG8 high
 674              		.loc 1 65 0
 675 0068 1F4B     		ldr	r3, .L2+4
 676 006a 1F4A     		ldr	r2, .L2+4
 677 006c 128B     		ldrh	r2, [r2, #24]	@ movhi
 678 006e 92B2     		uxth	r2, r2
 679 0070 42F48072 		orr	r2, r2, #256
 680 0074 92B2     		uxth	r2, r2
 681 0076 1A83     		strh	r2, [r3, #24]	@ movhi
  66:App/STM32F4-Discovery/modbus_mk.c **** 	
  67:App/STM32F4-Discovery/modbus_mk.c **** 	
  68:App/STM32F4-Discovery/modbus_mk.c **** 	/* The RX and TX pins are now connected to their AF
  69:App/STM32F4-Discovery/modbus_mk.c **** 	 * so that the USART1 can take over control of the 
  70:App/STM32F4-Discovery/modbus_mk.c **** 	 * pins
  71:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  72:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_PinAFConfig(GPIOC, GPIO_PinSource6, GPIO_AF_USART6); //
 682              		.loc 1 72 0
 683 0078 1A48     		ldr	r0, .L2
 684 007a 0621     		movs	r1, #6
 685 007c 0822     		movs	r2, #8
 686 007e FFF7FEFF 		bl	GPIO_PinAFConfig
  73:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_PinAFConfig(GPIOC, GPIO_PinSource7, GPIO_AF_USART6);
 687              		.loc 1 73 0
 688 0082 1848     		ldr	r0, .L2
 689 0084 0721     		movs	r1, #7
 690 0086 0822     		movs	r2, #8
 691 0088 FFF7FEFF 		bl	GPIO_PinAFConfig
  74:App/STM32F4-Discovery/modbus_mk.c **** 	
  75:App/STM32F4-Discovery/modbus_mk.c **** 	/* Now the USART_InitStruct is used to define the 
  76:App/STM32F4-Discovery/modbus_mk.c **** 	 * properties of USART1 
  77:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  78:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_BaudRate = 38400;				// the baudrate is set to the value we passed into thi
 692              		.loc 1 78 0
 693 008c 4FF41643 		mov	r3, #38400
 694 0090 BB60     		str	r3, [r7, #8]
  79:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_WordLength = USART_WordLength_8b;// we want the data frame size to be 8 bit
 695              		.loc 1 79 0
 696 0092 0023     		movs	r3, #0
 697 0094 BB81     		strh	r3, [r7, #12]	@ movhi
  80:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_StopBits = USART_StopBits_1;		// we want 1 stop bit (standard)
 698              		.loc 1 80 0
 699 0096 0023     		movs	r3, #0
 700 0098 FB81     		strh	r3, [r7, #14]	@ movhi
  81:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_Parity = USART_Parity_No;		// we don't want a parity bit (standard)
 701              		.loc 1 81 0
 702 009a 0023     		movs	r3, #0
 703 009c 3B82     		strh	r3, [r7, #16]	@ movhi
  82:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_HardwareFlowControl = USART_HardwareFlowControl_None; // we don't want flow
 704              		.loc 1 82 0
 705 009e 0023     		movs	r3, #0
 706 00a0 BB82     		strh	r3, [r7, #20]	@ movhi
  83:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_Mode = USART_Mode_Tx | USART_Mode_Rx; // we want to enable the transmitter 
 707              		.loc 1 83 0
 708 00a2 0C23     		movs	r3, #12
 709 00a4 7B82     		strh	r3, [r7, #18]	@ movhi
  84:App/STM32F4-Discovery/modbus_mk.c **** 	USART_Init(USART6, &USART_InitStruct);					// again all the properties are passed to the USART_Ini
 710              		.loc 1 84 0
 711 00a6 07F10803 		add	r3, r7, #8
 712 00aa 1048     		ldr	r0, .L2+8
 713 00ac 1946     		mov	r1, r3
 714 00ae FFF7FEFF 		bl	USART_Init
  85:App/STM32F4-Discovery/modbus_mk.c **** 	
  86:App/STM32F4-Discovery/modbus_mk.c **** 	
  87:App/STM32F4-Discovery/modbus_mk.c **** 	/* Here the USART1 receive interrupt is enabled
  88:App/STM32F4-Discovery/modbus_mk.c **** 	 * and the interrupt controller is configured 
  89:App/STM32F4-Discovery/modbus_mk.c **** 	 * to jump to the USART1_IRQHandler() function
  90:App/STM32F4-Discovery/modbus_mk.c **** 	 * if the USART1 receive interrupt occurs
  91:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  92:App/STM32F4-Discovery/modbus_mk.c **** 	USART_ITConfig(USART6, USART_IT_RXNE, ENABLE); // enable the USART1 receive interrupt 
 715              		.loc 1 92 0
 716 00b2 0E48     		ldr	r0, .L2+8
 717 00b4 40F22551 		movw	r1, #1317
 718 00b8 0122     		movs	r2, #1
 719 00ba FFF7FEFF 		bl	USART_ITConfig
  93:App/STM32F4-Discovery/modbus_mk.c **** 	
  94:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitStructure.NVIC_IRQChannel = USART6_IRQn;		 // we want to configure the USART interrupts
 720              		.loc 1 94 0
 721 00be 4723     		movs	r3, #71
 722 00c0 3B71     		strb	r3, [r7, #4]
  95:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORIT
 723              		.loc 1 95 0
 724 00c2 0623     		movs	r3, #6
 725 00c4 7B71     		strb	r3, [r7, #5]
  96:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x1;		 // this sets the subpriority inside the gro
 726              		.loc 1 96 0
 727 00c6 0123     		movs	r3, #1
 728 00c8 BB71     		strb	r3, [r7, #6]
  97:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;			 // the USART1 interrupts are globally enabled
 729              		.loc 1 97 0
 730 00ca 0123     		movs	r3, #1
 731 00cc FB71     		strb	r3, [r7, #7]
  98:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_Init(&NVIC_InitStructure);	 // the properties are passed to the NVIC_Init function which take
 732              		.loc 1 98 0
 733 00ce 3B1D     		adds	r3, r7, #4
 734 00d0 1846     		mov	r0, r3
 735 00d2 FFF7FEFF 		bl	NVIC_Init
  99:App/STM32F4-Discovery/modbus_mk.c **** 
 100:App/STM32F4-Discovery/modbus_mk.c **** 	// finally this enables the complete USART1 peripheral
 101:App/STM32F4-Discovery/modbus_mk.c **** 	USART_Cmd(USART6, ENABLE);
 736              		.loc 1 101 0
 737 00d6 0548     		ldr	r0, .L2+8
 738 00d8 0121     		movs	r1, #1
 739 00da FFF7FEFF 		bl	USART_Cmd
 102:App/STM32F4-Discovery/modbus_mk.c **** }
 740              		.loc 1 102 0
 741 00de 2037     		adds	r7, r7, #32
 742 00e0 BD46     		mov	sp, r7
 743              		@ sp needed
 744 00e2 80BD     		pop	{r7, pc}
 745              	.L3:
 746              		.align	2
 747              	.L2:
 748 00e4 00080240 		.word	1073874944
 749 00e8 00180240 		.word	1073879040
 750 00ec 00140140 		.word	1073812480
 751              		.cfi_endproc
 752              	.LFE110:
 754              		.section	.text.USART_puts,"ax",%progbits
 755              		.align	2
 756              		.global	USART_puts
 757              		.thumb
 758              		.thumb_func
 760              	USART_puts:
 761              	.LFB111:
 103:App/STM32F4-Discovery/modbus_mk.c **** 
 104:App/STM32F4-Discovery/modbus_mk.c **** 
 105:App/STM32F4-Discovery/modbus_mk.c **** void USART_puts(uint8_t *s, int nb)
 106:App/STM32F4-Discovery/modbus_mk.c **** {
 762              		.loc 1 106 0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 16
 765              		@ frame_needed = 1, uses_anonymous_args = 0
 766              		@ link register save eliminated.
 767 0000 80B4     		push	{r7}
 768              	.LCFI3:
 769              		.cfi_def_cfa_offset 4
 770              		.cfi_offset 7, -4
 771 0002 85B0     		sub	sp, sp, #20
 772              	.LCFI4:
 773              		.cfi_def_cfa_offset 24
 774 0004 00AF     		add	r7, sp, #0
 775              	.LCFI5:
 776              		.cfi_def_cfa_register 7
 777 0006 7860     		str	r0, [r7, #4]
 778 0008 3960     		str	r1, [r7]
 107:App/STM32F4-Discovery/modbus_mk.c **** 
 108:App/STM32F4-Discovery/modbus_mk.c **** 	/*! This function is used to transmit a string of characters via 
 109:App/STM32F4-Discovery/modbus_mk.c **** 	 * the USART specified in USARTx.
 110:App/STM32F4-Discovery/modbus_mk.c **** 	 * 
 111:App/STM32F4-Discovery/modbus_mk.c **** 	 * It takes two arguments: USARTx --> can be any of the USARTs e.g. USART1, USART2 etc.
 112:App/STM32F4-Discovery/modbus_mk.c **** 	 * 						   (volatile) char *s is the string you want to send
 113:App/STM32F4-Discovery/modbus_mk.c **** 	 * 
 114:App/STM32F4-Discovery/modbus_mk.c **** 	 * Note: The string has to be passed to the function as a pointer because
 115:App/STM32F4-Discovery/modbus_mk.c **** 	 * 		 the compiler doesn't know the 'string' data type. In standard
 116:App/STM32F4-Discovery/modbus_mk.c **** 	 * 		 C a string is just an array of characters
 117:App/STM32F4-Discovery/modbus_mk.c **** 	 * 
 118:App/STM32F4-Discovery/modbus_mk.c **** 	 * Note 2: At the moment it takes a volatile char because the received_string variable
 119:App/STM32F4-Discovery/modbus_mk.c **** 	 * 		   declared as volatile char --> otherwise the compiler will spit out warnings
 120:App/STM32F4-Discovery/modbus_mk.c **** 	 * */
 121:App/STM32F4-Discovery/modbus_mk.c **** 
 122:App/STM32F4-Discovery/modbus_mk.c **** 	int i = 0;
 779              		.loc 1 122 0
 780 000a 0023     		movs	r3, #0
 781 000c FB60     		str	r3, [r7, #12]
 123:App/STM32F4-Discovery/modbus_mk.c **** 	while(i < nb && *s){
 782              		.loc 1 123 0
 783 000e 10E0     		b	.L5
 784              	.L8:
 124:App/STM32F4-Discovery/modbus_mk.c **** 		// wait until data register is empty
 125:App/STM32F4-Discovery/modbus_mk.c **** 		while( !(USARTx->SR & 0x00000040) ); 
 785              		.loc 1 125 0
 786 0010 00BF     		nop
 787              	.L6:
 788              		.loc 1 125 0 is_stmt 0 discriminator 1
 789 0012 0E4B     		ldr	r3, .L9
 790 0014 1B88     		ldrh	r3, [r3]	@ movhi
 791 0016 9BB2     		uxth	r3, r3
 792 0018 03F04003 		and	r3, r3, #64
 793 001c 002B     		cmp	r3, #0
 794 001e F8D0     		beq	.L6
 126:App/STM32F4-Discovery/modbus_mk.c **** 		//USART_SendData(USART6, s[i]);
 127:App/STM32F4-Discovery/modbus_mk.c **** 		USARTx->DR = s[i];
 795              		.loc 1 127 0 is_stmt 1
 796 0020 0A4B     		ldr	r3, .L9
 797 0022 FA68     		ldr	r2, [r7, #12]
 798 0024 7968     		ldr	r1, [r7, #4]
 799 0026 0A44     		add	r2, r2, r1
 800 0028 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 801 002a 9A80     		strh	r2, [r3, #4]	@ movhi
 128:App/STM32F4-Discovery/modbus_mk.c **** 		i++;
 802              		.loc 1 128 0
 803 002c FB68     		ldr	r3, [r7, #12]
 804 002e 0133     		adds	r3, r3, #1
 805 0030 FB60     		str	r3, [r7, #12]
 806              	.L5:
 123:App/STM32F4-Discovery/modbus_mk.c **** 	while(i < nb && *s){
 807              		.loc 1 123 0 discriminator 1
 808 0032 FA68     		ldr	r2, [r7, #12]
 809 0034 3B68     		ldr	r3, [r7]
 810 0036 9A42     		cmp	r2, r3
 811 0038 03DA     		bge	.L4
 123:App/STM32F4-Discovery/modbus_mk.c **** 	while(i < nb && *s){
 812              		.loc 1 123 0 is_stmt 0 discriminator 2
 813 003a 7B68     		ldr	r3, [r7, #4]
 814 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 815 003e 002B     		cmp	r3, #0
 816 0040 E6D1     		bne	.L8
 817              	.L4:
 129:App/STM32F4-Discovery/modbus_mk.c **** 	
 130:App/STM32F4-Discovery/modbus_mk.c **** 	}
 131:App/STM32F4-Discovery/modbus_mk.c **** 	
 132:App/STM32F4-Discovery/modbus_mk.c **** 	
 133:App/STM32F4-Discovery/modbus_mk.c **** }
 818              		.loc 1 133 0 is_stmt 1
 819 0042 1437     		adds	r7, r7, #20
 820 0044 BD46     		mov	sp, r7
 821              		@ sp needed
 822 0046 5DF8047B 		ldr	r7, [sp], #4
 823 004a 7047     		bx	lr
 824              	.L10:
 825              		.align	2
 826              	.L9:
 827 004c 00140140 		.word	1073812480
 828              		.cfi_endproc
 829              	.LFE111:
 831              		.section	.text.USART6_IRQHandler,"ax",%progbits
 832              		.align	2
 833              		.global	USART6_IRQHandler
 834              		.thumb
 835              		.thumb_func
 837              	USART6_IRQHandler:
 838              	.LFB112:
 134:App/STM32F4-Discovery/modbus_mk.c **** 
 135:App/STM32F4-Discovery/modbus_mk.c **** // this is the interrupt request handler (IRQ) for ALL USART6 interrupts
 136:App/STM32F4-Discovery/modbus_mk.c **** void USART6_IRQHandler(void){
 839              		.loc 1 136 0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 8
 842              		@ frame_needed = 1, uses_anonymous_args = 0
 843 0000 80B5     		push	{r7, lr}
 844              	.LCFI6:
 845              		.cfi_def_cfa_offset 8
 846              		.cfi_offset 7, -8
 847              		.cfi_offset 14, -4
 848 0002 82B0     		sub	sp, sp, #8
 849              	.LCFI7:
 850              		.cfi_def_cfa_offset 16
 851 0004 00AF     		add	r7, sp, #0
 852              	.LCFI8:
 853              		.cfi_def_cfa_register 7
 137:App/STM32F4-Discovery/modbus_mk.c **** 	
 138:App/STM32F4-Discovery/modbus_mk.c **** 	unsigned portBASE_TYPE xHigherPriorityTaskWoken_usart = pdFalse;
 854              		.loc 1 138 0
 855 0006 0023     		movs	r3, #0
 856 0008 3B60     		str	r3, [r7]
 139:App/STM32F4-Discovery/modbus_mk.c **** 	
 140:App/STM32F4-Discovery/modbus_mk.c **** 
 141:App/STM32F4-Discovery/modbus_mk.c **** 	// check if the USART1 receive interrupt flag was set
 142:App/STM32F4-Discovery/modbus_mk.c **** 	if( USART_GetITStatus(USARTx, USART_IT_RXNE) ){
 857              		.loc 1 142 0
 858 000a 2148     		ldr	r0, .L15
 859 000c 40F22551 		movw	r1, #1317
 860 0010 FFF7FEFF 		bl	USART_GetITStatus
 861 0014 0346     		mov	r3, r0
 862 0016 002B     		cmp	r3, #0
 863 0018 30D0     		beq	.L12
 864              	.LBB2:
 143:App/STM32F4-Discovery/modbus_mk.c **** 		
 144:App/STM32F4-Discovery/modbus_mk.c **** 		
 145:App/STM32F4-Discovery/modbus_mk.c **** 	//	USART_ClearITPendingBit ( USARTx, USART_IT_RXNE ) ;
 146:App/STM32F4-Discovery/modbus_mk.c **** 		static uint8_t cnt = 0; // this counter is used to determine the string length
 147:App/STM32F4-Discovery/modbus_mk.c **** 	 	char t = USARTx->DR; // the character from the USART1 data register is saved in t
 865              		.loc 1 147 0
 866 001a 1D4B     		ldr	r3, .L15
 867 001c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 868 001e 9BB2     		uxth	r3, r3
 869 0020 FB71     		strb	r3, [r7, #7]
 148:App/STM32F4-Discovery/modbus_mk.c **** 		
 149:App/STM32F4-Discovery/modbus_mk.c **** 		/* check if the received character is not the LF character (used to determine end of string) 
 150:App/STM32F4-Discovery/modbus_mk.c **** 		 * or the if the maximum string length has been been reached 
 151:App/STM32F4-Discovery/modbus_mk.c **** 		 */
 152:App/STM32F4-Discovery/modbus_mk.c **** 	
 153:App/STM32F4-Discovery/modbus_mk.c **** 		
 154:App/STM32F4-Discovery/modbus_mk.c **** 		if( (cnt < rx_length) &&
 870              		.loc 1 154 0
 871 0022 1C4B     		ldr	r3, .L15+4
 872 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 873 0026 1A46     		mov	r2, r3
 874 0028 1B4B     		ldr	r3, .L15+8
 875 002a 1B68     		ldr	r3, [r3]
 876 002c 9A42     		cmp	r2, r3
 877 002e 0FDA     		bge	.L13
 155:App/STM32F4-Discovery/modbus_mk.c **** 				(cnt < MAX_STRLEN-400) ){ 
 878              		.loc 1 155 0 discriminator 1
 879 0030 184B     		ldr	r3, .L15+4
 880 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 154:App/STM32F4-Discovery/modbus_mk.c **** 		if( (cnt < rx_length) &&
 881              		.loc 1 154 0 discriminator 1
 882 0034 6F2B     		cmp	r3, #111
 883 0036 0BD8     		bhi	.L13
 156:App/STM32F4-Discovery/modbus_mk.c **** 			received_string[cnt] = t;
 884              		.loc 1 156 0
 885 0038 164B     		ldr	r3, .L15+4
 886 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 887 003c 174A     		ldr	r2, .L15+12
 888 003e F979     		ldrb	r1, [r7, #7]
 889 0040 D154     		strb	r1, [r2, r3]
 157:App/STM32F4-Discovery/modbus_mk.c **** 			cnt++;
 890              		.loc 1 157 0
 891 0042 144B     		ldr	r3, .L15+4
 892 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 893 0046 0133     		adds	r3, r3, #1
 894 0048 DAB2     		uxtb	r2, r3
 895 004a 124B     		ldr	r3, .L15+4
 896 004c 1A70     		strb	r2, [r3]
 897 004e 15E0     		b	.L12
 898              	.L13:
 158:App/STM32F4-Discovery/modbus_mk.c **** 		}
 159:App/STM32F4-Discovery/modbus_mk.c **** 		else{ // otherwise reset the character counter and print the received string
 160:App/STM32F4-Discovery/modbus_mk.c **** 			received_string[cnt] = t; 
 899              		.loc 1 160 0
 900 0050 104B     		ldr	r3, .L15+4
 901 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 902 0054 114A     		ldr	r2, .L15+12
 903 0056 F979     		ldrb	r1, [r7, #7]
 904 0058 D154     		strb	r1, [r2, r3]
 161:App/STM32F4-Discovery/modbus_mk.c **** 			cnt = 0;
 905              		.loc 1 161 0
 906 005a 0E4B     		ldr	r3, .L15+4
 907 005c 0022     		movs	r2, #0
 908 005e 1A70     		strb	r2, [r3]
 162:App/STM32F4-Discovery/modbus_mk.c **** 		//	USART_ITConfig(USART6, USART_IT_RXNE, DISABLE); 
 163:App/STM32F4-Discovery/modbus_mk.c **** 	
 164:App/STM32F4-Discovery/modbus_mk.c **** 			USART_ClearITPendingBit ( USARTx, USART_IT_RXNE ) ;
 909              		.loc 1 164 0
 910 0060 0B48     		ldr	r0, .L15
 911 0062 40F22551 		movw	r1, #1317
 912 0066 FFF7FEFF 		bl	USART_ClearITPendingBit
 165:App/STM32F4-Discovery/modbus_mk.c **** 	
 166:App/STM32F4-Discovery/modbus_mk.c **** 			xSemaphoreGiveFromISR(xSmphrUSART,&xHigherPriorityTaskWoken_usart );
 913              		.loc 1 166 0
 914 006a 0D4B     		ldr	r3, .L15+16
 915 006c 1A68     		ldr	r2, [r3]
 916 006e 3B46     		mov	r3, r7
 917 0070 1046     		mov	r0, r2
 918 0072 0021     		movs	r1, #0
 919 0074 1A46     		mov	r2, r3
 920 0076 0023     		movs	r3, #0
 921 0078 FFF7FEFF 		bl	xQueueGenericSendFromISR
 922              	.L12:
 923              	.LBE2:
 167:App/STM32F4-Discovery/modbus_mk.c **** 	
 168:App/STM32F4-Discovery/modbus_mk.c **** 			//USART_puts(USART1, received_string);
 169:App/STM32F4-Discovery/modbus_mk.c **** 		}
 170:App/STM32F4-Discovery/modbus_mk.c **** 
 171:App/STM32F4-Discovery/modbus_mk.c **** 
 172:App/STM32F4-Discovery/modbus_mk.c **** 	}
 173:App/STM32F4-Discovery/modbus_mk.c ****  portEND_SWITCHING_ISR( xHigherPriorityTaskWoken_usart );	
 924              		.loc 1 173 0
 925 007c 3B68     		ldr	r3, [r7]
 926 007e 002B     		cmp	r3, #0
 927 0080 03D0     		beq	.L11
 928              		.loc 1 173 0 is_stmt 0 discriminator 1
 929 0082 084B     		ldr	r3, .L15+20
 930 0084 4FF08052 		mov	r2, #268435456
 931 0088 1A60     		str	r2, [r3]
 932              	.L11:
 174:App/STM32F4-Discovery/modbus_mk.c **** }
 933              		.loc 1 174 0 is_stmt 1
 934 008a 0837     		adds	r7, r7, #8
 935 008c BD46     		mov	sp, r7
 936              		@ sp needed
 937 008e 80BD     		pop	{r7, pc}
 938              	.L16:
 939              		.align	2
 940              	.L15:
 941 0090 00140140 		.word	1073812480
 942 0094 00000000 		.word	cnt.9326
 943 0098 00000000 		.word	rx_length
 944 009c 00000000 		.word	received_string
 945 00a0 00000000 		.word	xSmphrUSART
 946 00a4 04ED00E0 		.word	-536810236
 947              		.cfi_endproc
 948              	.LFE112:
 950              		.section	.text.crc16,"ax",%progbits
 951              		.align	2
 952              		.global	crc16
 953              		.thumb
 954              		.thumb_func
 956              	crc16:
 957              	.LFB113:
 175:App/STM32F4-Discovery/modbus_mk.c **** 
 176:App/STM32F4-Discovery/modbus_mk.c **** 
 177:App/STM32F4-Discovery/modbus_mk.c **** 
 178:App/STM32F4-Discovery/modbus_mk.c **** /* function for  */
 179:App/STM32F4-Discovery/modbus_mk.c **** uint16_t crc16(uint8_t *buffer, uint16_t buffer_length)
 180:App/STM32F4-Discovery/modbus_mk.c **** {
 958              		.loc 1 180 0
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 16
 961              		@ frame_needed = 1, uses_anonymous_args = 0
 962              		@ link register save eliminated.
 963 0000 80B4     		push	{r7}
 964              	.LCFI9:
 965              		.cfi_def_cfa_offset 4
 966              		.cfi_offset 7, -4
 967 0002 85B0     		sub	sp, sp, #20
 968              	.LCFI10:
 969              		.cfi_def_cfa_offset 24
 970 0004 00AF     		add	r7, sp, #0
 971              	.LCFI11:
 972              		.cfi_def_cfa_register 7
 973 0006 7860     		str	r0, [r7, #4]
 974 0008 0B46     		mov	r3, r1
 975 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 181:App/STM32F4-Discovery/modbus_mk.c ****      uint8_t crc_hi = 0xFF; /* high CRC byte initialized */
 976              		.loc 1 181 0
 977 000c FF23     		movs	r3, #255
 978 000e FB73     		strb	r3, [r7, #15]
 182:App/STM32F4-Discovery/modbus_mk.c ****      uint8_t crc_lo = 0xFF; /* low CRC byte initialized */
 979              		.loc 1 182 0
 980 0010 FF23     		movs	r3, #255
 981 0012 BB73     		strb	r3, [r7, #14]
 183:App/STM32F4-Discovery/modbus_mk.c ****      unsigned int i; /* will index into CRC lookup */
 184:App/STM32F4-Discovery/modbus_mk.c ****  
 185:App/STM32F4-Discovery/modbus_mk.c ****      /* pass through message buffer */
 186:App/STM32F4-Discovery/modbus_mk.c ****      while (buffer_length--) {
 982              		.loc 1 186 0
 983 0014 13E0     		b	.L18
 984              	.L19:
 187:App/STM32F4-Discovery/modbus_mk.c ****          i = crc_hi ^ *buffer++; /* calculate the CRC  */
 985              		.loc 1 187 0
 986 0016 7B68     		ldr	r3, [r7, #4]
 987 0018 5A1C     		adds	r2, r3, #1
 988 001a 7A60     		str	r2, [r7, #4]
 989 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 990 001e FB7B     		ldrb	r3, [r7, #15]
 991 0020 5340     		eors	r3, r3, r2
 992 0022 DBB2     		uxtb	r3, r3
 993 0024 BB60     		str	r3, [r7, #8]
 188:App/STM32F4-Discovery/modbus_mk.c ****          crc_hi = crc_lo ^ table_crc_hi[i];
 994              		.loc 1 188 0
 995 0026 0F4A     		ldr	r2, .L21
 996 0028 BB68     		ldr	r3, [r7, #8]
 997 002a 1344     		add	r3, r3, r2
 998 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 999 002e BB7B     		ldrb	r3, [r7, #14]
 1000 0030 5340     		eors	r3, r3, r2
 1001 0032 FB73     		strb	r3, [r7, #15]
 189:App/STM32F4-Discovery/modbus_mk.c ****          crc_lo = table_crc_lo[i];
 1002              		.loc 1 189 0
 1003 0034 0C4A     		ldr	r2, .L21+4
 1004 0036 BB68     		ldr	r3, [r7, #8]
 1005 0038 1344     		add	r3, r3, r2
 1006 003a 1B78     		ldrb	r3, [r3]
 1007 003c BB73     		strb	r3, [r7, #14]
 1008              	.L18:
 186:App/STM32F4-Discovery/modbus_mk.c ****      while (buffer_length--) {
 1009              		.loc 1 186 0 discriminator 1
 1010 003e 7B88     		ldrh	r3, [r7, #2]
 1011 0040 5A1E     		subs	r2, r3, #1
 1012 0042 7A80     		strh	r2, [r7, #2]	@ movhi
 1013 0044 002B     		cmp	r3, #0
 1014 0046 E6D1     		bne	.L19
 190:App/STM32F4-Discovery/modbus_mk.c ****      }
 191:App/STM32F4-Discovery/modbus_mk.c ****  
 192:App/STM32F4-Discovery/modbus_mk.c ****      return (crc_hi << 8 | crc_lo);
 1015              		.loc 1 192 0
 1016 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1017 004a 1B02     		lsls	r3, r3, #8
 1018 004c 9AB2     		uxth	r2, r3
 1019 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1020 0050 9BB2     		uxth	r3, r3
 1021 0052 1343     		orrs	r3, r3, r2
 1022 0054 9BB2     		uxth	r3, r3
 1023 0056 9BB2     		uxth	r3, r3
 193:App/STM32F4-Discovery/modbus_mk.c **** }
 1024              		.loc 1 193 0
 1025 0058 1846     		mov	r0, r3
 1026 005a 1437     		adds	r7, r7, #20
 1027 005c BD46     		mov	sp, r7
 1028              		@ sp needed
 1029 005e 5DF8047B 		ldr	r7, [sp], #4
 1030 0062 7047     		bx	lr
 1031              	.L22:
 1032              		.align	2
 1033              	.L21:
 1034 0064 00000000 		.word	table_crc_hi
 1035 0068 00000000 		.word	table_crc_lo
 1036              		.cfi_endproc
 1037              	.LFE113:
 1039              		.section	.rodata
 1040 0071 000000   		.align	2
 1041              	.LC4:
 1042 0074 6D6F6462 		.ascii	"modbus OK.\012\000"
 1042      7573204F 
 1042      4B2E0A00 
 1043              		.section	.text.modbus_confirmation,"ax",%progbits
 1044              		.align	2
 1045              		.global	modbus_confirmation
 1046              		.thumb
 1047              		.thumb_func
 1049              	modbus_confirmation:
 1050              	.LFB114:
 194:App/STM32F4-Discovery/modbus_mk.c **** 
 195:App/STM32F4-Discovery/modbus_mk.c **** /* modbus_confirmation */ 
 196:App/STM32F4-Discovery/modbus_mk.c **** 
 197:App/STM32F4-Discovery/modbus_mk.c **** int modbus_confirmation ( uint8_t * req, uint8_t * rsp, uint16_t write_len, uint16_t read_len)
 198:App/STM32F4-Discovery/modbus_mk.c **** {
 1051              		.loc 1 198 0
 1052              		.cfi_startproc
 1053              		@ args = 0, pretend = 0, frame = 24
 1054              		@ frame_needed = 1, uses_anonymous_args = 0
 1055 0000 80B5     		push	{r7, lr}
 1056              	.LCFI12:
 1057              		.cfi_def_cfa_offset 8
 1058              		.cfi_offset 7, -8
 1059              		.cfi_offset 14, -4
 1060 0002 86B0     		sub	sp, sp, #24
 1061              	.LCFI13:
 1062              		.cfi_def_cfa_offset 32
 1063 0004 00AF     		add	r7, sp, #0
 1064              	.LCFI14:
 1065              		.cfi_def_cfa_register 7
 1066 0006 F860     		str	r0, [r7, #12]
 1067 0008 B960     		str	r1, [r7, #8]
 1068 000a FA80     		strh	r2, [r7, #6]	@ movhi
 1069 000c BB80     		strh	r3, [r7, #4]	@ movhi
 199:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(rsp, read_len - 2 );
 1070              		.loc 1 199 0
 1071 000e BB88     		ldrh	r3, [r7, #4]	@ movhi
 1072 0010 023B     		subs	r3, r3, #2
 1073 0012 9BB2     		uxth	r3, r3
 1074 0014 B868     		ldr	r0, [r7, #8]
 1075 0016 1946     		mov	r1, r3
 1076 0018 FFF7FEFF 		bl	crc16
 1077 001c 0346     		mov	r3, r0
 1078 001e FB82     		strh	r3, [r7, #22]	@ movhi
 200:App/STM32F4-Discovery/modbus_mk.c **** 
 201:App/STM32F4-Discovery/modbus_mk.c **** 	if (	rsp[read_len -1 ] == ( crc & 0x00ff ) && 
 1079              		.loc 1 201 0
 1080 0020 BB88     		ldrh	r3, [r7, #4]
 1081 0022 013B     		subs	r3, r3, #1
 1082 0024 BA68     		ldr	r2, [r7, #8]
 1083 0026 1344     		add	r3, r3, r2
 1084 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1085 002a 1A46     		mov	r2, r3
 1086 002c FB8A     		ldrh	r3, [r7, #22]
 1087 002e DBB2     		uxtb	r3, r3
 1088 0030 9A42     		cmp	r2, r3
 1089 0032 0FD1     		bne	.L24
 202:App/STM32F4-Discovery/modbus_mk.c **** 		rsp[read_len - 2 ] == ( crc >> 8 ) ) 
 1090              		.loc 1 202 0 discriminator 1
 1091 0034 BB88     		ldrh	r3, [r7, #4]
 1092 0036 023B     		subs	r3, r3, #2
 1093 0038 BA68     		ldr	r2, [r7, #8]
 1094 003a 1344     		add	r3, r3, r2
 1095 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1096 003e 1A46     		mov	r2, r3
 1097 0040 FB8A     		ldrh	r3, [r7, #22]
 1098 0042 1B0A     		lsrs	r3, r3, #8
 1099 0044 9BB2     		uxth	r3, r3
 201:App/STM32F4-Discovery/modbus_mk.c **** 	if (	rsp[read_len -1 ] == ( crc & 0x00ff ) && 
 1100              		.loc 1 201 0 discriminator 1
 1101 0046 9A42     		cmp	r2, r3
 1102 0048 04D1     		bne	.L24
 203:App/STM32F4-Discovery/modbus_mk.c **** 	{
 204:App/STM32F4-Discovery/modbus_mk.c **** #ifdef DEBUG
 205:App/STM32F4-Discovery/modbus_mk.c **** 		t_printf("modbus OK.\n");
 1103              		.loc 1 205 0
 1104 004a 0548     		ldr	r0, .L26
 1105 004c FFF7FEFF 		bl	t_printf
 206:App/STM32F4-Discovery/modbus_mk.c **** #endif
 207:App/STM32F4-Discovery/modbus_mk.c **** 		return 1;
 1106              		.loc 1 207 0
 1107 0050 0123     		movs	r3, #1
 1108 0052 00E0     		b	.L25
 1109              	.L24:
 208:App/STM32F4-Discovery/modbus_mk.c **** 	}
 209:App/STM32F4-Discovery/modbus_mk.c **** #ifdef DEBUF
 210:App/STM32F4-Discovery/modbus_mk.c **** 		t_printf("modbus FAIL.\n");
 211:App/STM32F4-Discovery/modbus_mk.c **** #endif
 212:App/STM32F4-Discovery/modbus_mk.c **** 	return 0; 
 1110              		.loc 1 212 0
 1111 0054 0023     		movs	r3, #0
 1112              	.L25:
 213:App/STM32F4-Discovery/modbus_mk.c **** 	
 214:App/STM32F4-Discovery/modbus_mk.c **** }
 1113              		.loc 1 214 0
 1114 0056 1846     		mov	r0, r3
 1115 0058 1837     		adds	r7, r7, #24
 1116 005a BD46     		mov	sp, r7
 1117              		@ sp needed
 1118 005c 80BD     		pop	{r7, pc}
 1119              	.L27:
 1120 005e 00BF     		.align	2
 1121              	.L26:
 1122 0060 74000000 		.word	.LC4
 1123              		.cfi_endproc
 1124              	.LFE114:
 1126              		.section	.rodata
 1127              		.align	2
 1128              	.LC5:
 1129 0080 5B25785D 		.ascii	"[%x]\000"
 1129      00
 1130 0085 000000   		.align	2
 1131              	.LC6:
 1132 0088 0A00     		.ascii	"\012\000"
 1133              		.section	.text.write_read_modbus,"ax",%progbits
 1134              		.align	2
 1135              		.global	write_read_modbus
 1136              		.thumb
 1137              		.thumb_func
 1139              	write_read_modbus:
 1140              	.LFB115:
 215:App/STM32F4-Discovery/modbus_mk.c **** 
 216:App/STM32F4-Discovery/modbus_mk.c **** /* write to modbus */
 217:App/STM32F4-Discovery/modbus_mk.c **** void write_read_modbus( uint8_t * req, uint8_t * rsp, int write_len, int read_len )
 218:App/STM32F4-Discovery/modbus_mk.c **** {
 1141              		.loc 1 218 0
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 24
 1144              		@ frame_needed = 1, uses_anonymous_args = 0
 1145 0000 80B5     		push	{r7, lr}
 1146              	.LCFI15:
 1147              		.cfi_def_cfa_offset 8
 1148              		.cfi_offset 7, -8
 1149              		.cfi_offset 14, -4
 1150 0002 86B0     		sub	sp, sp, #24
 1151              	.LCFI16:
 1152              		.cfi_def_cfa_offset 32
 1153 0004 00AF     		add	r7, sp, #0
 1154              	.LCFI17:
 1155              		.cfi_def_cfa_register 7
 1156 0006 F860     		str	r0, [r7, #12]
 1157 0008 B960     		str	r1, [r7, #8]
 1158 000a 7A60     		str	r2, [r7, #4]
 1159 000c 3B60     		str	r3, [r7]
 219:App/STM32F4-Discovery/modbus_mk.c **** 	int i; 
 220:App/STM32F4-Discovery/modbus_mk.c **** 	rx_length = read_len + write_len - 1 ; 
 1160              		.loc 1 220 0
 1161 000e 3A68     		ldr	r2, [r7]
 1162 0010 7B68     		ldr	r3, [r7, #4]
 1163 0012 1344     		add	r3, r3, r2
 1164 0014 5A1E     		subs	r2, r3, #1
 1165 0016 2A4B     		ldr	r3, .L35
 1166 0018 1A60     		str	r2, [r3]
 221:App/STM32F4-Discovery/modbus_mk.c **** 
 222:App/STM32F4-Discovery/modbus_mk.c **** 	// driver disable 
 223:App/STM32F4-Discovery/modbus_mk.c **** 	DD();
 1167              		.loc 1 223 0
 1168 001a 2A4B     		ldr	r3, .L35+4
 1169 001c 294A     		ldr	r2, .L35+4
 1170 001e 128B     		ldrh	r2, [r2, #24]	@ movhi
 1171 0020 92B2     		uxth	r2, r2
 1172 0022 42F48072 		orr	r2, r2, #256
 1173 0026 92B2     		uxth	r2, r2
 1174 0028 1A83     		strh	r2, [r3, #24]	@ movhi
 224:App/STM32F4-Discovery/modbus_mk.c **** 	for (i=0; i < 4000; i++) ;
 1175              		.loc 1 224 0
 1176 002a 0023     		movs	r3, #0
 1177 002c 7B61     		str	r3, [r7, #20]
 1178 002e 02E0     		b	.L29
 1179              	.L30:
 1180              		.loc 1 224 0 is_stmt 0 discriminator 2
 1181 0030 7B69     		ldr	r3, [r7, #20]
 1182 0032 0133     		adds	r3, r3, #1
 1183 0034 7B61     		str	r3, [r7, #20]
 1184              	.L29:
 1185              		.loc 1 224 0 discriminator 1
 1186 0036 7B69     		ldr	r3, [r7, #20]
 1187 0038 B3F57A6F 		cmp	r3, #4000
 1188 003c F8DB     		blt	.L30
 225:App/STM32F4-Discovery/modbus_mk.c **** 	USART_puts(req,write_len);
 1189              		.loc 1 225 0 is_stmt 1
 1190 003e F868     		ldr	r0, [r7, #12]
 1191 0040 7968     		ldr	r1, [r7, #4]
 1192 0042 FFF7FEFF 		bl	USART_puts
 226:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < 4000; i++);
 1193              		.loc 1 226 0
 1194 0046 0023     		movs	r3, #0
 1195 0048 7B61     		str	r3, [r7, #20]
 1196 004a 02E0     		b	.L31
 1197              	.L32:
 1198              		.loc 1 226 0 is_stmt 0 discriminator 2
 1199 004c 7B69     		ldr	r3, [r7, #20]
 1200 004e 0133     		adds	r3, r3, #1
 1201 0050 7B61     		str	r3, [r7, #20]
 1202              	.L31:
 1203              		.loc 1 226 0 discriminator 1
 1204 0052 7B69     		ldr	r3, [r7, #20]
 1205 0054 B3F57A6F 		cmp	r3, #4000
 1206 0058 F8DB     		blt	.L32
 227:App/STM32F4-Discovery/modbus_mk.c **** 	// driver enable 
 228:App/STM32F4-Discovery/modbus_mk.c **** 	DE();
 1207              		.loc 1 228 0 is_stmt 1
 1208 005a 1A4B     		ldr	r3, .L35+4
 1209 005c 194A     		ldr	r2, .L35+4
 1210 005e 528B     		ldrh	r2, [r2, #26]	@ movhi
 1211 0060 92B2     		uxth	r2, r2
 1212 0062 42F48072 		orr	r2, r2, #256
 1213 0066 92B2     		uxth	r2, r2
 1214 0068 5A83     		strh	r2, [r3, #26]	@ movhi
 229:App/STM32F4-Discovery/modbus_mk.c **** 	
 230:App/STM32F4-Discovery/modbus_mk.c **** 	xSemaphoreTake(xSmphrUSART, 500/portTICK_RATE_MS);
 1215              		.loc 1 230 0
 1216 006a 174B     		ldr	r3, .L35+8
 1217 006c 1B68     		ldr	r3, [r3]
 1218 006e 1846     		mov	r0, r3
 1219 0070 0021     		movs	r1, #0
 1220 0072 4FF4FA72 		mov	r2, #500
 1221 0076 0023     		movs	r3, #0
 1222 0078 FFF7FEFF 		bl	xQueueGenericReceive
 231:App/STM32F4-Discovery/modbus_mk.c **** 	
 232:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < read_len; i++) 
 1223              		.loc 1 232 0
 1224 007c 0023     		movs	r3, #0
 1225 007e 7B61     		str	r3, [r7, #20]
 1226 0080 14E0     		b	.L33
 1227              	.L34:
 233:App/STM32F4-Discovery/modbus_mk.c **** 	{
 234:App/STM32F4-Discovery/modbus_mk.c **** 
 235:App/STM32F4-Discovery/modbus_mk.c **** 		rsp[i] = received_string[i+write_len]; 
 1228              		.loc 1 235 0 discriminator 2
 1229 0082 7B69     		ldr	r3, [r7, #20]
 1230 0084 BA68     		ldr	r2, [r7, #8]
 1231 0086 1344     		add	r3, r3, r2
 1232 0088 7969     		ldr	r1, [r7, #20]
 1233 008a 7A68     		ldr	r2, [r7, #4]
 1234 008c 0A44     		add	r2, r2, r1
 1235 008e 0F49     		ldr	r1, .L35+12
 1236 0090 8A5C     		ldrb	r2, [r1, r2]
 1237 0092 D2B2     		uxtb	r2, r2
 1238 0094 1A70     		strb	r2, [r3]
 236:App/STM32F4-Discovery/modbus_mk.c **** #ifdef DEBUG
 237:App/STM32F4-Discovery/modbus_mk.c **** 		t_printf("[%x]", rsp[i]);
 1239              		.loc 1 237 0 discriminator 2
 1240 0096 7B69     		ldr	r3, [r7, #20]
 1241 0098 BA68     		ldr	r2, [r7, #8]
 1242 009a 1344     		add	r3, r3, r2
 1243 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1244 009e 0C48     		ldr	r0, .L35+16
 1245 00a0 1946     		mov	r1, r3
 1246 00a2 FFF7FEFF 		bl	t_printf
 232:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < read_len; i++) 
 1247              		.loc 1 232 0 discriminator 2
 1248 00a6 7B69     		ldr	r3, [r7, #20]
 1249 00a8 0133     		adds	r3, r3, #1
 1250 00aa 7B61     		str	r3, [r7, #20]
 1251              	.L33:
 232:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < read_len; i++) 
 1252              		.loc 1 232 0 is_stmt 0 discriminator 1
 1253 00ac 7A69     		ldr	r2, [r7, #20]
 1254 00ae 3B68     		ldr	r3, [r7]
 1255 00b0 9A42     		cmp	r2, r3
 1256 00b2 E6DB     		blt	.L34
 238:App/STM32F4-Discovery/modbus_mk.c **** #endif	
 239:App/STM32F4-Discovery/modbus_mk.c **** 	}
 240:App/STM32F4-Discovery/modbus_mk.c **** 
 241:App/STM32F4-Discovery/modbus_mk.c **** #ifdef DEBUG
 242:App/STM32F4-Discovery/modbus_mk.c **** 		t_printf("\n");
 1257              		.loc 1 242 0 is_stmt 1
 1258 00b4 0748     		ldr	r0, .L35+20
 1259 00b6 FFF7FEFF 		bl	t_printf
 243:App/STM32F4-Discovery/modbus_mk.c **** #endif		
 244:App/STM32F4-Discovery/modbus_mk.c **** 
 245:App/STM32F4-Discovery/modbus_mk.c **** }
 1260              		.loc 1 245 0
 1261 00ba 1837     		adds	r7, r7, #24
 1262 00bc BD46     		mov	sp, r7
 1263              		@ sp needed
 1264 00be 80BD     		pop	{r7, pc}
 1265              	.L36:
 1266              		.align	2
 1267              	.L35:
 1268 00c0 00000000 		.word	rx_length
 1269 00c4 00180240 		.word	1073879040
 1270 00c8 00000000 		.word	xSmphrUSART
 1271 00cc 00000000 		.word	received_string
 1272 00d0 80000000 		.word	.LC5
 1273 00d4 88000000 		.word	.LC6
 1274              		.cfi_endproc
 1275              	.LFE115:
 1277              		.section	.text.modbus_RIB,"ax",%progbits
 1278              		.align	2
 1279              		.global	modbus_RIB
 1280              		.thumb
 1281              		.thumb_func
 1283              	modbus_RIB:
 1284              	.LFB116:
 246:App/STM32F4-Discovery/modbus_mk.c **** 
 247:App/STM32F4-Discovery/modbus_mk.c **** 
 248:App/STM32F4-Discovery/modbus_mk.c **** /* modbus read input bits */
 249:App/STM32F4-Discovery/modbus_mk.c **** uint8_t modbus_RIB( int16_t address, int nb, uint8_t *dst )
 250:App/STM32F4-Discovery/modbus_mk.c **** {
 1285              		.loc 1 250 0
 1286              		.cfi_startproc
 1287              		@ args = 0, pretend = 0, frame = 536
 1288              		@ frame_needed = 1, uses_anonymous_args = 0
 1289 0000 80B5     		push	{r7, lr}
 1290              	.LCFI18:
 1291              		.cfi_def_cfa_offset 8
 1292              		.cfi_offset 7, -8
 1293              		.cfi_offset 14, -4
 1294 0002 ADF5067D 		sub	sp, sp, #536
 1295              	.LCFI19:
 1296              		.cfi_def_cfa_offset 544
 1297 0006 00AF     		add	r7, sp, #0
 1298              	.LCFI20:
 1299              		.cfi_def_cfa_register 7
 1300 0008 07F10803 		add	r3, r7, #8
 1301 000c 1960     		str	r1, [r3]
 1302 000e 3B1D     		adds	r3, r7, #4
 1303 0010 1A60     		str	r2, [r3]
 1304 0012 07F10E03 		add	r3, r7, #14
 1305 0016 0246     		mov	r2, r0	@ movhi
 1306 0018 1A80     		strh	r2, [r3]	@ movhi
 251:App/STM32F4-Discovery/modbus_mk.c **** 	/* first send request */
 252:App/STM32F4-Discovery/modbus_mk.c **** 
 253:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t req[REQ_MAX_LEN];
 254:App/STM32F4-Discovery/modbus_mk.c **** 	int req_length; 
 255:App/STM32F4-Discovery/modbus_mk.c **** 	
 256:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 1307              		.loc 1 256 0
 1308 001a 07F11003 		add	r3, r7, #16
 1309 001e 3622     		movs	r2, #54
 1310 0020 1A70     		strb	r2, [r3]
 257:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0x2;
 1311              		.loc 1 257 0
 1312 0022 07F11003 		add	r3, r7, #16
 1313 0026 0222     		movs	r2, #2
 1314 0028 5A70     		strb	r2, [r3, #1]
 258:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 1315              		.loc 1 258 0
 1316 002a 07F10E03 		add	r3, r7, #14
 1317 002e B3F90030 		ldrsh	r3, [r3]
 1318 0032 1B12     		asrs	r3, r3, #8
 1319 0034 9BB2     		uxth	r3, r3
 1320 0036 DAB2     		uxtb	r2, r3
 1321 0038 07F11003 		add	r3, r7, #16
 1322 003c 9A70     		strb	r2, [r3, #2]
 259:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 1323              		.loc 1 259 0
 1324 003e 07F10E03 		add	r3, r7, #14
 1325 0042 1B88     		ldrh	r3, [r3]	@ movhi
 1326 0044 DAB2     		uxtb	r2, r3
 1327 0046 07F11003 		add	r3, r7, #16
 1328 004a DA70     		strb	r2, [r3, #3]
 260:App/STM32F4-Discovery/modbus_mk.c **** 	req[4] = nb >> 8;
 1329              		.loc 1 260 0
 1330 004c 07F10803 		add	r3, r7, #8
 1331 0050 1B68     		ldr	r3, [r3]
 1332 0052 1B12     		asrs	r3, r3, #8
 1333 0054 DAB2     		uxtb	r2, r3
 1334 0056 07F11003 		add	r3, r7, #16
 1335 005a 1A71     		strb	r2, [r3, #4]
 261:App/STM32F4-Discovery/modbus_mk.c **** 	req[5] = nb & 0x00ff; 
 1336              		.loc 1 261 0
 1337 005c 07F10803 		add	r3, r7, #8
 1338 0060 1B68     		ldr	r3, [r3]
 1339 0062 DAB2     		uxtb	r2, r3
 1340 0064 07F11003 		add	r3, r7, #16
 1341 0068 5A71     		strb	r2, [r3, #5]
 262:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 6;
 1342              		.loc 1 262 0
 1343 006a 0623     		movs	r3, #6
 1344 006c C7F81432 		str	r3, [r7, #532]
 263:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 1345              		.loc 1 263 0
 1346 0070 D7F81432 		ldr	r3, [r7, #532]
 1347 0074 9BB2     		uxth	r3, r3
 1348 0076 07F11002 		add	r2, r7, #16
 1349 007a 1046     		mov	r0, r2
 1350 007c 1946     		mov	r1, r3
 1351 007e FFF7FEFF 		bl	crc16
 1352 0082 0346     		mov	r3, r0
 1353 0084 A7F81232 		strh	r3, [r7, #530]	@ movhi
 264:App/STM32F4-Discovery/modbus_mk.c **** 
 265:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 1354              		.loc 1 265 0
 1355 0088 D7F81432 		ldr	r3, [r7, #532]
 1356 008c 5A1C     		adds	r2, r3, #1
 1357 008e C7F81422 		str	r2, [r7, #532]
 1358 0092 B7F81222 		ldrh	r2, [r7, #530]
 1359 0096 120A     		lsrs	r2, r2, #8
 1360 0098 92B2     		uxth	r2, r2
 1361 009a D1B2     		uxtb	r1, r2
 1362 009c 07F11002 		add	r2, r7, #16
 1363 00a0 D154     		strb	r1, [r2, r3]
 266:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff; 
 1364              		.loc 1 266 0
 1365 00a2 D7F81432 		ldr	r3, [r7, #532]
 1366 00a6 5A1C     		adds	r2, r3, #1
 1367 00a8 C7F81422 		str	r2, [r7, #532]
 1368 00ac B7F81222 		ldrh	r2, [r7, #530]	@ movhi
 1369 00b0 D1B2     		uxtb	r1, r2
 1370 00b2 07F11002 		add	r2, r7, #16
 1371 00b6 D154     		strb	r1, [r2, r3]
 267:App/STM32F4-Discovery/modbus_mk.c **** 	
 268:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req, dst, req_length, 6);
 1372              		.loc 1 268 0
 1373 00b8 07F11002 		add	r2, r7, #16
 1374 00bc 3B1D     		adds	r3, r7, #4
 1375 00be 1046     		mov	r0, r2
 1376 00c0 1968     		ldr	r1, [r3]
 1377 00c2 D7F81422 		ldr	r2, [r7, #532]
 1378 00c6 0623     		movs	r3, #6
 1379 00c8 FFF7FEFF 		bl	write_read_modbus
 269:App/STM32F4-Discovery/modbus_mk.c **** 	return modbus_confirmation (req, dst, req_length, 6);
 1380              		.loc 1 269 0
 1381 00cc D7F81432 		ldr	r3, [r7, #532]
 1382 00d0 9BB2     		uxth	r3, r3
 1383 00d2 07F11001 		add	r1, r7, #16
 1384 00d6 3A1D     		adds	r2, r7, #4
 1385 00d8 0846     		mov	r0, r1
 1386 00da 1168     		ldr	r1, [r2]
 1387 00dc 1A46     		mov	r2, r3
 1388 00de 0623     		movs	r3, #6
 1389 00e0 FFF7FEFF 		bl	modbus_confirmation
 1390 00e4 0346     		mov	r3, r0
 1391 00e6 DBB2     		uxtb	r3, r3
 270:App/STM32F4-Discovery/modbus_mk.c **** 
 271:App/STM32F4-Discovery/modbus_mk.c **** }
 1392              		.loc 1 271 0
 1393 00e8 1846     		mov	r0, r3
 1394 00ea 07F50677 		add	r7, r7, #536
 1395 00ee BD46     		mov	sp, r7
 1396              		@ sp needed
 1397 00f0 80BD     		pop	{r7, pc}
 1398              		.cfi_endproc
 1399              	.LFE116:
 1401 00f2 00BF     		.section	.text.modbus_WIB,"ax",%progbits
 1402              		.align	2
 1403              		.global	modbus_WIB
 1404              		.thumb
 1405              		.thumb_func
 1407              	modbus_WIB:
 1408              	.LFB117:
 272:App/STM32F4-Discovery/modbus_mk.c **** 
 273:App/STM32F4-Discovery/modbus_mk.c **** 
 274:App/STM32F4-Discovery/modbus_mk.c **** /* modbus write input bits */
 275:App/STM32F4-Discovery/modbus_mk.c **** uint8_t modbus_WIB( uint16_t address, int nb, uint8_t *src )
 276:App/STM32F4-Discovery/modbus_mk.c **** {
 1409              		.loc 1 276 0
 1410              		.cfi_startproc
 1411              		@ args = 0, pretend = 0, frame = 1072
 1412              		@ frame_needed = 1, uses_anonymous_args = 0
 1413 0000 80B5     		push	{r7, lr}
 1414              	.LCFI21:
 1415              		.cfi_def_cfa_offset 8
 1416              		.cfi_offset 7, -8
 1417              		.cfi_offset 14, -4
 1418 0002 ADF5866D 		sub	sp, sp, #1072
 1419              	.LCFI22:
 1420              		.cfi_def_cfa_offset 1080
 1421 0006 00AF     		add	r7, sp, #0
 1422              	.LCFI23:
 1423              		.cfi_def_cfa_register 7
 1424 0008 07F10803 		add	r3, r7, #8
 1425 000c 1960     		str	r1, [r3]
 1426 000e 3B1D     		adds	r3, r7, #4
 1427 0010 1A60     		str	r2, [r3]
 1428 0012 07F10E03 		add	r3, r7, #14
 1429 0016 0246     		mov	r2, r0	@ movhi
 1430 0018 1A80     		strh	r2, [r3]	@ movhi
 277:App/STM32F4-Discovery/modbus_mk.c **** 	/* first send request */
 278:App/STM32F4-Discovery/modbus_mk.c **** 
 279:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t req[REQ_MAX_LEN];
 280:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t rsp[REQ_MAX_LEN];
 281:App/STM32F4-Discovery/modbus_mk.c **** 	int byte_count; 
 282:App/STM32F4-Discovery/modbus_mk.c **** 	int req_length; 
 283:App/STM32F4-Discovery/modbus_mk.c **** 	int bit_check = 0; 
 1431              		.loc 1 283 0
 1432 001a 0023     		movs	r3, #0
 1433 001c C7F82834 		str	r3, [r7, #1064]
 284:App/STM32F4-Discovery/modbus_mk.c **** 	int pos = 0; 
 1434              		.loc 1 284 0
 1435 0020 0023     		movs	r3, #0
 1436 0022 C7F82434 		str	r3, [r7, #1060]
 285:App/STM32F4-Discovery/modbus_mk.c **** 	
 286:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 1437              		.loc 1 286 0
 1438 0026 07F50573 		add	r3, r7, #532
 1439 002a 3622     		movs	r2, #54
 1440 002c 1A70     		strb	r2, [r3]
 287:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0xF;
 1441              		.loc 1 287 0
 1442 002e 07F50573 		add	r3, r7, #532
 1443 0032 0F22     		movs	r2, #15
 1444 0034 5A70     		strb	r2, [r3, #1]
 288:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 1445              		.loc 1 288 0
 1446 0036 07F10E03 		add	r3, r7, #14
 1447 003a 1B88     		ldrh	r3, [r3]
 1448 003c 1B0A     		lsrs	r3, r3, #8
 1449 003e 9BB2     		uxth	r3, r3
 1450 0040 DAB2     		uxtb	r2, r3
 1451 0042 07F50573 		add	r3, r7, #532
 1452 0046 9A70     		strb	r2, [r3, #2]
 289:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 1453              		.loc 1 289 0
 1454 0048 07F10E03 		add	r3, r7, #14
 1455 004c 1B88     		ldrh	r3, [r3]	@ movhi
 1456 004e DAB2     		uxtb	r2, r3
 1457 0050 07F50573 		add	r3, r7, #532
 1458 0054 DA70     		strb	r2, [r3, #3]
 290:App/STM32F4-Discovery/modbus_mk.c **** 	req[4] = nb >> 8;
 1459              		.loc 1 290 0
 1460 0056 07F10803 		add	r3, r7, #8
 1461 005a 1B68     		ldr	r3, [r3]
 1462 005c 1B12     		asrs	r3, r3, #8
 1463 005e DAB2     		uxtb	r2, r3
 1464 0060 07F50573 		add	r3, r7, #532
 1465 0064 1A71     		strb	r2, [r3, #4]
 291:App/STM32F4-Discovery/modbus_mk.c **** 	req[5] = nb & 0x00ff; 
 1466              		.loc 1 291 0
 1467 0066 07F10803 		add	r3, r7, #8
 1468 006a 1B68     		ldr	r3, [r3]
 1469 006c DAB2     		uxtb	r2, r3
 1470 006e 07F50573 		add	r3, r7, #532
 1471 0072 5A71     		strb	r2, [r3, #5]
 292:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 6; 
 1472              		.loc 1 292 0
 1473 0074 0623     		movs	r3, #6
 1474 0076 C7F82C34 		str	r3, [r7, #1068]
 293:App/STM32F4-Discovery/modbus_mk.c **** 	
 294:App/STM32F4-Discovery/modbus_mk.c ****     	byte_count = (nb / 8) + ((nb % 8) ? 1 : 0);
 1475              		.loc 1 294 0
 1476 007a 07F10803 		add	r3, r7, #8
 1477 007e 1B68     		ldr	r3, [r3]
 1478 0080 002B     		cmp	r3, #0
 1479 0082 00DA     		bge	.L40
 1480 0084 0733     		adds	r3, r3, #7
 1481              	.L40:
 1482 0086 DB10     		asrs	r3, r3, #3
 1483 0088 1A46     		mov	r2, r3
 1484 008a 07F10803 		add	r3, r7, #8
 1485 008e 1B68     		ldr	r3, [r3]
 1486 0090 03F00703 		and	r3, r3, #7
 1487 0094 002B     		cmp	r3, #0
 1488 0096 0CBF     		ite	eq
 1489 0098 0023     		moveq	r3, #0
 1490 009a 0123     		movne	r3, #1
 1491 009c DBB2     		uxtb	r3, r3
 1492 009e 1344     		add	r3, r3, r2
 1493 00a0 C7F81834 		str	r3, [r7, #1048]
 295:App/STM32F4-Discovery/modbus_mk.c ****   	req[req_length++] = byte_count;
 1494              		.loc 1 295 0
 1495 00a4 D7F82C34 		ldr	r3, [r7, #1068]
 1496 00a8 5A1C     		adds	r2, r3, #1
 1497 00aa C7F82C24 		str	r2, [r7, #1068]
 1498 00ae D7F81824 		ldr	r2, [r7, #1048]
 1499 00b2 D1B2     		uxtb	r1, r2
 1500 00b4 07F50572 		add	r2, r7, #532
 1501 00b8 D154     		strb	r1, [r2, r3]
 296:App/STM32F4-Discovery/modbus_mk.c **** 
 297:App/STM32F4-Discovery/modbus_mk.c **** 	int i; 
 298:App/STM32F4-Discovery/modbus_mk.c ****     	for (i = 0; i < byte_count; i++) {
 1502              		.loc 1 298 0
 1503 00ba 0023     		movs	r3, #0
 1504 00bc C7F82034 		str	r3, [r7, #1056]
 1505 00c0 5CE0     		b	.L41
 1506              	.L47:
 1507              	.LBB3:
 299:App/STM32F4-Discovery/modbus_mk.c ****         
 300:App/STM32F4-Discovery/modbus_mk.c **** 		int bit;
 301:App/STM32F4-Discovery/modbus_mk.c **** 		bit = 0x01;
 1508              		.loc 1 301 0
 1509 00c2 0123     		movs	r3, #1
 1510 00c4 C7F81C34 		str	r3, [r7, #1052]
 302:App/STM32F4-Discovery/modbus_mk.c ****         	req[req_length] = 0;
 1511              		.loc 1 302 0
 1512 00c8 07F50572 		add	r2, r7, #532
 1513 00cc D7F82C34 		ldr	r3, [r7, #1068]
 1514 00d0 1344     		add	r3, r3, r2
 1515 00d2 0022     		movs	r2, #0
 1516 00d4 1A70     		strb	r2, [r3]
 303:App/STM32F4-Discovery/modbus_mk.c **** 
 304:App/STM32F4-Discovery/modbus_mk.c ****         	while ((bit & 0xFF) && (bit_check++ < nb)) {
 1517              		.loc 1 304 0
 1518 00d6 38E0     		b	.L42
 1519              	.L46:
 305:App/STM32F4-Discovery/modbus_mk.c ****             		if (src[pos++])
 1520              		.loc 1 305 0
 1521 00d8 D7F82434 		ldr	r3, [r7, #1060]
 1522 00dc 5A1C     		adds	r2, r3, #1
 1523 00de C7F82424 		str	r2, [r7, #1060]
 1524 00e2 3A1D     		adds	r2, r7, #4
 1525 00e4 1268     		ldr	r2, [r2]
 1526 00e6 1344     		add	r3, r3, r2
 1527 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1528 00ea 002B     		cmp	r3, #0
 1529 00ec 13D0     		beq	.L43
 306:App/STM32F4-Discovery/modbus_mk.c ****                 		req[req_length] |= bit;
 1530              		.loc 1 306 0
 1531 00ee 07F50572 		add	r2, r7, #532
 1532 00f2 D7F82C34 		ldr	r3, [r7, #1068]
 1533 00f6 1344     		add	r3, r3, r2
 1534 00f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1535 00fa DAB2     		uxtb	r2, r3
 1536 00fc D7F81C34 		ldr	r3, [r7, #1052]
 1537 0100 DBB2     		uxtb	r3, r3
 1538 0102 1343     		orrs	r3, r3, r2
 1539 0104 DBB2     		uxtb	r3, r3
 1540 0106 DAB2     		uxtb	r2, r3
 1541 0108 07F50571 		add	r1, r7, #532
 1542 010c D7F82C34 		ldr	r3, [r7, #1068]
 1543 0110 0B44     		add	r3, r3, r1
 1544 0112 1A70     		strb	r2, [r3]
 1545 0114 14E0     		b	.L44
 1546              	.L43:
 307:App/STM32F4-Discovery/modbus_mk.c ****             		else
 308:App/STM32F4-Discovery/modbus_mk.c ****                 		req[req_length] &=~ bit;
 1547              		.loc 1 308 0
 1548 0116 07F50572 		add	r2, r7, #532
 1549 011a D7F82C34 		ldr	r3, [r7, #1068]
 1550 011e 1344     		add	r3, r3, r2
 1551 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1552 0122 DAB2     		uxtb	r2, r3
 1553 0124 D7F81C34 		ldr	r3, [r7, #1052]
 1554 0128 DBB2     		uxtb	r3, r3
 1555 012a DB43     		mvns	r3, r3
 1556 012c DBB2     		uxtb	r3, r3
 1557 012e 1340     		ands	r3, r3, r2
 1558 0130 DBB2     		uxtb	r3, r3
 1559 0132 DAB2     		uxtb	r2, r3
 1560 0134 07F50571 		add	r1, r7, #532
 1561 0138 D7F82C34 		ldr	r3, [r7, #1068]
 1562 013c 0B44     		add	r3, r3, r1
 1563 013e 1A70     		strb	r2, [r3]
 1564              	.L44:
 309:App/STM32F4-Discovery/modbus_mk.c **** 
 310:App/STM32F4-Discovery/modbus_mk.c ****             		bit = bit << 1;
 1565              		.loc 1 310 0
 1566 0140 D7F81C34 		ldr	r3, [r7, #1052]
 1567 0144 5B00     		lsls	r3, r3, #1
 1568 0146 C7F81C34 		str	r3, [r7, #1052]
 1569              	.L42:
 304:App/STM32F4-Discovery/modbus_mk.c ****         	while ((bit & 0xFF) && (bit_check++ < nb)) {
 1570              		.loc 1 304 0 discriminator 1
 1571 014a D7F81C34 		ldr	r3, [r7, #1052]
 1572 014e DBB2     		uxtb	r3, r3
 1573 0150 002B     		cmp	r3, #0
 1574 0152 09D0     		beq	.L45
 304:App/STM32F4-Discovery/modbus_mk.c ****         	while ((bit & 0xFF) && (bit_check++ < nb)) {
 1575              		.loc 1 304 0 is_stmt 0 discriminator 2
 1576 0154 D7F82834 		ldr	r3, [r7, #1064]
 1577 0158 5A1C     		adds	r2, r3, #1
 1578 015a C7F82824 		str	r2, [r7, #1064]
 1579 015e 07F10802 		add	r2, r7, #8
 1580 0162 1268     		ldr	r2, [r2]
 1581 0164 9342     		cmp	r3, r2
 1582 0166 B7DB     		blt	.L46
 1583              	.L45:
 311:App/STM32F4-Discovery/modbus_mk.c ****         	}	
 312:App/STM32F4-Discovery/modbus_mk.c ****         	
 313:App/STM32F4-Discovery/modbus_mk.c **** 		req_length++;
 1584              		.loc 1 313 0 is_stmt 1
 1585 0168 D7F82C34 		ldr	r3, [r7, #1068]
 1586 016c 0133     		adds	r3, r3, #1
 1587 016e C7F82C34 		str	r3, [r7, #1068]
 1588              	.LBE3:
 298:App/STM32F4-Discovery/modbus_mk.c ****     	for (i = 0; i < byte_count; i++) {
 1589              		.loc 1 298 0
 1590 0172 D7F82034 		ldr	r3, [r7, #1056]
 1591 0176 0133     		adds	r3, r3, #1
 1592 0178 C7F82034 		str	r3, [r7, #1056]
 1593              	.L41:
 298:App/STM32F4-Discovery/modbus_mk.c ****     	for (i = 0; i < byte_count; i++) {
 1594              		.loc 1 298 0 is_stmt 0 discriminator 1
 1595 017c D7F82024 		ldr	r2, [r7, #1056]
 1596 0180 D7F81834 		ldr	r3, [r7, #1048]
 1597 0184 9A42     		cmp	r2, r3
 1598 0186 9CDB     		blt	.L47
 314:App/STM32F4-Discovery/modbus_mk.c **** 	 }
 315:App/STM32F4-Discovery/modbus_mk.c **** 
 316:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 1599              		.loc 1 316 0 is_stmt 1
 1600 0188 D7F82C34 		ldr	r3, [r7, #1068]
 1601 018c 9BB2     		uxth	r3, r3
 1602 018e 07F50572 		add	r2, r7, #532
 1603 0192 1046     		mov	r0, r2
 1604 0194 1946     		mov	r1, r3
 1605 0196 FFF7FEFF 		bl	crc16
 1606 019a 0346     		mov	r3, r0
 1607 019c A7F81634 		strh	r3, [r7, #1046]	@ movhi
 317:App/STM32F4-Discovery/modbus_mk.c **** 
 318:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 1608              		.loc 1 318 0
 1609 01a0 D7F82C34 		ldr	r3, [r7, #1068]
 1610 01a4 5A1C     		adds	r2, r3, #1
 1611 01a6 C7F82C24 		str	r2, [r7, #1068]
 1612 01aa B7F81624 		ldrh	r2, [r7, #1046]
 1613 01ae 120A     		lsrs	r2, r2, #8
 1614 01b0 92B2     		uxth	r2, r2
 1615 01b2 D1B2     		uxtb	r1, r2
 1616 01b4 07F50572 		add	r2, r7, #532
 1617 01b8 D154     		strb	r1, [r2, r3]
 319:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff; 
 1618              		.loc 1 319 0
 1619 01ba D7F82C34 		ldr	r3, [r7, #1068]
 1620 01be 5A1C     		adds	r2, r3, #1
 1621 01c0 C7F82C24 		str	r2, [r7, #1068]
 1622 01c4 B7F81624 		ldrh	r2, [r7, #1046]	@ movhi
 1623 01c8 D1B2     		uxtb	r1, r2
 1624 01ca 07F50572 		add	r2, r7, #532
 1625 01ce D154     		strb	r1, [r2, r3]
 320:App/STM32F4-Discovery/modbus_mk.c **** 	
 321:App/STM32F4-Discovery/modbus_mk.c **** 	/* write request  to modbus line */
 322:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req,rsp, req_length ,8); 
 1626              		.loc 1 322 0
 1627 01d0 07F50572 		add	r2, r7, #532
 1628 01d4 07F11403 		add	r3, r7, #20
 1629 01d8 1046     		mov	r0, r2
 1630 01da 1946     		mov	r1, r3
 1631 01dc D7F82C24 		ldr	r2, [r7, #1068]
 1632 01e0 0823     		movs	r3, #8
 1633 01e2 FFF7FEFF 		bl	write_read_modbus
 323:App/STM32F4-Discovery/modbus_mk.c **** 	return modbus_confirmation (req, rsp,req_length, 8); 
 1634              		.loc 1 323 0
 1635 01e6 D7F82C34 		ldr	r3, [r7, #1068]
 1636 01ea 9BB2     		uxth	r3, r3
 1637 01ec 07F50571 		add	r1, r7, #532
 1638 01f0 07F11402 		add	r2, r7, #20
 1639 01f4 0846     		mov	r0, r1
 1640 01f6 1146     		mov	r1, r2
 1641 01f8 1A46     		mov	r2, r3
 1642 01fa 0823     		movs	r3, #8
 1643 01fc FFF7FEFF 		bl	modbus_confirmation
 1644 0200 0346     		mov	r3, r0
 1645 0202 DBB2     		uxtb	r3, r3
 324:App/STM32F4-Discovery/modbus_mk.c **** 
 325:App/STM32F4-Discovery/modbus_mk.c **** 	
 326:App/STM32F4-Discovery/modbus_mk.c **** }
 1646              		.loc 1 326 0
 1647 0204 1846     		mov	r0, r3
 1648 0206 07F58667 		add	r7, r7, #1072
 1649 020a BD46     		mov	sp, r7
 1650              		@ sp needed
 1651 020c 80BD     		pop	{r7, pc}
 1652              		.cfi_endproc
 1653              	.LFE117:
 1655 020e 00BF     		.section	.text.modbus_WR,"ax",%progbits
 1656              		.align	2
 1657              		.global	modbus_WR
 1658              		.thumb
 1659              		.thumb_func
 1661              	modbus_WR:
 1662              	.LFB118:
 327:App/STM32F4-Discovery/modbus_mk.c **** 
 328:App/STM32F4-Discovery/modbus_mk.c **** /* Write the values from the array to the registers of the remote device */
 329:App/STM32F4-Discovery/modbus_mk.c **** uint8_t modbus_WR( int address, int nb, const uint16_t *src)
 330:App/STM32F4-Discovery/modbus_mk.c **** {
 1663              		.loc 1 330 0
 1664              		.cfi_startproc
 1665              		@ args = 0, pretend = 0, frame = 1056
 1666              		@ frame_needed = 1, uses_anonymous_args = 0
 1667 0000 80B5     		push	{r7, lr}
 1668              	.LCFI24:
 1669              		.cfi_def_cfa_offset 8
 1670              		.cfi_offset 7, -8
 1671              		.cfi_offset 14, -4
 1672 0002 ADF5846D 		sub	sp, sp, #1056
 1673              	.LCFI25:
 1674              		.cfi_def_cfa_offset 1064
 1675 0006 00AF     		add	r7, sp, #0
 1676              	.LCFI26:
 1677              		.cfi_def_cfa_register 7
 1678 0008 07F10C03 		add	r3, r7, #12
 1679 000c 1860     		str	r0, [r3]
 1680 000e 07F10803 		add	r3, r7, #8
 1681 0012 1960     		str	r1, [r3]
 1682 0014 3B1D     		adds	r3, r7, #4
 1683 0016 1A60     		str	r2, [r3]
 331:App/STM32F4-Discovery/modbus_mk.c **** 	int rc;
 332:App/STM32F4-Discovery/modbus_mk.c **** 	int i;
 333:App/STM32F4-Discovery/modbus_mk.c ****     	int req_length;
 334:App/STM32F4-Discovery/modbus_mk.c ****     	int byte_count;
 335:App/STM32F4-Discovery/modbus_mk.c **** 
 336:App/STM32F4-Discovery/modbus_mk.c ****     	uint8_t req[REQ_MAX_LEN];
 337:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t rsp[REQ_MAX_LEN];
 338:App/STM32F4-Discovery/modbus_mk.c **** 
 339:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 1684              		.loc 1 339 0
 1685 0018 07F50473 		add	r3, r7, #528
 1686 001c 3622     		movs	r2, #54
 1687 001e 1A70     		strb	r2, [r3]
 340:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0x10;
 1688              		.loc 1 340 0
 1689 0020 07F50473 		add	r3, r7, #528
 1690 0024 1022     		movs	r2, #16
 1691 0026 5A70     		strb	r2, [r3, #1]
 341:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 1692              		.loc 1 341 0
 1693 0028 07F10C03 		add	r3, r7, #12
 1694 002c 1B68     		ldr	r3, [r3]
 1695 002e 1B12     		asrs	r3, r3, #8
 1696 0030 DAB2     		uxtb	r2, r3
 1697 0032 07F50473 		add	r3, r7, #528
 1698 0036 9A70     		strb	r2, [r3, #2]
 342:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 1699              		.loc 1 342 0
 1700 0038 07F10C03 		add	r3, r7, #12
 1701 003c 1B68     		ldr	r3, [r3]
 1702 003e DAB2     		uxtb	r2, r3
 1703 0040 07F50473 		add	r3, r7, #528
 1704 0044 DA70     		strb	r2, [r3, #3]
 343:App/STM32F4-Discovery/modbus_mk.c **** 	req[4] = nb >> 8;
 1705              		.loc 1 343 0
 1706 0046 07F10803 		add	r3, r7, #8
 1707 004a 1B68     		ldr	r3, [r3]
 1708 004c 1B12     		asrs	r3, r3, #8
 1709 004e DAB2     		uxtb	r2, r3
 1710 0050 07F50473 		add	r3, r7, #528
 1711 0054 1A71     		strb	r2, [r3, #4]
 344:App/STM32F4-Discovery/modbus_mk.c **** 	req[5] = nb & 0x00ff; 
 1712              		.loc 1 344 0
 1713 0056 07F10803 		add	r3, r7, #8
 1714 005a 1B68     		ldr	r3, [r3]
 1715 005c DAB2     		uxtb	r2, r3
 1716 005e 07F50473 		add	r3, r7, #528
 1717 0062 5A71     		strb	r2, [r3, #5]
 345:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 6; 
 1718              		.loc 1 345 0
 1719 0064 0623     		movs	r3, #6
 1720 0066 C7F81834 		str	r3, [r7, #1048]
 346:App/STM32F4-Discovery/modbus_mk.c **** 	
 347:App/STM32F4-Discovery/modbus_mk.c ****    	byte_count = nb * 2;
 1721              		.loc 1 347 0
 1722 006a 07F10803 		add	r3, r7, #8
 1723 006e 1B68     		ldr	r3, [r3]
 1724 0070 5B00     		lsls	r3, r3, #1
 1725 0072 C7F81434 		str	r3, [r7, #1044]
 348:App/STM32F4-Discovery/modbus_mk.c ****     	req[req_length++] = byte_count;
 1726              		.loc 1 348 0
 1727 0076 D7F81834 		ldr	r3, [r7, #1048]
 1728 007a 5A1C     		adds	r2, r3, #1
 1729 007c C7F81824 		str	r2, [r7, #1048]
 1730 0080 D7F81424 		ldr	r2, [r7, #1044]
 1731 0084 D1B2     		uxtb	r1, r2
 1732 0086 07F50472 		add	r2, r7, #528
 1733 008a D154     		strb	r1, [r2, r3]
 349:App/STM32F4-Discovery/modbus_mk.c **** 
 350:App/STM32F4-Discovery/modbus_mk.c ****     for (i = 0; i < nb; i++) {
 1734              		.loc 1 350 0
 1735 008c 0023     		movs	r3, #0
 1736 008e C7F81C34 		str	r3, [r7, #1052]
 1737 0092 26E0     		b	.L50
 1738              	.L51:
 351:App/STM32F4-Discovery/modbus_mk.c **** 		req[req_length++] = src[i] >> 8;
 1739              		.loc 1 351 0 discriminator 2
 1740 0094 D7F81834 		ldr	r3, [r7, #1048]
 1741 0098 5A1C     		adds	r2, r3, #1
 1742 009a C7F81824 		str	r2, [r7, #1048]
 1743 009e D7F81C24 		ldr	r2, [r7, #1052]
 1744 00a2 5200     		lsls	r2, r2, #1
 1745 00a4 391D     		adds	r1, r7, #4
 1746 00a6 0968     		ldr	r1, [r1]
 1747 00a8 0A44     		add	r2, r2, r1
 1748 00aa 1288     		ldrh	r2, [r2]
 1749 00ac 120A     		lsrs	r2, r2, #8
 1750 00ae 92B2     		uxth	r2, r2
 1751 00b0 D1B2     		uxtb	r1, r2
 1752 00b2 07F50472 		add	r2, r7, #528
 1753 00b6 D154     		strb	r1, [r2, r3]
 352:App/STM32F4-Discovery/modbus_mk.c ****         	req[req_length++] = src[i] & 0x00ff;
 1754              		.loc 1 352 0 discriminator 2
 1755 00b8 D7F81834 		ldr	r3, [r7, #1048]
 1756 00bc 5A1C     		adds	r2, r3, #1
 1757 00be C7F81824 		str	r2, [r7, #1048]
 1758 00c2 D7F81C24 		ldr	r2, [r7, #1052]
 1759 00c6 5200     		lsls	r2, r2, #1
 1760 00c8 391D     		adds	r1, r7, #4
 1761 00ca 0968     		ldr	r1, [r1]
 1762 00cc 0A44     		add	r2, r2, r1
 1763 00ce 1288     		ldrh	r2, [r2]
 1764 00d0 D1B2     		uxtb	r1, r2
 1765 00d2 07F50472 		add	r2, r7, #528
 1766 00d6 D154     		strb	r1, [r2, r3]
 350:App/STM32F4-Discovery/modbus_mk.c ****     for (i = 0; i < nb; i++) {
 1767              		.loc 1 350 0 discriminator 2
 1768 00d8 D7F81C34 		ldr	r3, [r7, #1052]
 1769 00dc 0133     		adds	r3, r3, #1
 1770 00de C7F81C34 		str	r3, [r7, #1052]
 1771              	.L50:
 350:App/STM32F4-Discovery/modbus_mk.c ****     for (i = 0; i < nb; i++) {
 1772              		.loc 1 350 0 is_stmt 0 discriminator 1
 1773 00e2 07F10803 		add	r3, r7, #8
 1774 00e6 D7F81C24 		ldr	r2, [r7, #1052]
 1775 00ea 1B68     		ldr	r3, [r3]
 1776 00ec 9A42     		cmp	r2, r3
 1777 00ee D1DB     		blt	.L51
 353:App/STM32F4-Discovery/modbus_mk.c ****     	}
 354:App/STM32F4-Discovery/modbus_mk.c **** 
 355:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 1778              		.loc 1 355 0 is_stmt 1
 1779 00f0 D7F81834 		ldr	r3, [r7, #1048]
 1780 00f4 9BB2     		uxth	r3, r3
 1781 00f6 07F50472 		add	r2, r7, #528
 1782 00fa 1046     		mov	r0, r2
 1783 00fc 1946     		mov	r1, r3
 1784 00fe FFF7FEFF 		bl	crc16
 1785 0102 0346     		mov	r3, r0
 1786 0104 A7F81234 		strh	r3, [r7, #1042]	@ movhi
 356:App/STM32F4-Discovery/modbus_mk.c **** 
 357:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 1787              		.loc 1 357 0
 1788 0108 D7F81834 		ldr	r3, [r7, #1048]
 1789 010c 5A1C     		adds	r2, r3, #1
 1790 010e C7F81824 		str	r2, [r7, #1048]
 1791 0112 B7F81224 		ldrh	r2, [r7, #1042]
 1792 0116 120A     		lsrs	r2, r2, #8
 1793 0118 92B2     		uxth	r2, r2
 1794 011a D1B2     		uxtb	r1, r2
 1795 011c 07F50472 		add	r2, r7, #528
 1796 0120 D154     		strb	r1, [r2, r3]
 358:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff;
 1797              		.loc 1 358 0
 1798 0122 D7F81834 		ldr	r3, [r7, #1048]
 1799 0126 5A1C     		adds	r2, r3, #1
 1800 0128 C7F81824 		str	r2, [r7, #1048]
 1801 012c B7F81224 		ldrh	r2, [r7, #1042]	@ movhi
 1802 0130 D1B2     		uxtb	r1, r2
 1803 0132 07F50472 		add	r2, r7, #528
 1804 0136 D154     		strb	r1, [r2, r3]
 359:App/STM32F4-Discovery/modbus_mk.c **** 
 360:App/STM32F4-Discovery/modbus_mk.c **** 	/* write request  to modbus line */
 361:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req, rsp, req_length, 8); 
 1805              		.loc 1 361 0
 1806 0138 07F50472 		add	r2, r7, #528
 1807 013c 07F11003 		add	r3, r7, #16
 1808 0140 1046     		mov	r0, r2
 1809 0142 1946     		mov	r1, r3
 1810 0144 D7F81824 		ldr	r2, [r7, #1048]
 1811 0148 0823     		movs	r3, #8
 1812 014a FFF7FEFF 		bl	write_read_modbus
 362:App/STM32F4-Discovery/modbus_mk.c **** 	return modbus_confirmation (req, rsp,req_length, 8); 
 1813              		.loc 1 362 0
 1814 014e D7F81834 		ldr	r3, [r7, #1048]
 1815 0152 9BB2     		uxth	r3, r3
 1816 0154 07F50471 		add	r1, r7, #528
 1817 0158 07F11002 		add	r2, r7, #16
 1818 015c 0846     		mov	r0, r1
 1819 015e 1146     		mov	r1, r2
 1820 0160 1A46     		mov	r2, r3
 1821 0162 0823     		movs	r3, #8
 1822 0164 FFF7FEFF 		bl	modbus_confirmation
 1823 0168 0346     		mov	r3, r0
 1824 016a DBB2     		uxtb	r3, r3
 363:App/STM32F4-Discovery/modbus_mk.c **** 
 364:App/STM32F4-Discovery/modbus_mk.c **** 
 365:App/STM32F4-Discovery/modbus_mk.c **** 
 366:App/STM32F4-Discovery/modbus_mk.c **** }
 1825              		.loc 1 366 0
 1826 016c 1846     		mov	r0, r3
 1827 016e 07F58467 		add	r7, r7, #1056
 1828 0172 BD46     		mov	sp, r7
 1829              		@ sp needed
 1830 0174 80BD     		pop	{r7, pc}
 1831              		.cfi_endproc
 1832              	.LFE118:
 1834 0176 00BF     		.section	.text.modbus_WSR,"ax",%progbits
 1835              		.align	2
 1836              		.global	modbus_WSR
 1837              		.thumb
 1838              		.thumb_func
 1840              	modbus_WSR:
 1841              	.LFB119:
 367:App/STM32F4-Discovery/modbus_mk.c **** 
 368:App/STM32F4-Discovery/modbus_mk.c **** /* Write the values from the array to the registers of the remote device */
 369:App/STM32F4-Discovery/modbus_mk.c **** uint8_t modbus_WSR( int address, const uint16_t src)
 370:App/STM32F4-Discovery/modbus_mk.c **** {
 1842              		.loc 1 370 0
 1843              		.cfi_startproc
 1844              		@ args = 0, pretend = 0, frame = 1048
 1845              		@ frame_needed = 1, uses_anonymous_args = 0
 1846 0000 80B5     		push	{r7, lr}
 1847              	.LCFI27:
 1848              		.cfi_def_cfa_offset 8
 1849              		.cfi_offset 7, -8
 1850              		.cfi_offset 14, -4
 1851 0002 ADF5836D 		sub	sp, sp, #1048
 1852              	.LCFI28:
 1853              		.cfi_def_cfa_offset 1056
 1854 0006 00AF     		add	r7, sp, #0
 1855              	.LCFI29:
 1856              		.cfi_def_cfa_register 7
 1857 0008 3B1D     		adds	r3, r7, #4
 1858 000a 1860     		str	r0, [r3]
 1859 000c 0A46     		mov	r2, r1
 1860 000e BB1C     		adds	r3, r7, #2
 1861 0010 1A80     		strh	r2, [r3]	@ movhi
 371:App/STM32F4-Discovery/modbus_mk.c **** 	int nb = 1; 
 1862              		.loc 1 371 0
 1863 0012 0123     		movs	r3, #1
 1864 0014 C7F81434 		str	r3, [r7, #1044]
 372:App/STM32F4-Discovery/modbus_mk.c **** 	int rc;
 373:App/STM32F4-Discovery/modbus_mk.c **** 	int i;
 374:App/STM32F4-Discovery/modbus_mk.c ****     	int req_length;
 375:App/STM32F4-Discovery/modbus_mk.c ****     	int byte_count;
 376:App/STM32F4-Discovery/modbus_mk.c **** 
 377:App/STM32F4-Discovery/modbus_mk.c ****     	uint8_t req[REQ_MAX_LEN];
 378:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t rsp[REQ_MAX_LEN];
 379:App/STM32F4-Discovery/modbus_mk.c **** 
 380:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 1865              		.loc 1 380 0
 1866 0018 07F50273 		add	r3, r7, #520
 1867 001c 3622     		movs	r2, #54
 1868 001e 1A70     		strb	r2, [r3]
 381:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0x6;
 1869              		.loc 1 381 0
 1870 0020 07F50273 		add	r3, r7, #520
 1871 0024 0622     		movs	r2, #6
 1872 0026 5A70     		strb	r2, [r3, #1]
 382:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 1873              		.loc 1 382 0
 1874 0028 3B1D     		adds	r3, r7, #4
 1875 002a 1B68     		ldr	r3, [r3]
 1876 002c 1B12     		asrs	r3, r3, #8
 1877 002e DAB2     		uxtb	r2, r3
 1878 0030 07F50273 		add	r3, r7, #520
 1879 0034 9A70     		strb	r2, [r3, #2]
 383:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 1880              		.loc 1 383 0
 1881 0036 3B1D     		adds	r3, r7, #4
 1882 0038 1B68     		ldr	r3, [r3]
 1883 003a DAB2     		uxtb	r2, r3
 1884 003c 07F50273 		add	r3, r7, #520
 1885 0040 DA70     		strb	r2, [r3, #3]
 384:App/STM32F4-Discovery/modbus_mk.c **** //	req[4] = nb >> 8;
 385:App/STM32F4-Discovery/modbus_mk.c **** //	req[5] = nb & 0x00ff; 
 386:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 4; 
 1886              		.loc 1 386 0
 1887 0042 0423     		movs	r3, #4
 1888 0044 C7F81034 		str	r3, [r7, #1040]
 387:App/STM32F4-Discovery/modbus_mk.c **** 	
 388:App/STM32F4-Discovery/modbus_mk.c ****    	byte_count = nb * 2;
 1889              		.loc 1 388 0
 1890 0048 D7F81434 		ldr	r3, [r7, #1044]
 1891 004c 5B00     		lsls	r3, r3, #1
 1892 004e C7F80C34 		str	r3, [r7, #1036]
 389:App/STM32F4-Discovery/modbus_mk.c ****     	req[req_length++] = byte_count;
 1893              		.loc 1 389 0
 1894 0052 D7F81034 		ldr	r3, [r7, #1040]
 1895 0056 5A1C     		adds	r2, r3, #1
 1896 0058 C7F81024 		str	r2, [r7, #1040]
 1897 005c D7F80C24 		ldr	r2, [r7, #1036]
 1898 0060 D1B2     		uxtb	r1, r2
 1899 0062 07F50272 		add	r2, r7, #520
 1900 0066 D154     		strb	r1, [r2, r3]
 390:App/STM32F4-Discovery/modbus_mk.c **** 
 391:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = src >> 8;
 1901              		.loc 1 391 0
 1902 0068 D7F81034 		ldr	r3, [r7, #1040]
 1903 006c 5A1C     		adds	r2, r3, #1
 1904 006e C7F81024 		str	r2, [r7, #1040]
 1905 0072 BA1C     		adds	r2, r7, #2
 1906 0074 1288     		ldrh	r2, [r2]
 1907 0076 120A     		lsrs	r2, r2, #8
 1908 0078 92B2     		uxth	r2, r2
 1909 007a D1B2     		uxtb	r1, r2
 1910 007c 07F50272 		add	r2, r7, #520
 1911 0080 D154     		strb	r1, [r2, r3]
 392:App/STM32F4-Discovery/modbus_mk.c ****        	req[req_length++] = src & 0x00ff;
 1912              		.loc 1 392 0
 1913 0082 D7F81034 		ldr	r3, [r7, #1040]
 1914 0086 5A1C     		adds	r2, r3, #1
 1915 0088 C7F81024 		str	r2, [r7, #1040]
 1916 008c BA1C     		adds	r2, r7, #2
 1917 008e 1288     		ldrh	r2, [r2]	@ movhi
 1918 0090 D1B2     		uxtb	r1, r2
 1919 0092 07F50272 		add	r2, r7, #520
 1920 0096 D154     		strb	r1, [r2, r3]
 393:App/STM32F4-Discovery/modbus_mk.c ****     	
 394:App/STM32F4-Discovery/modbus_mk.c **** 
 395:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 1921              		.loc 1 395 0
 1922 0098 D7F81034 		ldr	r3, [r7, #1040]
 1923 009c 9BB2     		uxth	r3, r3
 1924 009e 07F50272 		add	r2, r7, #520
 1925 00a2 1046     		mov	r0, r2
 1926 00a4 1946     		mov	r1, r3
 1927 00a6 FFF7FEFF 		bl	crc16
 1928 00aa 0346     		mov	r3, r0
 1929 00ac A7F80A34 		strh	r3, [r7, #1034]	@ movhi
 396:App/STM32F4-Discovery/modbus_mk.c **** 
 397:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 1930              		.loc 1 397 0
 1931 00b0 D7F81034 		ldr	r3, [r7, #1040]
 1932 00b4 5A1C     		adds	r2, r3, #1
 1933 00b6 C7F81024 		str	r2, [r7, #1040]
 1934 00ba B7F80A24 		ldrh	r2, [r7, #1034]
 1935 00be 120A     		lsrs	r2, r2, #8
 1936 00c0 92B2     		uxth	r2, r2
 1937 00c2 D1B2     		uxtb	r1, r2
 1938 00c4 07F50272 		add	r2, r7, #520
 1939 00c8 D154     		strb	r1, [r2, r3]
 398:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff;
 1940              		.loc 1 398 0
 1941 00ca D7F81034 		ldr	r3, [r7, #1040]
 1942 00ce 5A1C     		adds	r2, r3, #1
 1943 00d0 C7F81024 		str	r2, [r7, #1040]
 1944 00d4 B7F80A24 		ldrh	r2, [r7, #1034]	@ movhi
 1945 00d8 D1B2     		uxtb	r1, r2
 1946 00da 07F50272 		add	r2, r7, #520
 1947 00de D154     		strb	r1, [r2, r3]
 399:App/STM32F4-Discovery/modbus_mk.c **** 
 400:App/STM32F4-Discovery/modbus_mk.c **** 	/* write request  to modbus line */
 401:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req, rsp, req_length, 5); 
 1948              		.loc 1 401 0
 1949 00e0 07F50272 		add	r2, r7, #520
 1950 00e4 07F10803 		add	r3, r7, #8
 1951 00e8 1046     		mov	r0, r2
 1952 00ea 1946     		mov	r1, r3
 1953 00ec D7F81024 		ldr	r2, [r7, #1040]
 1954 00f0 0523     		movs	r3, #5
 1955 00f2 FFF7FEFF 		bl	write_read_modbus
 402:App/STM32F4-Discovery/modbus_mk.c **** 	return modbus_confirmation (req, rsp,req_length, 5); 
 1956              		.loc 1 402 0
 1957 00f6 D7F81034 		ldr	r3, [r7, #1040]
 1958 00fa 9BB2     		uxth	r3, r3
 1959 00fc 07F50271 		add	r1, r7, #520
 1960 0100 07F10802 		add	r2, r7, #8
 1961 0104 0846     		mov	r0, r1
 1962 0106 1146     		mov	r1, r2
 1963 0108 1A46     		mov	r2, r3
 1964 010a 0523     		movs	r3, #5
 1965 010c FFF7FEFF 		bl	modbus_confirmation
 1966 0110 0346     		mov	r3, r0
 1967 0112 DBB2     		uxtb	r3, r3
 403:App/STM32F4-Discovery/modbus_mk.c **** 
 404:App/STM32F4-Discovery/modbus_mk.c **** 
 405:App/STM32F4-Discovery/modbus_mk.c **** 
 406:App/STM32F4-Discovery/modbus_mk.c **** }
 1968              		.loc 1 406 0
 1969 0114 1846     		mov	r0, r3
 1970 0116 07F58367 		add	r7, r7, #1048
 1971 011a BD46     		mov	sp, r7
 1972              		@ sp needed
 1973 011c 80BD     		pop	{r7, pc}
 1974              		.cfi_endproc
 1975              	.LFE119:
 1977 011e 00BF     		.section	.text.modbus_RR,"ax",%progbits
 1978              		.align	2
 1979              		.global	modbus_RR
 1980              		.thumb
 1981              		.thumb_func
 1983              	modbus_RR:
 1984              	.LFB120:
 407:App/STM32F4-Discovery/modbus_mk.c **** 
 408:App/STM32F4-Discovery/modbus_mk.c **** 
 409:App/STM32F4-Discovery/modbus_mk.c **** /* Read the values from the array to the registers of the remote device */
 410:App/STM32F4-Discovery/modbus_mk.c **** uint8_t modbus_RR( int address, int nb, uint16_t *src)
 411:App/STM32F4-Discovery/modbus_mk.c **** {
 1985              		.loc 1 411 0
 1986              		.cfi_startproc
 1987              		@ args = 0, pretend = 0, frame = 1064
 1988              		@ frame_needed = 1, uses_anonymous_args = 0
 1989 0000 80B5     		push	{r7, lr}
 1990              	.LCFI30:
 1991              		.cfi_def_cfa_offset 8
 1992              		.cfi_offset 7, -8
 1993              		.cfi_offset 14, -4
 1994 0002 ADF5856D 		sub	sp, sp, #1064
 1995              	.LCFI31:
 1996              		.cfi_def_cfa_offset 1072
 1997 0006 00AF     		add	r7, sp, #0
 1998              	.LCFI32:
 1999              		.cfi_def_cfa_register 7
 2000 0008 07F10C03 		add	r3, r7, #12
 2001 000c 1860     		str	r0, [r3]
 2002 000e 07F10803 		add	r3, r7, #8
 2003 0012 1960     		str	r1, [r3]
 2004 0014 3B1D     		adds	r3, r7, #4
 2005 0016 1A60     		str	r2, [r3]
 412:App/STM32F4-Discovery/modbus_mk.c ****     	int rc;
 413:App/STM32F4-Discovery/modbus_mk.c ****     	int i;
 414:App/STM32F4-Discovery/modbus_mk.c ****     	int req_length;
 415:App/STM32F4-Discovery/modbus_mk.c **** 	int byte_count;
 416:App/STM32F4-Discovery/modbus_mk.c ****     	uint8_t req[REQ_MAX_LEN];
 417:App/STM32F4-Discovery/modbus_mk.c ****   	uint8_t rsp[REQ_MAX_LEN];
 418:App/STM32F4-Discovery/modbus_mk.c **** 
 419:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 2006              		.loc 1 419 0
 2007 0018 07F50573 		add	r3, r7, #532
 2008 001c 3622     		movs	r2, #54
 2009 001e 1A70     		strb	r2, [r3]
 420:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0x4;
 2010              		.loc 1 420 0
 2011 0020 07F50573 		add	r3, r7, #532
 2012 0024 0422     		movs	r2, #4
 2013 0026 5A70     		strb	r2, [r3, #1]
 421:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 2014              		.loc 1 421 0
 2015 0028 07F10C03 		add	r3, r7, #12
 2016 002c 1B68     		ldr	r3, [r3]
 2017 002e 1B12     		asrs	r3, r3, #8
 2018 0030 DAB2     		uxtb	r2, r3
 2019 0032 07F50573 		add	r3, r7, #532
 2020 0036 9A70     		strb	r2, [r3, #2]
 422:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 2021              		.loc 1 422 0
 2022 0038 07F10C03 		add	r3, r7, #12
 2023 003c 1B68     		ldr	r3, [r3]
 2024 003e DAB2     		uxtb	r2, r3
 2025 0040 07F50573 		add	r3, r7, #532
 2026 0044 DA70     		strb	r2, [r3, #3]
 423:App/STM32F4-Discovery/modbus_mk.c **** 	req[4] = nb >> 8;
 2027              		.loc 1 423 0
 2028 0046 07F10803 		add	r3, r7, #8
 2029 004a 1B68     		ldr	r3, [r3]
 2030 004c 1B12     		asrs	r3, r3, #8
 2031 004e DAB2     		uxtb	r2, r3
 2032 0050 07F50573 		add	r3, r7, #532
 2033 0054 1A71     		strb	r2, [r3, #4]
 424:App/STM32F4-Discovery/modbus_mk.c **** 	req[5] = nb & 0x00ff; 
 2034              		.loc 1 424 0
 2035 0056 07F10803 		add	r3, r7, #8
 2036 005a 1B68     		ldr	r3, [r3]
 2037 005c DAB2     		uxtb	r2, r3
 2038 005e 07F50573 		add	r3, r7, #532
 2039 0062 5A71     		strb	r2, [r3, #5]
 425:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 6; 
 2040              		.loc 1 425 0
 2041 0064 0623     		movs	r3, #6
 2042 0066 C7F82034 		str	r3, [r7, #1056]
 426:App/STM32F4-Discovery/modbus_mk.c ****    	
 427:App/STM32F4-Discovery/modbus_mk.c **** 	byte_count = nb * 2;
 2043              		.loc 1 427 0
 2044 006a 07F10803 		add	r3, r7, #8
 2045 006e 1B68     		ldr	r3, [r3]
 2046 0070 5B00     		lsls	r3, r3, #1
 2047 0072 C7F81C34 		str	r3, [r7, #1052]
 428:App/STM32F4-Discovery/modbus_mk.c ****     	req[req_length++] = byte_count;
 2048              		.loc 1 428 0
 2049 0076 D7F82034 		ldr	r3, [r7, #1056]
 2050 007a 5A1C     		adds	r2, r3, #1
 2051 007c C7F82024 		str	r2, [r7, #1056]
 2052 0080 D7F81C24 		ldr	r2, [r7, #1052]
 2053 0084 D1B2     		uxtb	r1, r2
 2054 0086 07F50572 		add	r2, r7, #532
 2055 008a D154     		strb	r1, [r2, r3]
 429:App/STM32F4-Discovery/modbus_mk.c **** 	
 430:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 2056              		.loc 1 430 0
 2057 008c D7F82034 		ldr	r3, [r7, #1056]
 2058 0090 9BB2     		uxth	r3, r3
 2059 0092 07F50572 		add	r2, r7, #532
 2060 0096 1046     		mov	r0, r2
 2061 0098 1946     		mov	r1, r3
 2062 009a FFF7FEFF 		bl	crc16
 2063 009e 0346     		mov	r3, r0
 2064 00a0 A7F81A34 		strh	r3, [r7, #1050]	@ movhi
 431:App/STM32F4-Discovery/modbus_mk.c **** 
 432:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 2065              		.loc 1 432 0
 2066 00a4 D7F82034 		ldr	r3, [r7, #1056]
 2067 00a8 5A1C     		adds	r2, r3, #1
 2068 00aa C7F82024 		str	r2, [r7, #1056]
 2069 00ae B7F81A24 		ldrh	r2, [r7, #1050]
 2070 00b2 120A     		lsrs	r2, r2, #8
 2071 00b4 92B2     		uxth	r2, r2
 2072 00b6 D1B2     		uxtb	r1, r2
 2073 00b8 07F50572 		add	r2, r7, #532
 2074 00bc D154     		strb	r1, [r2, r3]
 433:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff; 
 2075              		.loc 1 433 0
 2076 00be D7F82034 		ldr	r3, [r7, #1056]
 2077 00c2 5A1C     		adds	r2, r3, #1
 2078 00c4 C7F82024 		str	r2, [r7, #1056]
 2079 00c8 B7F81A24 		ldrh	r2, [r7, #1050]	@ movhi
 2080 00cc D1B2     		uxtb	r1, r2
 2081 00ce 07F50572 		add	r2, r7, #532
 2082 00d2 D154     		strb	r1, [r2, r3]
 434:App/STM32F4-Discovery/modbus_mk.c **** 	
 435:App/STM32F4-Discovery/modbus_mk.c **** 	/* write request  to modbus line */
 436:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req, rsp,  req_length, nb*2 + 5); 
 2083              		.loc 1 436 0
 2084 00d4 07F10803 		add	r3, r7, #8
 2085 00d8 1B68     		ldr	r3, [r3]
 2086 00da 5B00     		lsls	r3, r3, #1
 2087 00dc 0533     		adds	r3, r3, #5
 2088 00de 07F50571 		add	r1, r7, #532
 2089 00e2 07F11402 		add	r2, r7, #20
 2090 00e6 0846     		mov	r0, r1
 2091 00e8 1146     		mov	r1, r2
 2092 00ea D7F82024 		ldr	r2, [r7, #1056]
 2093 00ee FFF7FEFF 		bl	write_read_modbus
 437:App/STM32F4-Discovery/modbus_mk.c **** 	
 438:App/STM32F4-Discovery/modbus_mk.c **** 	int offset = 2;
 2094              		.loc 1 438 0
 2095 00f2 0223     		movs	r3, #2
 2096 00f4 C7F81434 		str	r3, [r7, #1044]
 439:App/STM32F4-Discovery/modbus_mk.c **** 	
 440:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < nb; i++) {
 2097              		.loc 1 440 0
 2098 00f8 0023     		movs	r3, #0
 2099 00fa C7F82434 		str	r3, [r7, #1060]
 2100 00fe 24E0     		b	.L56
 2101              	.L57:
 441:App/STM32F4-Discovery/modbus_mk.c ****             /* shift reg hi_byte to temp OR with lo_byte */
 442:App/STM32F4-Discovery/modbus_mk.c ****             src[i] = (rsp[offset + 1 + (i << 1)] << 8) |
 2102              		.loc 1 442 0 discriminator 2
 2103 0100 D7F82434 		ldr	r3, [r7, #1060]
 2104 0104 5B00     		lsls	r3, r3, #1
 2105 0106 3A1D     		adds	r2, r7, #4
 2106 0108 1268     		ldr	r2, [r2]
 2107 010a 1344     		add	r3, r3, r2
 2108 010c D7F81424 		ldr	r2, [r7, #1044]
 2109 0110 511C     		adds	r1, r2, #1
 2110 0112 D7F82424 		ldr	r2, [r7, #1060]
 2111 0116 5200     		lsls	r2, r2, #1
 2112 0118 0A44     		add	r2, r2, r1
 2113 011a 07F11401 		add	r1, r7, #20
 2114 011e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 2115 0120 1202     		lsls	r2, r2, #8
 2116 0122 91B2     		uxth	r1, r2
 443:App/STM32F4-Discovery/modbus_mk.c ****                 rsp[offset + 2 + (i << 1)];
 2117              		.loc 1 443 0 discriminator 2
 2118 0124 D7F81424 		ldr	r2, [r7, #1044]
 2119 0128 901C     		adds	r0, r2, #2
 2120 012a D7F82424 		ldr	r2, [r7, #1060]
 2121 012e 5200     		lsls	r2, r2, #1
 2122 0130 0244     		add	r2, r2, r0
 2123 0132 07F11400 		add	r0, r7, #20
 2124 0136 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 442:App/STM32F4-Discovery/modbus_mk.c ****             src[i] = (rsp[offset + 1 + (i << 1)] << 8) |
 2125              		.loc 1 442 0 discriminator 2
 2126 0138 0A43     		orrs	r2, r2, r1
 2127 013a 92B2     		uxth	r2, r2
 2128 013c 92B2     		uxth	r2, r2
 2129 013e 1A80     		strh	r2, [r3]	@ movhi
 440:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < nb; i++) {
 2130              		.loc 1 440 0 discriminator 2
 2131 0140 D7F82434 		ldr	r3, [r7, #1060]
 2132 0144 0133     		adds	r3, r3, #1
 2133 0146 C7F82434 		str	r3, [r7, #1060]
 2134              	.L56:
 440:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < nb; i++) {
 2135              		.loc 1 440 0 is_stmt 0 discriminator 1
 2136 014a 07F10803 		add	r3, r7, #8
 2137 014e D7F82424 		ldr	r2, [r7, #1060]
 2138 0152 1B68     		ldr	r3, [r3]
 2139 0154 9A42     		cmp	r2, r3
 2140 0156 D3DB     		blt	.L57
 444:App/STM32F4-Discovery/modbus_mk.c **** 		
 445:App/STM32F4-Discovery/modbus_mk.c ****         }
 446:App/STM32F4-Discovery/modbus_mk.c **** 
 447:App/STM32F4-Discovery/modbus_mk.c **** //	for (i =0; i < nb; i++ ){ t_printf("[%d] ", src[i]); }
 448:App/STM32F4-Discovery/modbus_mk.c **** //	t_printf("\n");
 449:App/STM32F4-Discovery/modbus_mk.c **** 
 450:App/STM32F4-Discovery/modbus_mk.c **** 	
 451:App/STM32F4-Discovery/modbus_mk.c **** 
 452:App/STM32F4-Discovery/modbus_mk.c **** 	return modbus_confirmation (req, rsp,req_length, nb*2 + 5); 
 2141              		.loc 1 452 0 is_stmt 1
 2142 0158 D7F82034 		ldr	r3, [r7, #1056]
 2143 015c 9AB2     		uxth	r2, r3
 2144 015e 07F10803 		add	r3, r7, #8
 2145 0162 1B68     		ldr	r3, [r3]
 2146 0164 9BB2     		uxth	r3, r3
 2147 0166 5B00     		lsls	r3, r3, #1
 2148 0168 9BB2     		uxth	r3, r3
 2149 016a 0533     		adds	r3, r3, #5
 2150 016c 9BB2     		uxth	r3, r3
 2151 016e 07F50570 		add	r0, r7, #532
 2152 0172 07F11401 		add	r1, r7, #20
 2153 0176 FFF7FEFF 		bl	modbus_confirmation
 2154 017a 0346     		mov	r3, r0
 2155 017c DBB2     		uxtb	r3, r3
 453:App/STM32F4-Discovery/modbus_mk.c **** 
 454:App/STM32F4-Discovery/modbus_mk.c **** 
 455:App/STM32F4-Discovery/modbus_mk.c **** }
 2156              		.loc 1 455 0
 2157 017e 1846     		mov	r0, r3
 2158 0180 07F58567 		add	r7, r7, #1064
 2159 0184 BD46     		mov	sp, r7
 2160              		@ sp needed
 2161 0186 80BD     		pop	{r7, pc}
 2162              		.cfi_endproc
 2163              	.LFE120:
 2165              		.section	.rodata
 2166 008a 0000     		.align	2
 2167              	.LC7:
 2168 008c 48423A20 		.ascii	"HB: %d\012\012\000"
 2168      25640A0A 
 2168      00
 2169 0095 000000   		.section	.text.motorHeartBeat_task,"ax",%progbits
 2170              		.align	2
 2171              		.global	motorHeartBeat_task
 2172              		.thumb
 2173              		.thumb_func
 2175              	motorHeartBeat_task:
 2176              	.LFB121:
 456:App/STM32F4-Discovery/modbus_mk.c **** 
 457:App/STM32F4-Discovery/modbus_mk.c **** 
 458:App/STM32F4-Discovery/modbus_mk.c **** 
 459:App/STM32F4-Discovery/modbus_mk.c **** /*===================================================================================
 460:App/STM32F4-Discovery/modbus_mk.c **** =====================================================================================
 461:App/STM32F4-Discovery/modbus_mk.c **** ============    		TASKS SECTION			===================== 
 462:App/STM32F4-Discovery/modbus_mk.c **** =====================================================================================
 463:App/STM32F4-Discovery/modbus_mk.c **** ====================================================================================*/
 464:App/STM32F4-Discovery/modbus_mk.c **** void motorHeartBeat_task(void * pvParameters)
 465:App/STM32F4-Discovery/modbus_mk.c **** {
 2177              		.loc 1 465 0
 2178              		.cfi_startproc
 2179              		@ args = 0, pretend = 0, frame = 32
 2180              		@ frame_needed = 1, uses_anonymous_args = 0
 2181 0000 80B5     		push	{r7, lr}
 2182              	.LCFI33:
 2183              		.cfi_def_cfa_offset 8
 2184              		.cfi_offset 7, -8
 2185              		.cfi_offset 14, -4
 2186 0002 88B0     		sub	sp, sp, #32
 2187              	.LCFI34:
 2188              		.cfi_def_cfa_offset 40
 2189 0004 00AF     		add	r7, sp, #0
 2190              	.LCFI35:
 2191              		.cfi_def_cfa_register 7
 2192 0006 7860     		str	r0, [r7, #4]
 466:App/STM32F4-Discovery/modbus_mk.c **** 	/*! sets speed of motor */
 467:App/STM32F4-Discovery/modbus_mk.c **** 
 468:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t tab_reg[10];
 469:App/STM32F4-Discovery/modbus_mk.c **** //	portTickType xLastWakeTime; 
 470:App/STM32F4-Discovery/modbus_mk.c **** //	xLastWakeTime = xTaskGetTickCount();
 471:App/STM32F4-Discovery/modbus_mk.c **** 	//vTaskDelay(portMAX_DELAY);	
 472:App/STM32F4-Discovery/modbus_mk.c **** 	//vTaskSuspend(NULL); 
 473:App/STM32F4-Discovery/modbus_mk.c **** 	int counter = 0;	
 2193              		.loc 1 473 0
 2194 0008 0023     		movs	r3, #0
 2195 000a FB61     		str	r3, [r7, #28]
 2196              	.L60:
 474:App/STM32F4-Discovery/modbus_mk.c **** 	for(;;)
 475:App/STM32F4-Discovery/modbus_mk.c **** 	{
 476:App/STM32F4-Discovery/modbus_mk.c **** 		#ifdef DEBUG
 477:App/STM32F4-Discovery/modbus_mk.c **** 		t_printf("HB: %d\n\n", counter);
 2197              		.loc 1 477 0 discriminator 1
 2198 000c 0948     		ldr	r0, .L61
 2199 000e F969     		ldr	r1, [r7, #28]
 2200 0010 FFF7FEFF 		bl	t_printf
 478:App/STM32F4-Discovery/modbus_mk.c **** 		#endif
 479:App/STM32F4-Discovery/modbus_mk.c **** 		modbus_RR(0,10,tab_reg);
 2201              		.loc 1 479 0 discriminator 1
 2202 0014 07F10803 		add	r3, r7, #8
 2203 0018 0020     		movs	r0, #0
 2204 001a 0A21     		movs	r1, #10
 2205 001c 1A46     		mov	r2, r3
 2206 001e FFF7FEFF 		bl	modbus_RR
 480:App/STM32F4-Discovery/modbus_mk.c **** 		counter ++;
 2207              		.loc 1 480 0 discriminator 1
 2208 0022 FB69     		ldr	r3, [r7, #28]
 2209 0024 0133     		adds	r3, r3, #1
 2210 0026 FB61     		str	r3, [r7, #28]
 481:App/STM32F4-Discovery/modbus_mk.c **** 	//	vTaskDelayUntil(&xLastWakeTime, 3000/portTICK_RATE_MS);
 482:App/STM32F4-Discovery/modbus_mk.c **** 		vTaskDelay(3000/portTICK_RATE_MS);
 2211              		.loc 1 482 0 discriminator 1
 2212 0028 40F6B830 		movw	r0, #3000
 2213 002c FFF7FEFF 		bl	vTaskDelay
 483:App/STM32F4-Discovery/modbus_mk.c **** 
 484:App/STM32F4-Discovery/modbus_mk.c **** 	}
 2214              		.loc 1 484 0 discriminator 1
 2215 0030 ECE7     		b	.L60
 2216              	.L62:
 2217 0032 00BF     		.align	2
 2218              	.L61:
 2219 0034 8C000000 		.word	.LC7
 2220              		.cfi_endproc
 2221              	.LFE121:
 2223              		.section	.text.motorControl_task,"ax",%progbits
 2224              		.align	2
 2225              		.global	motorControl_task
 2226              		.thumb
 2227              		.thumb_func
 2229              	motorControl_task:
 2230              	.LFB122:
 485:App/STM32F4-Discovery/modbus_mk.c **** 	/* Tasks must not attempt to return from their implementing
 486:App/STM32F4-Discovery/modbus_mk.c ****         function or otherwise exit.  In newer FreeRTOS port
 487:App/STM32F4-Discovery/modbus_mk.c ****         attempting to do so will result in an configASSERT() being
 488:App/STM32F4-Discovery/modbus_mk.c ****         called if it is defined.  If it is necessary for a task to
 489:App/STM32F4-Discovery/modbus_mk.c ****         exit then have the task call vTaskDelete( NULL ) to ensure
 490:App/STM32F4-Discovery/modbus_mk.c ****         its exit is clean. */
 491:App/STM32F4-Discovery/modbus_mk.c **** 	closesocket(socket_0);		
 492:App/STM32F4-Discovery/modbus_mk.c ****         vTaskDelete( NULL );
 493:App/STM32F4-Discovery/modbus_mk.c **** 
 494:App/STM32F4-Discovery/modbus_mk.c **** 
 495:App/STM32F4-Discovery/modbus_mk.c **** 
 496:App/STM32F4-Discovery/modbus_mk.c **** 
 497:App/STM32F4-Discovery/modbus_mk.c **** }
 498:App/STM32F4-Discovery/modbus_mk.c **** 
 499:App/STM32F4-Discovery/modbus_mk.c **** void motorControl_task(void * pvParameters)
 500:App/STM32F4-Discovery/modbus_mk.c **** {
 2231              		.loc 1 500 0
 2232              		.cfi_startproc
 2233              		@ args = 0, pretend = 0, frame = 32
 2234              		@ frame_needed = 1, uses_anonymous_args = 0
 2235 0000 80B5     		push	{r7, lr}
 2236              	.LCFI36:
 2237              		.cfi_def_cfa_offset 8
 2238              		.cfi_offset 7, -8
 2239              		.cfi_offset 14, -4
 2240 0002 88B0     		sub	sp, sp, #32
 2241              	.LCFI37:
 2242              		.cfi_def_cfa_offset 40
 2243 0004 00AF     		add	r7, sp, #0
 2244              	.LCFI38:
 2245              		.cfi_def_cfa_register 7
 2246 0006 7860     		str	r0, [r7, #4]
 501:App/STM32F4-Discovery/modbus_mk.c **** 	
 502:App/STM32F4-Discovery/modbus_mk.c **** 
 503:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t src[4];
 504:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t spd[5]; 
 505:App/STM32F4-Discovery/modbus_mk.c **** 	
 506:App/STM32F4-Discovery/modbus_mk.c **** 
 507:App/STM32F4-Discovery/modbus_mk.c **** //	vTaskSuspend(NULL);	
 508:App/STM32F4-Discovery/modbus_mk.c **** 
 509:App/STM32F4-Discovery/modbus_mk.c **** 	src[0]=1; src[1]=1; src[2]=1; src[3]=1;
 2247              		.loc 1 509 0
 2248 0008 0123     		movs	r3, #1
 2249 000a 3B75     		strb	r3, [r7, #20]
 2250 000c 0123     		movs	r3, #1
 2251 000e 7B75     		strb	r3, [r7, #21]
 2252 0010 0123     		movs	r3, #1
 2253 0012 BB75     		strb	r3, [r7, #22]
 2254 0014 0123     		movs	r3, #1
 2255 0016 FB75     		strb	r3, [r7, #23]
 510:App/STM32F4-Discovery/modbus_mk.c **** 	
 511:App/STM32F4-Discovery/modbus_mk.c **** //	spd[0]=1500;spd[1]=0;spd[2]=2250;spd[3]=10;spd[4]=10;
 512:App/STM32F4-Discovery/modbus_mk.c **** 	
 513:App/STM32F4-Discovery/modbus_mk.c **** 	// create usart semaphore 
 514:App/STM32F4-Discovery/modbus_mk.c **** 	xSmphrUSART = xSemaphoreCreateBinary();	
 2256              		.loc 1 514 0
 2257 0018 0120     		movs	r0, #1
 2258 001a 0021     		movs	r1, #0
 2259 001c 0322     		movs	r2, #3
 2260 001e FFF7FEFF 		bl	xQueueGenericCreate
 2261 0022 0246     		mov	r2, r0
 2262 0024 954B     		ldr	r3, .L78
 2263 0026 1A60     		str	r2, [r3]
 515:App/STM32F4-Discovery/modbus_mk.c **** 	
 516:App/STM32F4-Discovery/modbus_mk.c **** 	portTickType xDelay = portMAX_DELAY;//3000 / portTICK_RATE_MS;	
 2264              		.loc 1 516 0
 2265 0028 4FF0FF33 		mov	r3, #-1
 2266 002c FB61     		str	r3, [r7, #28]
 517:App/STM32F4-Discovery/modbus_mk.c **** 	
 518:App/STM32F4-Discovery/modbus_mk.c **** 
 519:App/STM32F4-Discovery/modbus_mk.c **** 	static	QueueTelegram telegramR, telegramS; 
 520:App/STM32F4-Discovery/modbus_mk.c **** 
 521:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.data[0] = 1000;
 2267              		.loc 1 521 0
 2268 002e 944B     		ldr	r3, .L78+4
 2269 0030 4FF47A72 		mov	r2, #1000
 2270 0034 1A81     		strh	r2, [r3, #8]	@ movhi
 522:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.data[1] = 0;	
 2271              		.loc 1 522 0
 2272 0036 924B     		ldr	r3, .L78+4
 2273 0038 0022     		movs	r2, #0
 2274 003a 5A81     		strh	r2, [r3, #10]	@ movhi
 523:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.data[2] = 2250;
 2275              		.loc 1 523 0
 2276 003c 904B     		ldr	r3, .L78+4
 2277 003e 40F6CA02 		movw	r2, #2250
 2278 0042 9A81     		strh	r2, [r3, #12]	@ movhi
 524:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.data[3] = 10;	
 2279              		.loc 1 524 0
 2280 0044 8E4B     		ldr	r3, .L78+4
 2281 0046 0A22     		movs	r2, #10
 2282 0048 DA81     		strh	r2, [r3, #14]	@ movhi
 525:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.data[4] = 10;	
 2283              		.loc 1 525 0
 2284 004a 8D4B     		ldr	r3, .L78+4
 2285 004c 0A22     		movs	r2, #10
 2286 004e 1A82     		strh	r2, [r3, #16]	@ movhi
 526:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.size = 5;
 2287              		.loc 1 526 0
 2288 0050 8B4B     		ldr	r3, .L78+4
 2289 0052 0522     		movs	r2, #5
 2290 0054 5A60     		str	r2, [r3, #4]
 527:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.Qcmd = SETDATA;	
 2291              		.loc 1 527 0
 2292 0056 8A4B     		ldr	r3, .L78+4
 2293 0058 0022     		movs	r2, #0
 2294 005a 1A70     		strb	r2, [r3]
 528:App/STM32F4-Discovery/modbus_mk.c **** 
 529:App/STM32F4-Discovery/modbus_mk.c **** 	
 530:App/STM32F4-Discovery/modbus_mk.c **** 
 531:App/STM32F4-Discovery/modbus_mk.c **** 	int HB_flag = 0;
 2295              		.loc 1 531 0
 2296 005c 0023     		movs	r3, #0
 2297 005e BB61     		str	r3, [r7, #24]
 2298              	.L77:
 532:App/STM32F4-Discovery/modbus_mk.c **** 	
 533:App/STM32F4-Discovery/modbus_mk.c **** 	while (1)
 534:App/STM32F4-Discovery/modbus_mk.c **** 	{
 535:App/STM32F4-Discovery/modbus_mk.c **** 
 536:App/STM32F4-Discovery/modbus_mk.c **** 		
 537:App/STM32F4-Discovery/modbus_mk.c **** 	
 538:App/STM32F4-Discovery/modbus_mk.c **** 		if (xQueueReceive(QSpd_handle, (void *)&telegramR, xDelay  ) == pdPASS)
 2299              		.loc 1 538 0
 2300 0060 884B     		ldr	r3, .L78+8
 2301 0062 1B68     		ldr	r3, [r3]
 2302 0064 1846     		mov	r0, r3
 2303 0066 8649     		ldr	r1, .L78+4
 2304 0068 FA69     		ldr	r2, [r7, #28]
 2305 006a 0023     		movs	r3, #0
 2306 006c FFF7FEFF 		bl	xQueueGenericReceive
 2307 0070 0346     		mov	r3, r0
 2308 0072 012B     		cmp	r3, #1
 2309 0074 40F00081 		bne	.L64
 539:App/STM32F4-Discovery/modbus_mk.c **** 		{
 540:App/STM32F4-Discovery/modbus_mk.c **** 			switch ( telegramR.Qcmd )
 2310              		.loc 1 540 0
 2311 0078 814B     		ldr	r3, .L78+4
 2312 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2313 007c 052B     		cmp	r3, #5
 2314 007e 00F2EF80 		bhi	.L65
 2315 0082 01A2     		adr	r2, .L67
 2316 0084 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2317              		.p2align 2
 2318              	.L67:
 2319 0088 A1000000 		.word	.L66+1
 2320 008c 2D010000 		.word	.L68+1
 2321 0090 61020000 		.word	.L65+1
 2322 0094 61020000 		.word	.L65+1
 2323 0098 75010000 		.word	.L69+1
 2324 009c 05020000 		.word	.L70+1
 2325              		.p2align 1
 2326              	.L66:
 541:App/STM32F4-Discovery/modbus_mk.c **** 			{
 542:App/STM32F4-Discovery/modbus_mk.c **** 				case SETDATA:
 543:App/STM32F4-Discovery/modbus_mk.c **** 
 544:App/STM32F4-Discovery/modbus_mk.c **** 					src[0]=1; src[1]=1; src[2]=1; src[3]=1;
 2327              		.loc 1 544 0
 2328 00a0 0123     		movs	r3, #1
 2329 00a2 3B75     		strb	r3, [r7, #20]
 2330 00a4 0123     		movs	r3, #1
 2331 00a6 7B75     		strb	r3, [r7, #21]
 2332 00a8 0123     		movs	r3, #1
 2333 00aa BB75     		strb	r3, [r7, #22]
 2334 00ac 0123     		movs	r3, #1
 2335 00ae FB75     		strb	r3, [r7, #23]
 545:App/STM32F4-Discovery/modbus_mk.c **** 
 546:App/STM32F4-Discovery/modbus_mk.c **** 					if ( !modbus_WIB( 0 , 3, src))
 2336              		.loc 1 546 0
 2337 00b0 07F11403 		add	r3, r7, #20
 2338 00b4 0020     		movs	r0, #0
 2339 00b6 0321     		movs	r1, #3
 2340 00b8 1A46     		mov	r2, r3
 2341 00ba FFF7FEFF 		bl	modbus_WIB
 2342 00be 0346     		mov	r3, r0
 2343 00c0 002B     		cmp	r3, #0
 2344 00c2 0BD1     		bne	.L71
 547:App/STM32F4-Discovery/modbus_mk.c **** 					{
 548:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 549:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2345              		.loc 1 549 0
 2346 00c4 704B     		ldr	r3, .L78+12
 2347 00c6 0722     		movs	r2, #7
 2348 00c8 1A70     		strb	r2, [r3]
 550:App/STM32F4-Discovery/modbus_mk.c **** 						xQueueSend(QSpd_handle, &telegramS, xDelay);
 2349              		.loc 1 550 0
 2350 00ca 6E4B     		ldr	r3, .L78+8
 2351 00cc 1B68     		ldr	r3, [r3]
 2352 00ce 1846     		mov	r0, r3
 2353 00d0 6D49     		ldr	r1, .L78+12
 2354 00d2 FA69     		ldr	r2, [r7, #28]
 2355 00d4 0023     		movs	r3, #0
 2356 00d6 FFF7FEFF 		bl	xQueueGenericSend
 551:App/STM32F4-Discovery/modbus_mk.c **** 						break;
 2357              		.loc 1 551 0
 2358 00da CDE0     		b	.L64
 2359              	.L71:
 552:App/STM32F4-Discovery/modbus_mk.c **** 					}
 553:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2360              		.loc 1 553 0
 2361 00dc 4FF47A70 		mov	r0, #1000
 2362 00e0 FFF7FEFF 		bl	vTaskDelay
 554:App/STM32F4-Discovery/modbus_mk.c **** 					
 555:App/STM32F4-Discovery/modbus_mk.c **** 					if (!modbus_WR(0, 5, telegramR.data))
 2363              		.loc 1 555 0
 2364 00e4 0020     		movs	r0, #0
 2365 00e6 0521     		movs	r1, #5
 2366 00e8 684A     		ldr	r2, .L78+16
 2367 00ea FFF7FEFF 		bl	modbus_WR
 2368 00ee 0346     		mov	r3, r0
 2369 00f0 002B     		cmp	r3, #0
 2370 00f2 0BD1     		bne	.L72
 556:App/STM32F4-Discovery/modbus_mk.c **** 					{
 557:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 558:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2371              		.loc 1 558 0
 2372 00f4 644B     		ldr	r3, .L78+12
 2373 00f6 0722     		movs	r2, #7
 2374 00f8 1A70     		strb	r2, [r3]
 559:App/STM32F4-Discovery/modbus_mk.c **** 						xQueueSend(QSpd_handle, &telegramS, xDelay);
 2375              		.loc 1 559 0
 2376 00fa 624B     		ldr	r3, .L78+8
 2377 00fc 1B68     		ldr	r3, [r3]
 2378 00fe 1846     		mov	r0, r3
 2379 0100 6149     		ldr	r1, .L78+12
 2380 0102 FA69     		ldr	r2, [r7, #28]
 2381 0104 0023     		movs	r3, #0
 2382 0106 FFF7FEFF 		bl	xQueueGenericSend
 560:App/STM32F4-Discovery/modbus_mk.c **** 						break;
 2383              		.loc 1 560 0
 2384 010a B5E0     		b	.L64
 2385              	.L72:
 561:App/STM32F4-Discovery/modbus_mk.c **** 					}
 562:App/STM32F4-Discovery/modbus_mk.c **** 
 563:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2386              		.loc 1 563 0
 2387 010c 4FF47A70 		mov	r0, #1000
 2388 0110 FFF7FEFF 		bl	vTaskDelay
 564:App/STM32F4-Discovery/modbus_mk.c **** 
 565:App/STM32F4-Discovery/modbus_mk.c **** 				// send response to CLI 
 566:App/STM32F4-Discovery/modbus_mk.c **** 					telegramS.Qcmd = SUCCSESS;
 2389              		.loc 1 566 0
 2390 0114 5C4B     		ldr	r3, .L78+12
 2391 0116 0622     		movs	r2, #6
 2392 0118 1A70     		strb	r2, [r3]
 567:App/STM32F4-Discovery/modbus_mk.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2393              		.loc 1 567 0
 2394 011a 5A4B     		ldr	r3, .L78+8
 2395 011c 1B68     		ldr	r3, [r3]
 2396 011e 1846     		mov	r0, r3
 2397 0120 5949     		ldr	r1, .L78+12
 2398 0122 FA69     		ldr	r2, [r7, #28]
 2399 0124 0023     		movs	r3, #0
 2400 0126 FFF7FEFF 		bl	xQueueGenericSend
 568:App/STM32F4-Discovery/modbus_mk.c **** 
 569:App/STM32F4-Discovery/modbus_mk.c **** 					break;
 2401              		.loc 1 569 0
 2402 012a A5E0     		b	.L64
 2403              	.L68:
 570:App/STM32F4-Discovery/modbus_mk.c **** 				       	
 571:App/STM32F4-Discovery/modbus_mk.c **** 				
 572:App/STM32F4-Discovery/modbus_mk.c **** 				case GETDATA:
 573:App/STM32F4-Discovery/modbus_mk.c **** 				
 574:App/STM32F4-Discovery/modbus_mk.c **** 					if ( !modbus_RR(0, 10, telegramS.data))
 2404              		.loc 1 574 0
 2405 012c 0020     		movs	r0, #0
 2406 012e 0A21     		movs	r1, #10
 2407 0130 574A     		ldr	r2, .L78+20
 2408 0132 FFF7FEFF 		bl	modbus_RR
 2409 0136 0346     		mov	r3, r0
 2410 0138 002B     		cmp	r3, #0
 2411 013a 0BD1     		bne	.L73
 575:App/STM32F4-Discovery/modbus_mk.c **** 					{
 576:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 577:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2412              		.loc 1 577 0
 2413 013c 524B     		ldr	r3, .L78+12
 2414 013e 0722     		movs	r2, #7
 2415 0140 1A70     		strb	r2, [r3]
 578:App/STM32F4-Discovery/modbus_mk.c **** 						xQueueSend(QSpd_handle, &telegramS, xDelay);
 2416              		.loc 1 578 0
 2417 0142 504B     		ldr	r3, .L78+8
 2418 0144 1B68     		ldr	r3, [r3]
 2419 0146 1846     		mov	r0, r3
 2420 0148 4F49     		ldr	r1, .L78+12
 2421 014a FA69     		ldr	r2, [r7, #28]
 2422 014c 0023     		movs	r3, #0
 2423 014e FFF7FEFF 		bl	xQueueGenericSend
 579:App/STM32F4-Discovery/modbus_mk.c **** 						break;
 2424              		.loc 1 579 0
 2425 0152 91E0     		b	.L64
 2426              	.L73:
 580:App/STM32F4-Discovery/modbus_mk.c **** 					}
 581:App/STM32F4-Discovery/modbus_mk.c **** 
 582:App/STM32F4-Discovery/modbus_mk.c **** 				
 583:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2427              		.loc 1 583 0
 2428 0154 4FF47A70 		mov	r0, #1000
 2429 0158 FFF7FEFF 		bl	vTaskDelay
 584:App/STM32F4-Discovery/modbus_mk.c **** 
 585:App/STM32F4-Discovery/modbus_mk.c **** 					// send response to CLI 
 586:App/STM32F4-Discovery/modbus_mk.c **** 					telegramS.Qcmd = SUCCSESS;
 2430              		.loc 1 586 0
 2431 015c 4A4B     		ldr	r3, .L78+12
 2432 015e 0622     		movs	r2, #6
 2433 0160 1A70     		strb	r2, [r3]
 587:App/STM32F4-Discovery/modbus_mk.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2434              		.loc 1 587 0
 2435 0162 484B     		ldr	r3, .L78+8
 2436 0164 1B68     		ldr	r3, [r3]
 2437 0166 1846     		mov	r0, r3
 2438 0168 4749     		ldr	r1, .L78+12
 2439 016a FA69     		ldr	r2, [r7, #28]
 2440 016c 0023     		movs	r3, #0
 2441 016e FFF7FEFF 		bl	xQueueGenericSend
 588:App/STM32F4-Discovery/modbus_mk.c **** 
 589:App/STM32F4-Discovery/modbus_mk.c **** 					break;
 2442              		.loc 1 589 0
 2443 0172 81E0     		b	.L64
 2444              	.L69:
 590:App/STM32F4-Discovery/modbus_mk.c **** 
 591:App/STM32F4-Discovery/modbus_mk.c **** 				
 592:App/STM32F4-Discovery/modbus_mk.c **** 				case START: 
 593:App/STM32F4-Discovery/modbus_mk.c **** 					HB_flag = 1; 
 2445              		.loc 1 593 0
 2446 0174 0123     		movs	r3, #1
 2447 0176 BB61     		str	r3, [r7, #24]
 594:App/STM32F4-Discovery/modbus_mk.c **** 				//	vTaskResume(motorHeartBeatHandle);
 595:App/STM32F4-Discovery/modbus_mk.c **** 
 596:App/STM32F4-Discovery/modbus_mk.c **** 					// set motor speed to 10% 
 597:App/STM32F4-Discovery/modbus_mk.c **** 				         src[0]=1; src[1]=1; src[2]=1; src[3]=1;
 2448              		.loc 1 597 0
 2449 0178 0123     		movs	r3, #1
 2450 017a 3B75     		strb	r3, [r7, #20]
 2451 017c 0123     		movs	r3, #1
 2452 017e 7B75     		strb	r3, [r7, #21]
 2453 0180 0123     		movs	r3, #1
 2454 0182 BB75     		strb	r3, [r7, #22]
 2455 0184 0123     		movs	r3, #1
 2456 0186 FB75     		strb	r3, [r7, #23]
 598:App/STM32F4-Discovery/modbus_mk.c **** 
 599:App/STM32F4-Discovery/modbus_mk.c **** 					if( !modbus_WIB( 0 , 3, src) )
 2457              		.loc 1 599 0
 2458 0188 07F11403 		add	r3, r7, #20
 2459 018c 0020     		movs	r0, #0
 2460 018e 0321     		movs	r1, #3
 2461 0190 1A46     		mov	r2, r3
 2462 0192 FFF7FEFF 		bl	modbus_WIB
 2463 0196 0346     		mov	r3, r0
 2464 0198 002B     		cmp	r3, #0
 2465 019a 0BD1     		bne	.L74
 600:App/STM32F4-Discovery/modbus_mk.c **** 					{
 601:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 602:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2466              		.loc 1 602 0
 2467 019c 3A4B     		ldr	r3, .L78+12
 2468 019e 0722     		movs	r2, #7
 2469 01a0 1A70     		strb	r2, [r3]
 603:App/STM32F4-Discovery/modbus_mk.c **** 						xQueueSend(QSpd_handle, &telegramS, xDelay);
 2470              		.loc 1 603 0
 2471 01a2 384B     		ldr	r3, .L78+8
 2472 01a4 1B68     		ldr	r3, [r3]
 2473 01a6 1846     		mov	r0, r3
 2474 01a8 3749     		ldr	r1, .L78+12
 2475 01aa FA69     		ldr	r2, [r7, #28]
 2476 01ac 0023     		movs	r3, #0
 2477 01ae FFF7FEFF 		bl	xQueueGenericSend
 604:App/STM32F4-Discovery/modbus_mk.c **** 						break;
 2478              		.loc 1 604 0
 2479 01b2 61E0     		b	.L64
 2480              	.L74:
 605:App/STM32F4-Discovery/modbus_mk.c **** 					}
 606:App/STM32F4-Discovery/modbus_mk.c **** 
 607:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2481              		.loc 1 607 0
 2482 01b4 4FF47A70 		mov	r0, #1000
 2483 01b8 FFF7FEFF 		bl	vTaskDelay
 608:App/STM32F4-Discovery/modbus_mk.c **** 					if (!modbus_WR( 0, 5, telegramR.data))
 2484              		.loc 1 608 0
 2485 01bc 0020     		movs	r0, #0
 2486 01be 0521     		movs	r1, #5
 2487 01c0 324A     		ldr	r2, .L78+16
 2488 01c2 FFF7FEFF 		bl	modbus_WR
 2489 01c6 0346     		mov	r3, r0
 2490 01c8 002B     		cmp	r3, #0
 2491 01ca 0BD1     		bne	.L75
 609:App/STM32F4-Discovery/modbus_mk.c **** 					{
 610:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 611:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2492              		.loc 1 611 0
 2493 01cc 2E4B     		ldr	r3, .L78+12
 2494 01ce 0722     		movs	r2, #7
 2495 01d0 1A70     		strb	r2, [r3]
 612:App/STM32F4-Discovery/modbus_mk.c **** 						xQueueSend(QSpd_handle, &telegramS, xDelay);
 2496              		.loc 1 612 0
 2497 01d2 2C4B     		ldr	r3, .L78+8
 2498 01d4 1B68     		ldr	r3, [r3]
 2499 01d6 1846     		mov	r0, r3
 2500 01d8 2B49     		ldr	r1, .L78+12
 2501 01da FA69     		ldr	r2, [r7, #28]
 2502 01dc 0023     		movs	r3, #0
 2503 01de FFF7FEFF 		bl	xQueueGenericSend
 613:App/STM32F4-Discovery/modbus_mk.c **** 						break;
 2504              		.loc 1 613 0
 2505 01e2 49E0     		b	.L64
 2506              	.L75:
 614:App/STM32F4-Discovery/modbus_mk.c **** 					}
 615:App/STM32F4-Discovery/modbus_mk.c **** 
 616:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2507              		.loc 1 616 0
 2508 01e4 4FF47A70 		mov	r0, #1000
 2509 01e8 FFF7FEFF 		bl	vTaskDelay
 617:App/STM32F4-Discovery/modbus_mk.c **** 			
 618:App/STM32F4-Discovery/modbus_mk.c **** 					// send response to CLI 
 619:App/STM32F4-Discovery/modbus_mk.c **** 					telegramS.Qcmd = SUCCSESS;
 2510              		.loc 1 619 0
 2511 01ec 264B     		ldr	r3, .L78+12
 2512 01ee 0622     		movs	r2, #6
 2513 01f0 1A70     		strb	r2, [r3]
 620:App/STM32F4-Discovery/modbus_mk.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2514              		.loc 1 620 0
 2515 01f2 244B     		ldr	r3, .L78+8
 2516 01f4 1B68     		ldr	r3, [r3]
 2517 01f6 1846     		mov	r0, r3
 2518 01f8 2349     		ldr	r1, .L78+12
 2519 01fa FA69     		ldr	r2, [r7, #28]
 2520 01fc 0023     		movs	r3, #0
 2521 01fe FFF7FEFF 		bl	xQueueGenericSend
 621:App/STM32F4-Discovery/modbus_mk.c **** 
 622:App/STM32F4-Discovery/modbus_mk.c **** 					break;
 2522              		.loc 1 622 0
 2523 0202 39E0     		b	.L64
 2524              	.L70:
 623:App/STM32F4-Discovery/modbus_mk.c **** 				
 624:App/STM32F4-Discovery/modbus_mk.c **** 				case STOP:
 625:App/STM32F4-Discovery/modbus_mk.c **** 					
 626:App/STM32F4-Discovery/modbus_mk.c **** 				//	vTaskSuspend (motorHeartBeatHandle);	
 627:App/STM32F4-Discovery/modbus_mk.c **** 					// send stop bits to motor 
 628:App/STM32F4-Discovery/modbus_mk.c **** 					src[0]=0; src[1]=1; src[2]=1; src[3]=1;
 2525              		.loc 1 628 0
 2526 0204 0023     		movs	r3, #0
 2527 0206 3B75     		strb	r3, [r7, #20]
 2528 0208 0123     		movs	r3, #1
 2529 020a 7B75     		strb	r3, [r7, #21]
 2530 020c 0123     		movs	r3, #1
 2531 020e BB75     		strb	r3, [r7, #22]
 2532 0210 0123     		movs	r3, #1
 2533 0212 FB75     		strb	r3, [r7, #23]
 629:App/STM32F4-Discovery/modbus_mk.c **** 
 630:App/STM32F4-Discovery/modbus_mk.c **** 					if (!modbus_WIB( 0 , 3, src)) 
 2534              		.loc 1 630 0
 2535 0214 07F11403 		add	r3, r7, #20
 2536 0218 0020     		movs	r0, #0
 2537 021a 0321     		movs	r1, #3
 2538 021c 1A46     		mov	r2, r3
 2539 021e FFF7FEFF 		bl	modbus_WIB
 2540 0222 0346     		mov	r3, r0
 2541 0224 002B     		cmp	r3, #0
 2542 0226 0BD1     		bne	.L76
 631:App/STM32F4-Discovery/modbus_mk.c **** 					{
 632:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 633:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2543              		.loc 1 633 0
 2544 0228 174B     		ldr	r3, .L78+12
 2545 022a 0722     		movs	r2, #7
 2546 022c 1A70     		strb	r2, [r3]
 634:App/STM32F4-Discovery/modbus_mk.c **** 						xQueueSend(QSpd_handle, &telegramS, xDelay);
 2547              		.loc 1 634 0
 2548 022e 154B     		ldr	r3, .L78+8
 2549 0230 1B68     		ldr	r3, [r3]
 2550 0232 1846     		mov	r0, r3
 2551 0234 1449     		ldr	r1, .L78+12
 2552 0236 FA69     		ldr	r2, [r7, #28]
 2553 0238 0023     		movs	r3, #0
 2554 023a FFF7FEFF 		bl	xQueueGenericSend
 635:App/STM32F4-Discovery/modbus_mk.c **** 						break;
 2555              		.loc 1 635 0
 2556 023e 1BE0     		b	.L64
 2557              	.L76:
 636:App/STM32F4-Discovery/modbus_mk.c **** 					}
 637:App/STM32F4-Discovery/modbus_mk.c **** 
 638:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2558              		.loc 1 638 0
 2559 0240 4FF47A70 		mov	r0, #1000
 2560 0244 FFF7FEFF 		bl	vTaskDelay
 639:App/STM32F4-Discovery/modbus_mk.c **** 
 640:App/STM32F4-Discovery/modbus_mk.c **** 
 641:App/STM32F4-Discovery/modbus_mk.c **** 								// send response to CLI 
 642:App/STM32F4-Discovery/modbus_mk.c **** 					telegramS.Qcmd = SUCCSESS;
 2561              		.loc 1 642 0
 2562 0248 0F4B     		ldr	r3, .L78+12
 2563 024a 0622     		movs	r2, #6
 2564 024c 1A70     		strb	r2, [r3]
 643:App/STM32F4-Discovery/modbus_mk.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2565              		.loc 1 643 0
 2566 024e 0D4B     		ldr	r3, .L78+8
 2567 0250 1B68     		ldr	r3, [r3]
 2568 0252 1846     		mov	r0, r3
 2569 0254 0C49     		ldr	r1, .L78+12
 2570 0256 FA69     		ldr	r2, [r7, #28]
 2571 0258 0023     		movs	r3, #0
 2572 025a FFF7FEFF 		bl	xQueueGenericSend
 644:App/STM32F4-Discovery/modbus_mk.c **** 
 645:App/STM32F4-Discovery/modbus_mk.c **** 					break; 
 2573              		.loc 1 645 0
 2574 025e 0BE0     		b	.L64
 2575              	.L65:
 646:App/STM32F4-Discovery/modbus_mk.c **** 
 647:App/STM32F4-Discovery/modbus_mk.c **** 				default:
 648:App/STM32F4-Discovery/modbus_mk.c **** 
 649:App/STM32F4-Discovery/modbus_mk.c **** 					telegramS.Qcmd = ERROR_MODBUS;
 2576              		.loc 1 649 0
 2577 0260 094B     		ldr	r3, .L78+12
 2578 0262 0722     		movs	r2, #7
 2579 0264 1A70     		strb	r2, [r3]
 650:App/STM32F4-Discovery/modbus_mk.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2580              		.loc 1 650 0
 2581 0266 074B     		ldr	r3, .L78+8
 2582 0268 1B68     		ldr	r3, [r3]
 2583 026a 1846     		mov	r0, r3
 2584 026c 0649     		ldr	r1, .L78+12
 2585 026e FA69     		ldr	r2, [r7, #28]
 2586 0270 0023     		movs	r3, #0
 2587 0272 FFF7FEFF 		bl	xQueueGenericSend
 651:App/STM32F4-Discovery/modbus_mk.c **** 					break;
 2588              		.loc 1 651 0
 2589 0276 00BF     		nop
 2590              	.L64:
 652:App/STM32F4-Discovery/modbus_mk.c **** 
 653:App/STM32F4-Discovery/modbus_mk.c **** 					
 654:App/STM32F4-Discovery/modbus_mk.c **** 
 655:App/STM32F4-Discovery/modbus_mk.c **** 
 656:App/STM32F4-Discovery/modbus_mk.c **** 					
 657:App/STM32F4-Discovery/modbus_mk.c **** 			}
 658:App/STM32F4-Discovery/modbus_mk.c **** 		}
 659:App/STM32F4-Discovery/modbus_mk.c **** 	
 660:App/STM32F4-Discovery/modbus_mk.c **** 		
 661:App/STM32F4-Discovery/modbus_mk.c **** 	
 662:App/STM32F4-Discovery/modbus_mk.c **** 	}
 2591              		.loc 1 662 0
 2592 0278 F2E6     		b	.L77
 2593              	.L79:
 2594 027a 00BF     		.align	2
 2595              	.L78:
 2596 027c 00000000 		.word	xSmphrUSART
 2597 0280 00000000 		.word	telegramR.9444
 2598 0284 00000000 		.word	QSpd_handle
 2599 0288 00000000 		.word	telegramS.9445
 2600 028c 08000000 		.word	telegramR.9444+8
 2601 0290 08000000 		.word	telegramS.9445+8
 2602              		.cfi_endproc
 2603              	.LFE122:
 2605              		.section	.bss.cnt.9326,"aw",%nobits
 2608              	cnt.9326:
 2609 0000 00       		.space	1
 2610              		.section	.bss.telegramR.9444,"aw",%nobits
 2611              		.align	2
 2614              	telegramR.9444:
 2615 0000 00000000 		.space	28
 2615      00000000 
 2615      00000000 
 2615      00000000 
 2615      00000000 
 2616              		.section	.bss.telegramS.9445,"aw",%nobits
 2617              		.align	2
 2620              	telegramS.9445:
 2621 0000 00000000 		.space	28
 2621      00000000 
 2621      00000000 
 2621      00000000 
 2621      00000000 
 2622              		.text
 2623              	.Letext0:
 2624              		.file 2 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/lib/gcc/arm-none-eabi/4.8.4/include/std
 2625              		.file 3 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/machine/_default_
 2626              		.file 4 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/stdint.h"
 2627              		.file 5 "App/STM32F4-Discovery/Libraries/CMSIS/ST/STM32F4xx/Include/stm32f4xx.h"
 2628              		.file 6 "App/STM32F4-Discovery/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_gpio.h"
 2629              		.file 7 "App/STM32F4-Discovery/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
 2630              		.file 8 "App/STM32F4-Discovery/Libraries/STM32F4xx_StdPeriph_Driver/inc/misc.h"
 2631              		.file 9 "Source/portable/GCC/ARM_CM4F/portmacro.h"
 2632              		.file 10 "Source/include/task.h"
 2633              		.file 11 "Source/include/queue.h"
 2634              		.file 12 "Source/include/semphr.h"
 2635              		.file 13 "App/STM32F4-Discovery/main.h"
 2636              		.file 14 "Source/FreeRTOS-Plus-CLI/FreeRTOS_CLI.h"
 2637              		.file 15 "App/STM32F4-Discovery/tcpCLI.h"
 2638              		.file 16 "App/STM32F4-Discovery/modbus_mk.h"
 2639              		.file 17 "App/STM32F4-Discovery/Libraries/CMSIS/Include/core_cm4.h"
 2640              		.file 18 "App/STM32F4-Discovery/spi.h"
 2641              		.file 19 "App/STM32F4-Discovery/W5200.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 modbus_mk.c
                            *COM*:0000000000000004 xSemaphoreDMASPI
                            *COM*:0000000000000004 xSmphrUSART
                            *COM*:0000000000000004 motorHeartBeatHandle
                            *COM*:0000000000000004 motorHBHandle
                            *COM*:0000000000000004 QSpd_handle
                            *COM*:0000000000000004 QTCP_handle
                            *COM*:0000000000000004 socket_0
                            *COM*:00000000000007d0 bufferTX
                            *COM*:00000000000007d0 bufferRX
                            *COM*:0000000000000004 bufferRXidx
                            *COM*:0000000000000004 bufferTXidx
                            *COM*:0000000000000004 dat_lengthRX
                            *COM*:0000000000000004 dat_lengthTX
                            *COM*:0000000000000004 set_macTaskHandle
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:34     .rodata:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:42     .rodata.xMotorCommand:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:45     .rodata.xMotorCommand:0000000000000000 xMotorCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:59     .rodata.xTaskStatsCommand:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:62     .rodata.xTaskStatsCommand:0000000000000000 xTaskStatsCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:69     .rodata.table_crc_hi:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:72     .rodata.table_crc_hi:0000000000000000 table_crc_hi
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:330    .rodata.table_crc_lo:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:333    .rodata.table_crc_lo:0000000000000000 table_crc_lo
                            *COM*:0000000000000004 fd
                            *COM*:0000000000000201 received_string
                            *COM*:0000000000000004 rx_length
                            *COM*:0000000000000014 input_Register
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:595    .text.init_USARTx:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:600    .text.init_USARTx:0000000000000000 init_USARTx
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:748    .text.init_USARTx:00000000000000e4 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:755    .text.USART_puts:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:760    .text.USART_puts:0000000000000000 USART_puts
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:827    .text.USART_puts:000000000000004c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:832    .text.USART6_IRQHandler:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:837    .text.USART6_IRQHandler:0000000000000000 USART6_IRQHandler
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:941    .text.USART6_IRQHandler:0000000000000090 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:2608   .bss.cnt.9326:0000000000000000 cnt.9326
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:951    .text.crc16:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:956    .text.crc16:0000000000000000 crc16
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:1034   .text.crc16:0000000000000064 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:1044   .text.modbus_confirmation:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:1049   .text.modbus_confirmation:0000000000000000 modbus_confirmation
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:1122   .text.modbus_confirmation:0000000000000060 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:1134   .text.write_read_modbus:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:1139   .text.write_read_modbus:0000000000000000 write_read_modbus
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:1268   .text.write_read_modbus:00000000000000c0 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:1278   .text.modbus_RIB:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:1283   .text.modbus_RIB:0000000000000000 modbus_RIB
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:1402   .text.modbus_WIB:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:1407   .text.modbus_WIB:0000000000000000 modbus_WIB
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:1656   .text.modbus_WR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:1661   .text.modbus_WR:0000000000000000 modbus_WR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:1835   .text.modbus_WSR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:1840   .text.modbus_WSR:0000000000000000 modbus_WSR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:1978   .text.modbus_RR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:1983   .text.modbus_RR:0000000000000000 modbus_RR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:2170   .text.motorHeartBeat_task:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:2175   .text.motorHeartBeat_task:0000000000000000 motorHeartBeat_task
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:2219   .text.motorHeartBeat_task:0000000000000034 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:2224   .text.motorControl_task:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:2229   .text.motorControl_task:0000000000000000 motorControl_task
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:2319   .text.motorControl_task:0000000000000088 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:2325   .text.motorControl_task:00000000000000a0 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:2596   .text.motorControl_task:000000000000027c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:2614   .bss.telegramR.9444:0000000000000000 telegramR.9444
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:2620   .bss.telegramS.9445:0000000000000000 telegramS.9445
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:2609   .bss.cnt.9326:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:2611   .bss.telegramR.9444:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccJLtd4s.s:2617   .bss.telegramS.9445:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
prvMotorCommand
prvTaskStatsCommand
RCC_APB2PeriphClockCmd
RCC_AHB1PeriphClockCmd
GPIO_Init
GPIO_PinAFConfig
USART_Init
USART_ITConfig
NVIC_Init
USART_Cmd
USART_GetITStatus
USART_ClearITPendingBit
xQueueGenericSendFromISR
t_printf
xQueueGenericReceive
vTaskDelay
xQueueGenericCreate
xQueueGenericSend
